[{"D:\\Code\\HTML\\BlogProject\\client\\src\\index.js":"1","D:\\Code\\HTML\\BlogProject\\client\\src\\reportWebVitals.js":"2","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\index.js":"3","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\reportWebVitals.js":"4","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\app\\store.js":"5","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\App.jsx":"6","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\features\\post\\blogSlice.js":"7","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\features\\user\\userSlice.js":"8","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\features\\account\\accountSlice.js":"9","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\features\\user\\bloggerSlice.js":"10","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\Layout.jsx":"11","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\features\\topic\\topicSlice.js":"12","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\Signup.jsx":"13","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\PageNotFound.jsx":"14","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\Login.jsx":"15","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\setAuthToken.js":"16","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\Footer.jsx":"17","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\Header.jsx":"18","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\routes\\routes.jsx":"19","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\SettingsMenu.jsx":"20","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\DropdownMenu.jsx":"21","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\NoTopicNotif.jsx":"22","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\Category.jsx":"23","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\Blog.jsx":"24","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\Home.jsx":"25","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\About.jsx":"26","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\EditBlog.jsx":"27","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\NewBlog.jsx":"28","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\Settings.jsx":"29","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\utils\\namingSlugs.js":"30","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\Helmet.jsx":"31","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\CategoryCard.jsx":"32","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\Banner.jsx":"33","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\Topic.jsx":"34","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\BlogCard.jsx":"35","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\MessageBox.jsx":"36","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\features\\common\\common.js":"37","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\features\\common\\authHeader.js":"38","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\Checkbox.jsx":"39","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\features\\comment\\commentSlice.js":"40","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\Comment.jsx":"41","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\Reply.jsx":"42","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\BloggerCard.jsx":"43"},{"size":698,"mtime":1660644182608,"results":"44","hashOfConfig":"45"},{"size":362,"mtime":1658147476063,"results":"46","hashOfConfig":"45"},{"size":698,"mtime":1674164251848,"results":"47","hashOfConfig":"48"},{"size":375,"mtime":1674164251851,"results":"49","hashOfConfig":"48"},{"size":733,"mtime":1674332751636,"results":"50","hashOfConfig":"48"},{"size":793,"mtime":1674244350276,"results":"51","hashOfConfig":"48"},{"size":4478,"mtime":1674298559828,"results":"52","hashOfConfig":"48"},{"size":2234,"mtime":1674243702187,"results":"53","hashOfConfig":"48"},{"size":2630,"mtime":1674244512187,"results":"54","hashOfConfig":"48"},{"size":1545,"mtime":1674584843365,"results":"55","hashOfConfig":"48"},{"size":1552,"mtime":1674298093416,"results":"56","hashOfConfig":"48"},{"size":1843,"mtime":1674211882894,"results":"57","hashOfConfig":"48"},{"size":5012,"mtime":1674216960100,"results":"58","hashOfConfig":"48"},{"size":137,"mtime":1674164251850,"results":"59","hashOfConfig":"48"},{"size":3374,"mtime":1674245884785,"results":"60","hashOfConfig":"48"},{"size":271,"mtime":1674164251857,"results":"61","hashOfConfig":"48"},{"size":116,"mtime":1674164251843,"results":"62","hashOfConfig":"48"},{"size":8807,"mtime":1674671463011,"results":"63","hashOfConfig":"48"},{"size":895,"mtime":1674242653914,"results":"64","hashOfConfig":"48"},{"size":1438,"mtime":1674164251845,"results":"65","hashOfConfig":"48"},{"size":910,"mtime":1674298195523,"results":"66","hashOfConfig":"48"},{"size":497,"mtime":1674164251845,"results":"67","hashOfConfig":"48"},{"size":4074,"mtime":1674297072130,"results":"68","hashOfConfig":"48"},{"size":4900,"mtime":1674674694091,"results":"69","hashOfConfig":"48"},{"size":4662,"mtime":1674672465953,"results":"70","hashOfConfig":"48"},{"size":2408,"mtime":1674242533926,"results":"71","hashOfConfig":"48"},{"size":3263,"mtime":1674296358859,"results":"72","hashOfConfig":"48"},{"size":8233,"mtime":1674294936772,"results":"73","hashOfConfig":"48"},{"size":4028,"mtime":1674242715021,"results":"74","hashOfConfig":"48"},{"size":279,"mtime":1674164251857,"results":"75","hashOfConfig":"48"},{"size":263,"mtime":1674164251844,"results":"76","hashOfConfig":"48"},{"size":5037,"mtime":1674297173469,"results":"77","hashOfConfig":"48"},{"size":896,"mtime":1674164251843,"results":"78","hashOfConfig":"48"},{"size":3871,"mtime":1674164251845,"results":"79","hashOfConfig":"48"},{"size":1591,"mtime":1674164251843,"results":"80","hashOfConfig":"48"},{"size":2817,"mtime":1674298621406,"results":"81","hashOfConfig":"48"},{"size":133,"mtime":1674674754250,"results":"82","hashOfConfig":"48"},{"size":268,"mtime":1674208244737,"results":"83","hashOfConfig":"48"},{"size":2560,"mtime":1674294361855,"results":"84","hashOfConfig":"48"},{"size":1959,"mtime":1674418220078,"results":"85","hashOfConfig":"48"},{"size":6174,"mtime":1674559871170,"results":"86","hashOfConfig":"48"},{"size":3528,"mtime":1674674310448,"results":"87","hashOfConfig":"48"},{"size":1197,"mtime":1674672836280,"results":"88","hashOfConfig":"48"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1hcbhdr",{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},"73tzx2",{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"99"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"99"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"99"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"99"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"99"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"99"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"99"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"99"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"99"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"99"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"99"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"189","usedDeprecatedRules":"99"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"99"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227"},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Code\\HTML\\BlogProject\\client\\src\\index.js",[],[],[],"D:\\Code\\HTML\\BlogProject\\client\\src\\reportWebVitals.js",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\index.js",[],[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\reportWebVitals.js",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\app\\store.js",["237"],[],"import { configureStore, createStore } from '@reduxjs/toolkit';\r\nimport blogReducer from '../features/post/blogSlice';\r\nimport userReducer from '../features/user/userSlice';\r\nimport accountReducer from '../features/account/accountSlice';\r\nimport topicReducer from '../features/topic/topicSlice';\r\nimport bloggerReducer from '../features/user/bloggerSlice';\r\nimport commentSlice from '../features/comment/commentSlice';\r\n\r\nconst initialState = {};\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        blog: blogReducer,\r\n        user: userReducer,\r\n        account: accountReducer,\r\n        topic: topicReducer,\r\n        blogger: bloggerReducer,\r\n        comment: commentSlice,\r\n    },\r\n    preloadedState: initialState,\r\n});\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\App.jsx",["238","239"],[],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, Routes, HashRouter } from \"react-router-dom\";\r\n\r\nimport Layout from \"./Layout\";\r\nimport Signup from \"../pages/Signup\";\r\nimport Login from \"../pages/Login\";\r\nimport { selectAccount } from \"../features/account/accountSlice\";\r\nimport PageNotFound from \"../pages/PageNotFound\";\r\n\r\nconst App = () => {\r\n\tconst account = useSelector(selectAccount);\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t{/* {account ? (\r\n\t\t\t\t<Layout />\r\n\t\t\t) : ( */}\r\n\t\t\t<HashRouter>\r\n\t\t\t\t<Routes>\r\n\t\t\t\t\t<Route path=\"/:alias/*\" element={<Layout />} />\r\n\t\t\t\t\t<Route path=\"/signup\" element={<Signup />} />\r\n\t\t\t\t\t<Route path=\"/\" element={<Login />} />\r\n\t\t\t\t</Routes>\r\n\t\t\t</HashRouter>\r\n\t\t\t{/* )} */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\features\\post\\blogSlice.js",["240","241"],[],"import { createSlice, createAsyncThunk, nanoid } from '@reduxjs/toolkit';\r\nimport Axios from 'axios';\r\nimport authHeader from '../common/authHeader';\r\nimport serverUrl from '../common/common';\r\n\r\nconst blogUrl = 'api/blog';\r\n\r\nexport const getAllBlogsByUserIDAsync = createAsyncThunk(\r\n    'blogs/getAllBlogsByUserIDAsync',\r\n    async (userID) => {\r\n        const response = await Axios.get(\r\n            `${serverUrl}${blogUrl}?userID=${userID}`,\r\n            { headers: authHeader() }\r\n        );\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nexport const getBlogBySlugAsync = createAsyncThunk(\r\n    'blog/getBlogBySlugAsync',\r\n    async (slug) => {\r\n        const response = await Axios.get(\r\n            `${serverUrl}${blogUrl}/get-blog-by-slug?slug=${slug}`,\r\n            { headers: authHeader() }\r\n        );\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nexport const createNewBlogAsync = createAsyncThunk(\r\n    'blog/createNewBlogAsync',\r\n    async ({ blogReqData }) => {\r\n        const formData = new FormData();\r\n        formData.append('title', blogReqData.title);\r\n        formData.append('coverImg', blogReqData.coverImg);\r\n        formData.append('topicID', blogReqData.topicID);\r\n        formData.append('slug', blogReqData.slug);\r\n        formData.append('content', blogReqData.content);\r\n        formData.append('quote', blogReqData.quote);\r\n        formData.append('date', blogReqData.date);\r\n        formData.append('location', blogReqData.location);\r\n        formData.append('published', blogReqData.published);\r\n        formData.append('signature', blogReqData.signature);\r\n        const response = await Axios.post(serverUrl + blogUrl, formData, {\r\n            headers: authHeader(),\r\n        });\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nexport const updateBlogAsync = createAsyncThunk(\r\n    'blog/updateBlogAsync',\r\n    async ({ blogReqData }) => {\r\n        const id = blogReqData._id;\r\n        const formData = new FormData();\r\n        console.log(id);\r\n        blogReqData.title && formData.append('title', blogReqData.title);\r\n        blogReqData.coverImg &&\r\n            formData.append('coverImg', blogReqData.coverImg);\r\n        blogReqData.topicID && formData.append('topicID', blogReqData.topicID);\r\n        blogReqData.slug && formData.append('slug', blogReqData.slug);\r\n        blogReqData.content && formData.append('content', blogReqData.content);\r\n        blogReqData.quote && formData.append('quote', blogReqData.quote);\r\n        blogReqData.date && formData.append('date', blogReqData.date);\r\n        blogReqData.location &&\r\n            formData.append('location', blogReqData.location);\r\n        formData.append('published', blogReqData.published);\r\n        blogReqData.signature &&\r\n            formData.append('signature', blogReqData.signature);\r\n        const response = await Axios.put(\r\n            `${serverUrl}${blogUrl}/${id}`,\r\n            formData,\r\n            { headers: authHeader() }\r\n        );\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nexport const deleteBlogAsync = createAsyncThunk(\r\n    'blog/deleteBlogAsync',\r\n    async (id) => {\r\n        const response = await Axios.delete(`${serverUrl}${blogUrl}/${id}`, {\r\n            headers: authHeader(),\r\n        });\r\n        window.location.reload(false);\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nconst blogSlice = createSlice({\r\n    name: 'blog',\r\n    initialState: [],\r\n    reducers: {},\r\n    extraReducers: {\r\n        [getAllBlogsByUserIDAsync.fulfilled]: (state, action) => {\r\n            console.log('fetching blogs by userID successfully');\r\n            return action.payload.tasks.result;\r\n        },\r\n        [getBlogBySlugAsync.fulfilled]: (state, action) => {\r\n            console.log('fetching blog by slug successfully');\r\n            return action.payload.tasks.result;\r\n        },\r\n        [createNewBlogAsync.fulfilled]: (state, action) => {\r\n            console.log('added new blog successfully');\r\n            return action.payload.tasks.result;\r\n        },\r\n        [updateBlogAsync.fulfilled]: (state, action) => {\r\n            console.log('updated blog successfully');\r\n            return action.payload.tasks.result;\r\n        },\r\n    },\r\n});\r\nexport const {} = blogSlice.actions;\r\n\r\nexport const selectPost = (state) => state.blog.blog;\r\n\r\nexport default blogSlice.reducer;\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\features\\user\\userSlice.js",["242"],[],"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport Axios from 'axios';\r\nimport authHeader from '../common/authHeader';\r\nimport serverUrl from '../common/common';\r\n\r\nconst userUrl = 'api/user';\r\n\r\nexport const getUserByUsernameAsync = createAsyncThunk(\r\n    'api/user/getUserByUsernameAsync',\r\n    async ({ username }) => {\r\n        const response = await Axios.get(\r\n            `${serverUrl}${userUrl}/get-user-by-username?username=${username}`,\r\n            { headers: authHeader() }\r\n        );\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nexport const updateUserAsync = createAsyncThunk('', async ({ id, userReq }) => {\r\n    const formData = new FormData();\r\n    userReq.name && formData.append('name', userReq.name);\r\n    userReq.alias && formData.append('alias', userReq.alias);\r\n    userReq.gender && formData.append('gender', userReq.gender);\r\n    userReq.date && formData.append('date', userReq.date);\r\n    userReq.tel && formData.append('tel', userReq.tel);\r\n    userReq.job && formData.append('job', userReq.job);\r\n    userReq.address && formData.append('address', userReq.address);\r\n    userReq.email && formData.append('email', userReq.email);\r\n    userReq.profilepic && formData.append('profilepic', userReq.profilepic);\r\n    userReq.upperpic && formData.append('upperpic', userReq.upperpic);\r\n    userReq.lowerpic && formData.append('lowerpic', userReq.lowerpic);\r\n    console.log(userReq.profilepic);\r\n    const response = await Axios.put(\r\n        `${serverUrl}${userUrl}/update-user?id=${id}`,\r\n        formData,\r\n        { headers: authHeader() }\r\n    );\r\n    const tasks = response.data;\r\n    return { tasks };\r\n});\r\n\r\nexport const userSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        user: null,\r\n    },\r\n    reducers: {},\r\n    extraReducers: {\r\n        [getUserByUsernameAsync.fulfilled]: (state, action) => {\r\n            console.log('get user by username successfully');\r\n            // state.user = action.payload.tasks;\r\n            return action.payload.tasks.result;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {} = userSlice.actions;\r\n\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\features\\account\\accountSlice.js",["243","244"],[],"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport Axios from 'axios';\r\nimport setAuthToken from '../../setAuthToken';\r\nimport authHeader from '../common/authHeader';\r\nimport serverUrl from '../common/common';\r\n\r\nconst accountUrl = 'api/account';\r\n\r\nexport const setCurrentUser = (decoded) => {\r\n    return {\r\n        payload: decoded,\r\n    };\r\n};\r\n\r\nexport const authenticateUserAsync = createAsyncThunk(\r\n    'auth/authenticateUserAsync',\r\n    async (user) => {\r\n        const response = await Axios.post(serverUrl + 'auth/login', user);\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nexport const createNewAccountAsync = createAsyncThunk(\r\n    'api/user/createNewAccountAsync',\r\n    async ({ account }) => {\r\n        const response = await Axios.post(serverUrl + accountUrl, account);\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nexport const accountSlice = createSlice({\r\n    name: 'account',\r\n    initialState: {\r\n        account: null,\r\n    },\r\n    reducers: {\r\n        // login: (state, action) => {\r\n        // \tconst data = {\r\n        // \t\tusername: action.payload.username,\r\n        // \t\tpassword: action.payload.password,\r\n        // \t};\r\n        // \tAxios.post(\"http://localhost:5000/auth\", { data })\r\n        // \t\t.then((res) => {\r\n        // \t\t\tif (res) {\r\n        // \t\t\t\tstate.account = action.payload;\r\n        // \t\t\t\tconsole.log(state.account);\r\n        // \t\t\t} else state.account = null;\r\n        // \t\t})\r\n        // \t\t.catch((error) => {\r\n        // \t\t\tconsole.log(error);\r\n        // \t\t});\r\n        // },\r\n        logout: (state) => {\r\n            localStorage.setItem('user', null)\r\n            state.account = null;\r\n            state.user = null;\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [authenticateUserAsync.fulfilled]: (state, action) => {\r\n            console.log('Authenticated user successfully');\r\n            const account = action.payload.tasks;\r\n            localStorage.setItem('user', JSON.stringify(account));\r\n            console.log(account)\r\n            // setAuthToken(token);\r\n            if (action.payload.tasks)\r\n                state.account = action.payload.tasks.account;\r\n            else state.account = null;\r\n        },\r\n        [createNewAccountAsync.fulfilled]: (state, action) => {\r\n            console.log('Created new account successfully');\r\n            return action.payload.tasks.result;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { logout } = accountSlice.actions;\r\n\r\nexport const selectAccount = (state) => state.account.account;\r\n\r\nexport default accountSlice.reducer;\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\features\\user\\bloggerSlice.js",["245"],[],"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport Axios from 'axios';\r\nimport authHeader from '../common/authHeader';\r\nimport serverUrl from '../common/common';\r\n\r\nconst userUrl = 'api/user';\r\n\r\nexport const getBloggerByAliasAsync = createAsyncThunk(\r\n    'api/user/getBloggerByAliasAsync',\r\n    async (alias) => {\r\n        const response = await Axios.get(\r\n            `${serverUrl}${userUrl}/get-user-by-alias?alias=${alias}`,\r\n            { headers: authHeader() }\r\n        );\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nexport const getBloggerByUserID = createAsyncThunk('', async (userID) => {\r\n    const response = await Axios.get(\r\n        `${serverUrl}${userUrl}/get-user-by-id?userID=${userID}`,\r\n        { headers: authHeader() }\r\n    );\r\n    const tasks = response.data;\r\n    return tasks;\r\n});\r\n\r\nexport const bloggerSlice = createSlice({\r\n    name: 'blogger',\r\n    initialState: {\r\n        blogger: null,\r\n    },\r\n    reducers: {},\r\n    extraReducers: {\r\n        [getBloggerByAliasAsync.fulfilled]: (state, action) => {\r\n            console.log('get blogger by alias successfully');\r\n            // state.user = action.payload.tasks;\r\n            return action.payload.tasks.result;\r\n        },\r\n        [getBloggerByUserID.fulfilled]: (state, action) => {\r\n            console.log(action.payload.tasks);\r\n        },\r\n    },\r\n});\r\n\r\nexport const {} = bloggerSlice.actions;\r\n\r\nexport const selectBlogger = (state) => state.blogger;\r\n\r\nexport default bloggerSlice.reducer;\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\Layout.jsx",["246"],[],"import Footer from './Footer';\r\nimport Header from './Header';\r\nimport Routes from '../routes/routes';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getBloggerByAliasAsync } from '../features/user/bloggerSlice';\r\nimport { getUserByUsernameAsync } from '../features/user/userSlice';\r\n\r\nfunction Layout() {\r\n    const params = useParams();\r\n    const alias = params.alias;\r\n    const dispatch = useDispatch();\r\n    const blogger = useSelector((state) => state.blogger);\r\n    const user = useSelector((state) => state.user);\r\n    const username = JSON.parse(localStorage.getItem('user'))?.account\r\n        ?.username;\r\n    useEffect(() => {\r\n        dispatch(getBloggerByAliasAsync(alias || user.alias));\r\n        // if (account.alias === blogger.alias) {\r\n        username && dispatch(getUserByUsernameAsync({ username: username }));\r\n        //     user.account = userSelector;\r\n        // \tconsole.log(user)\r\n        // localStorage.setItem('user', JSON.stringify(user));\r\n        // }\r\n    }, [dispatch, alias, blogger.alias, username, user.alias]);\r\n\r\n    return (\r\n        // <HashRouter>\r\n        <div className=\"App\">\r\n            <Header></Header>\r\n            <div className=\"container\">\r\n                <div className=\"main\">\r\n                    <Routes blogger={blogger} />\r\n                </div>\r\n            </div>\r\n            {/* <Footer></Footer> */}\r\n        </div>\r\n        // </HashRouter>\r\n    );\r\n}\r\n\r\nexport default Layout;\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\features\\topic\\topicSlice.js",["247"],[],"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport Axios from 'axios';\r\nimport authHeader from '../common/authHeader';\r\nimport serverUrl from '../common/common';\r\n\r\nconst topicUrl = 'api/topic';\r\n\r\nexport const getAllTopicsByUserIDAsync = createAsyncThunk(\r\n    'topic/getAllTopicsByUserIDAsync',\r\n    async (userID) => {\r\n        const response = await Axios.get(\r\n            `${serverUrl}${topicUrl}?userID=${userID}`,\r\n            { headers: authHeader() }\r\n        );\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nexport const getAllTopicBySlugAsync = createAsyncThunk(\r\n    'topic/getAllTopicBySlugAsync',\r\n    async (slug) => {\r\n        const response = await Axios.get(\r\n            `${serverUrl}${topicUrl}/get-topic-by-slug?slug=${slug}`,\r\n            { headers: authHeader() }\r\n        );\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nexport const createNewTopic = createAsyncThunk(\r\n    'topic/createNewTopic',\r\n    async ({ topic }) => {\r\n        console.log(topic);\r\n        const response = await Axios.post(serverUrl + topicUrl, topic, {\r\n            headers: authHeader(),\r\n        });\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nconst topicSlice = createSlice({\r\n    name: 'topic',\r\n    initialState: [],\r\n    reducers: {},\r\n    extraReducers: {\r\n        [getAllTopicsByUserIDAsync.fulfilled]: (state, action) => {\r\n            console.log('fetching topics successfully');\r\n            return action.payload.tasks.result;\r\n        },\r\n        [createNewTopic.fulfilled]: (state, action) => {\r\n            console.log('create new topic successfully');\r\n            return action.payload.tasks.result;\r\n        },\r\n    },\r\n});\r\nexport const {} = topicSlice.actions;\r\nexport default topicSlice.reducer;\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\Signup.jsx",["248"],[],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { createNewAccountAsync } from \"../features/account/accountSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport loginImage01 from \"../assets/image/login/login-image-01.png\";\r\n\r\nconst Signup = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst navigate = useNavigate();\r\n\r\n\tconst initialAccountState = {\r\n\t\tname: \"\",\r\n\t\talias: \"\",\r\n\t\tgender: true,\r\n\t\tdate: '2023-01-01',\r\n\t\ttel: \"\",\r\n\t\tjob: \"\",\r\n\t\taddress: \"\",\r\n\t\temail: \"\",\r\n\t\tprofilepic: \"\",\r\n\t\tupperpic: \"\",\r\n\t\tlowerpic: \"\",\r\n\t\tusername: \"\",\r\n\t\tpassword: \"\",\r\n\t};\r\n\r\n\tconst [fullName, setFullName] = useState({ firstName: \"\", surName: \"\" });\r\n\r\n\tconst [account, setAccount] = useState(initialAccountState);\r\n\r\n\tconst handleChange = (input) => (event) => {\r\n\t\tsetAccount({ ...account, [input]: event.target.value });\r\n\t};\r\n\r\n\tconst handleNameChange = (input) => (event) => {\r\n\t\tfullName[input] = event.target.value;\r\n\t\taccount.name = fullName.surName + \" \" + fullName.firstName;\r\n\t\t// setAccount({\r\n\t\t// \t...account,\r\n\t\t// \tname: fullName.surName + \" \" + fullName.firstName,\r\n\t\t// });\r\n\t};\r\n\r\n\tconst handleSignUp = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log(\"registering...\");\r\n\t\tsetAccount({ ...account, date: new Date(account.date) });\r\n\t\tawait dispatch(createNewAccountAsync({ account }));\r\n\t\tnavigate(\"/\");\r\n\t};\r\n\r\n\t\r\n\r\n\treturn (\r\n\t\t<div className=\"login\">\r\n\t\t\t<div className=\"login__image signup\">\r\n\t\t\t\t<img src={loginImage01} alt=\"\" />\r\n\t\t\t</div>\r\n\t\t\t{/* <div className=\"login__image login__image__after signup\">\r\n\t\t\t\t<img src={loginImage02} alt=\"\" />\r\n\t\t\t</div> */}\r\n\t\t\t<form className=\"login__form\" onSubmit={handleSignUp}>\r\n\t\t\t\t<div className=\"login__form__item\">\r\n\t\t\t\t\t<div className=\"login__form__item__whole__small__title\">\r\n\t\t\t\t\t\t<div className=\"login__form__item__small__title\">\r\n\t\t\t\t\t\t\t<div className=\"login__form__item__title\"> Họ</div>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tname=\"surName\"\r\n\t\t\t\t\t\t\t\tid=\"surName\"\r\n\t\t\t\t\t\t\t\tonChange={handleNameChange(\"surName\")}\r\n\t\t\t\t\t\t\t\t// placeholder={\"Cẩm\".toString()}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"login__form__item__small__title\">\r\n\t\t\t\t\t\t\t<div className=\"login__form__item__title\"> Tên</div>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tname=\"firstName\"\r\n\t\t\t\t\t\t\t\tid=\"firstName\"\r\n\t\t\t\t\t\t\t\tonChange={handleNameChange(\"firstName\")}\r\n\t\t\t\t\t\t\t\t// placeholder={\"Sục\".toString()}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"login__form__item\">\r\n\t\t\t\t\t<div className=\"login__form__item__title\">Biệt danh</div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"alias\"\r\n\t\t\t\t\t\tid=\"alias\"\r\n\t\t\t\t\t\tonChange={handleChange(\"alias\")}\r\n\t\t\t\t\t\t// placeholder={\"huongleehere\".toString()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"login__form__item\">\r\n\t\t\t\t\t<div className=\"login__form__item__title\">Tên tài khoản</div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\t\tid=\"username-signup\"\r\n\t\t\t\t\t\tonChange={handleChange(\"username\")}\r\n\t\t\t\t\t\t// placeholder={\"huongleehere\".toString()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"login__form__item\">\r\n\t\t\t\t\t<div className=\"login__form__item__title\">Mật khẩu</div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\tid=\"password-signup\"\r\n\t\t\t\t\t\tonChange={handleChange(\"password\")}\r\n\t\t\t\t\t\t// placeholder={\"Abc_123456\".toString()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"login__form__item\">\r\n\t\t\t\t\t<div className=\"login__form__item__title\">Email</div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\tonChange={handleChange(\"email\")}\r\n\t\t\t\t\t\t// placeholder={\"Bloggit@gmail.com\".toString()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* <div className=\"login__form__item\">\r\n\t\t\t\t\t<div className=\"login__form__item__title\">Số điện thoại </div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"tel\"\r\n\t\t\t\t\t\tid=\"tel\"\r\n\t\t\t\t\t\tonChange={handleChange(\"tel\")}\r\n\t\t\t\t\t\tplaceholder={\"0123456789\".toString()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t{/* <div className=\"login__form__item\">\r\n\t\t\t\t\t<div className=\"login__form__item__title\">Ngày sinh </div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"date\"\r\n\t\t\t\t\t\tid=\"date\"\r\n\t\t\t\t\t\tonChange={handleChange(\"date\")}\r\n\t\t\t\t\t\t// placeholder=\"02/11/2002\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t{/* <div className=\"login__form__item\">\r\n\t\t\t\t\t<div className=\"login__form__item__title\">Địa chỉ </div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"location\"\r\n\t\t\t\t\t\tid=\"location\"\r\n\t\t\t\t\t\tonChange={handleChange(\"location\")}\r\n\t\t\t\t\t\tplaceholder={\"ex: Thủy Phương, Hương Thủy\".toString()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t{/* <div className=\"login__form__item\">\r\n\t\t\t\t\t<div className=\"login__form__item__title\"> Nghề nghiệp </div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"job\"\r\n\t\t\t\t\t\tid=\"job\"\r\n\t\t\t\t\t\tonChange={handleChange(\"job\")}\r\n\t\t\t\t\t\tplaceholder={\"Má thiên hạ\".toString()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t<button type=\"submit\" className=\"login__form__button\">\r\n\t\t\t\t\tĐăng ký\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Signup;\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\PageNotFound.jsx",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\Login.jsx",["249"],[],"import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { authenticateUserAsync } from '../features/account/accountSlice';\r\nimport { getUserByUsernameAsync } from '../features/user/userSlice';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nimport loginImage01 from '../assets/image/login/login-image-01.png';\r\nimport logo from '../assets/image/login/login-logo.png';\r\nimport { unwrapResult } from '@reduxjs/toolkit';\r\n\r\nconst Login = () => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const user = useSelector((state) => state.user);\r\n    // if(user){\r\n    //     console.log(user)\r\n    //     navigate('/' + user.alias + '/')\r\n    // }\r\n    const initialUserState = {\r\n        username: '',\r\n        password: '',\r\n    };\r\n\r\n    const [account, setAccount] = useState(initialUserState);\r\n\r\n    const handleChange = (input) => (event) => {\r\n        setAccount({ ...account, [input]: event.target.value });\r\n    };\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        console.log('logging in...');\r\n        await dispatch(\r\n            authenticateUserAsync({\r\n                username: account.username,\r\n                password: account.password,\r\n            })\r\n        );\r\n        const result = await dispatch(\r\n            getUserByUsernameAsync({\r\n                username: account.username,\r\n            })\r\n        );\r\n        const originalPromiseResult = unwrapResult(result);\r\n        const alias = result.payload.tasks.result.alias;\t\r\n        navigate(`/${alias}/`);\r\n        if (originalPromiseResult.tasks.alias !== undefined)\r\n            navigate(`/${originalPromiseResult.tasks.alias}/`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__image\">\r\n                <img src={loginImage01} alt=\"\" />\r\n            </div>\r\n            <form className=\"login__form\" onSubmit={handleLogin}>\r\n                <div className=\"login__logo\">\r\n                    <img src={logo} alt=\"\" />\r\n                </div>\r\n                <div className=\"login__form__item\">\r\n                    <div className=\"login__form__item__title\">tài khoản</div>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        id=\"username\"\r\n                        onChange={handleChange('username')}\r\n                    />\r\n                </div>\r\n                <div className=\"login__form__item\">\r\n                    <div className=\"login__form__item__title\">mật khẩu</div>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        onChange={handleChange('password')}\r\n                    />\r\n                </div>\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"login__form__button login__form__login-button\"\r\n                >\r\n                    đăng nhập\r\n                </button>\r\n                <Link to=\"signup\">\r\n                    <button type=\"submit\" className=\"login__form__button\">\r\n                        đăng ký\r\n                    </button>\r\n                </Link>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\setAuthToken.js",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\Footer.jsx",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\Header.jsx",["250","251"],[],"import React, { useRef, useEffect } from 'react';\r\nimport { Link, useLocation, useNavigate, useParams } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectAccount } from '../features/account/accountSlice';\r\nimport DropdownMenu from './DropdownMenu';\r\nimport SettingsMenu from './SettingsMenu';\r\n\r\nimport alt from '../assets/image/user/alt.png';\r\nimport { useState } from 'react';\r\nimport NoTopicNotif from './NoTopicNotif';\r\nimport userSlice from '../features/user/userSlice';\r\nconst mainNav = [\r\n    {\r\n        display: 'TRANG CHỦ',\r\n        path: '/',\r\n    },\r\n    {\r\n        display: 'TỚ LÀ?',\r\n        path: '/about',\r\n    },\r\n    // {\r\n    // \tdisplay: \"CHỦ ĐỀ\",\r\n    // \tpath: \"/\",\r\n    // },\r\n];\r\n\r\nconst settings = [\r\n    { name: 'Cài đặt', slug: '/settings' },\r\n    {\r\n        name: 'Đăng xuất',\r\n        slug: '/',\r\n    },\r\n];\r\n\r\nfunction Header() {\r\n    const params = useParams();\r\n    const pathName = useLocation().pathname;\r\n    var activeNav = mainNav.findIndex(\r\n        (e) => `/${params.alias}`.concat(e.path) === pathName\r\n    );\r\n\r\n    const navigate = useNavigate();\r\n\r\n    var currentTopic;\r\n    const blog = useSelector((state) => state.blog);\r\n    const blogger = useSelector((state) => state.blogger);\r\n    const user = useSelector((state) => state.user);\r\n    const topics = blogger.alias === user.alias ? user.Topic : blogger.Topic;\r\n    // useEffect(() => {\r\n    // \tif (typeof slug !== \"object\") {\r\n    // \t\tdispatch(getAllTopicBySlugAsync(slug.current));\r\n    // \t\tdispatch(getBlogBySlugAsync(slug.current));\r\n    // \t}\r\n    // }, [dispatch, slug]);\r\n    const slugType = params['*']?.split('/')[0];\r\n    switch (slugType) {\r\n        case 'topic':\r\n            if (topics)\r\n                // if (!Array.isArray(topics) && typeof topics !== \"string\") {\r\n                currentTopic = topics\r\n                    .find((topic) => topic.slug === params['*'].split('/')[1])\r\n                    ?.topicName.toUpperCase();\r\n            // }\r\n            break;\r\n        case 'blog':\r\n            if (blog)\r\n                if (!Array.isArray(blog) && typeof blog !== 'string') {\r\n                    currentTopic = blog.Topic?.topicName.toUpperCase();\r\n                }\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    currentTopic && (activeNav = 2);\r\n\r\n    const headerRef = useRef();\r\n    const logoRef = useRef();\r\n    const containerRef = useRef();\r\n\r\n    // const account = useSelector(selectAccount);\r\n    const account = JSON.parse(localStorage.getItem('user'));\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', () => {\r\n            if (document.documentElement.scrollTop > 80) {\r\n                headerRef.current?.classList?.add('shrink');\r\n                logoRef.current?.classList?.add('shrink');\r\n                containerRef.current?.classList?.add('shrink');\r\n            } else {\r\n                headerRef.current?.classList?.remove('shrink');\r\n                logoRef.current?.classList?.remove('shrink');\r\n                containerRef.current?.classList?.remove('shrink');\r\n            }\r\n        });\r\n        return () => {\r\n            window.removeEventListener('scroll', null);\r\n        };\r\n    }, []);\r\n\r\n    const menuLeft = useRef(null);\r\n    const menuToggle = () => menuLeft.current.classList.toggle('active');\r\n\r\n    const [openTopics, setOpenTopics] = useState(false);\r\n\r\n    const [noTopicNotif, setNoTopicNotif] = useState(false);\r\n\r\n    const [openSettings, setOpenSettings] = useState(false);\r\n\r\n    return (\r\n        <div className=\"header\" ref={headerRef}>\r\n            <div className=\"container\" ref={containerRef}>\r\n                <div className=\"header__logo\" ref={logoRef}>\r\n                    <Link to=\"/BlogProject/\">\r\n                        <p>{blogger?.alias}</p>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"header__menu\">\r\n                    <div\r\n                        className=\"header__menu__mobile-toggle\"\r\n                        onClick={menuToggle}\r\n                    >\r\n                        <i className=\"bx bx-menu-alt-left\"></i>\r\n                    </div>\r\n                    <div className=\"header__menu__left\" ref={menuLeft}>\r\n                        <div\r\n                            className=\"header__menu__left__close\"\r\n                            onClick={menuToggle}\r\n                        >\r\n                            <i className=\"bx bx-x\"></i>\r\n                        </div>\r\n                        {mainNav?.map((item, index) => (\r\n                            <div\r\n                                onClick={menuToggle}\r\n                                key={index}\r\n                                className={`header__menu__left__item header__menu__item ${\r\n                                    activeNav === index ? 'active' : ''\r\n                                }`}\r\n                            >\r\n                                <Link\r\n                                    to={`/${params.alias || user.alias}${\r\n                                        item.path\r\n                                    }`}\r\n                                >\r\n                                    {item.display}\r\n                                </Link>\r\n                            </div>\r\n                        ))}\r\n                        <div\r\n                            onClick={() => {\r\n                                // menuToggle();\r\n                                topics.length !== 0\r\n                                    ? setOpenTopics(!openTopics)\r\n                                    : setNoTopicNotif(!noTopicNotif);\r\n                            }}\r\n                            className={`header__menu__left__item header__menu__item ${\r\n                                activeNav === 2 ? 'active' : ''\r\n                            }`}\r\n                        >\r\n                            {params['*']?.includes('topic') ||\r\n                            params['*']?.includes('blog')\r\n                                ? currentTopic\r\n                                : 'CHỦ ĐỀ'}\r\n                            {openTopics && (\r\n                                <DropdownMenu\r\n                                    blogger={user.alias === blogger.alias? user:blogger}\r\n                                    onclick={menuToggle}\r\n                                />\r\n                            )}\r\n                            {noTopicNotif && (\r\n                                <NoTopicNotif\r\n                                    onCloseButtonClick={() =>\r\n                                        setNoTopicNotif(!noTopicNotif)\r\n                                    }\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"header__menu__right\">\r\n                        <div className=\"header__menu__right__item header__menu__item\">\r\n                            {/* <i className=\"bx bx-search\"></i>\r\n\t\t\t\t\t\t\t<i className=\"bx bx-wrench\"></i>\r\n\t\t\t\t\t\t\t<i className=\"bx bx-bell\"></i> */}\r\n                        </div>\r\n                        {account ? (\r\n                            <div\r\n                                className=\"header__menu__right__pfp\"\r\n                                onClick={() => setOpenSettings(!openSettings)}\r\n                            >\r\n                                {user?.profilepic !== '' &&\r\n                                typeof user.profilepic !== 'undefined' ? (\r\n                                    <img\r\n                                        src={\r\n                                            'data:image/jpg;base64,' +\r\n                                            user.profilepic\r\n                                        }\r\n                                        alt={alt}\r\n                                    />\r\n                                ) : (\r\n                                    <img src={alt} alt={alt} />\r\n                                )}\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"header__menu__right__login-button\">\r\n                                <button onClick={() => navigate('/')}>\r\n                                    Đăng nhập\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                        {openSettings && (\r\n                            <SettingsMenu\r\n                                alias={user.alias}\r\n                                settings={settings}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\routes\\routes.jsx",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\SettingsMenu.jsx",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\DropdownMenu.jsx",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\NoTopicNotif.jsx",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\Category.jsx",["252"],[],"import React from 'react';\r\nimport Helmet from '../components/Helmet';\r\nimport Banner from '../components/Banner';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getBloggerByAliasAsync } from '../features/user/bloggerSlice';\r\nimport CategoryCard from '../components/CategoryCard';\r\nimport PageNotFound from './PageNotFound';\r\nimport { useState } from 'react';\r\nimport alt from '../assets/image/topic/alt.jpg';\r\n\r\nfunction Category() {\r\n    const dispatch = useDispatch();\r\n    const params = useParams();\r\n    const alias = params.alias;\r\n    const blogger = useSelector((state) => state.blogger);\r\n    const user = useSelector((state) => state.user);\r\n    useEffect(() => {\r\n        dispatch(getBloggerByAliasAsync(alias));\r\n    }, [dispatch, alias]);\r\n\r\n    const topic =\r\n        blogger.alias === user.alias\r\n            ? user.Topic?.find((topic) => topic.slug === params.slug)\r\n            : blogger.Topic?.find((topic) => topic.slug === params.slug);\r\n\r\n    // const allBlogsByTopic = Array.isArray(allBlogs)\r\n    // \t? allBlogs?.filter((blog) => blog.Topic.slug === params.slug)\r\n    // \t: [allBlogs];\r\n    const allBlogsByTopic = topic ? topic.Blog : null;\r\n\r\n    if (\r\n        (typeof topic !== 'undefined' && topic.length === 0) ||\r\n        typeof topic === 'string'\r\n    )\r\n        return <PageNotFound />;\r\n\r\n    if (topic)\r\n        return (\r\n            <div>\r\n                <Helmet title=\"Chủ đề\">\r\n                    <div className=\"allCategoryCards\">\r\n                        <div className=\"allCategoryCards_banner\">\r\n                            {topic.img !== undefined && topic.img !== '' ? (\r\n                                <Banner\r\n                                    img={\r\n                                        'data:image/jpg;base64,' +\r\n                                        topic.img.toString('base64')\r\n                                    }\r\n                                    width=\"100\"\r\n                                    height=\"440\"\r\n                                    quote={topic.quote}\r\n                                />\r\n                            ) : (\r\n                                <Banner\r\n                                    img={alt}\r\n                                    width=\"100\"\r\n                                    height=\"440\"\r\n                                    quote={topic.quote}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        <div className=\"allCategoryCards_container\">\r\n                            {allBlogsByTopic.map((blog, index) => {\r\n                                return (\r\n                                    <CategoryCard\r\n                                        key={index}\r\n                                        id={blog._id}\r\n                                        img={blog.coverImg}\r\n                                        date={`${\r\n                                            blog.location !== null\r\n                                                ? blog.location + ' - '\r\n                                                : ''\r\n                                        }${\r\n                                            blog.date !== undefined\r\n                                                ? blog.date.slice(0, 10)\r\n                                                : ''\r\n                                        }`}\r\n                                        title={`${blog.title}`}\r\n                                        content={`${blog.content}`}\r\n                                        slug={`${blog.slug}`}\r\n                                        published={blog.published}\r\n                                        blogger={blogger}\r\n                                    />\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </Helmet>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Category;\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\Blog.jsx",["253","254","255","256","257","258"],[],"import React, { useEffect, useMemo } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getBlogBySlugAsync } from '../features/post/blogSlice';\r\nimport Helmet from '../components/Helmet';\r\nimport Banner from '../components/Banner';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PageNotFound from './PageNotFound';\r\nimport Comment from '../components/Comment';\r\nimport alt from '../assets/image/blog/alt.jpg';\r\nimport {\r\n    createNewComment,\r\n    getAllCommentsByBlogAsync,\r\n} from '../features/comment/commentSlice';\r\nimport { useState } from 'react';\r\nimport Reply from '../components/Reply';\r\nimport { getBloggerByUserID } from '../features/user/bloggerSlice';\r\nimport axios, { Axios } from 'axios';\r\nimport serverUrl from '../features/common/common';\r\n\r\nfunction Blog() {\r\n    const params = useParams();\r\n    const slug = params.slug;\r\n    const dispatch = useDispatch();\r\n    // const user = useSelector((state) => state.user);\r\n    const blogger = useSelector((state) => state.blogger);\r\n    const user = useSelector((state) => state.user);\r\n    const blogs = useSelector((state) => state.blog);\r\n    const comments = useSelector((state) => state.comment);\r\n    const blog = Array.isArray(blogs)\r\n        ? blogs?.find((blog) => blog.slug === slug)\r\n        : blogs;\r\n\r\n    const [commentUser, setCommentUser] = useState([]);\r\n    async function getBlog() {\r\n        await dispatch(getBlogBySlugAsync(slug));\r\n        await dispatch(getAllCommentsByBlogAsync(blog?._id));\r\n    }\r\n\r\n    useEffect(() => {\r\n        getBlog();\r\n    }, [dispatch, slug, blog?._id]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const commentUserID = [\r\n                ...new Set(comments.map((comment) => comment.userID)),\r\n            ];\r\n            console.log(commentUserID);\r\n\r\n            var user = [];\r\n            await Promise.all(\r\n                commentUserID.map(async (userID) => {\r\n                    await axios(\r\n                        `${serverUrl}api/user/get-user-by-id?userID=${userID}`\r\n                    ).then((response) => {\r\n                        console.log(response.data.result);\r\n                        user.push(response.data.result);\r\n                    });\r\n                    // commentUser.push(result);\r\n                })\r\n            );\r\n            setCommentUser(user);\r\n        };\r\n        fetchData();\r\n    }, [comments]);\r\n\r\n    console.log(commentUser);\r\n\r\n    // console.log(comments);\r\n\r\n    if (typeof blog === 'object')\r\n        // if (blog)\r\n        return (\r\n            <Helmet title=\"Blog\">\r\n                <div className=\"blog\">\r\n                    {blog.coverImg !== undefined ? (\r\n                        <Banner\r\n                            img={\r\n                                'data:image/jpg;base64,' +\r\n                                blog.coverImg.toString('base64')\r\n                            }\r\n                            alt={alt}\r\n                            quote={blog.quote}\r\n                        />\r\n                    ) : (\r\n                        <Banner img={alt} alt={alt} quote={blog.quote} />\r\n                    )}\r\n                    <div className=\"blog__timestamp\">{`${\r\n                        blog.location === undefined ? blog.location + ' - ' : ''\r\n                    }${\r\n                        blog.date === undefined ? '' : blog.date.slice(0, 10)\r\n                    }`}</div>\r\n                    <div className=\"blog__content\">\r\n                        <div className=\"blog__content__title\">{blog.title}</div>\r\n                        <div className=\"blog__content__body\">\r\n                            {blog.content}\r\n                        </div>\r\n                        <div className=\"blog__content__signature\">\r\n                            {blog.signature}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"comment-section\">\r\n                    <Reply\r\n                        blogID={blog._id}\r\n                        userID={user._id}\r\n                        isHeadComment={true}\r\n                        parentID=\"\"\r\n                    />\r\n                    {comments.map((comment) => {\r\n                        return (\r\n                            <Comment\r\n                                comment={comment}\r\n                                key={comment._id}\r\n                                blogID={blog._id}\r\n                                userID={user._id}\r\n                                commentUser={commentUser}\r\n                                alias={blogger.alias}\r\n                                head={true}\r\n                                lastchild={false}\r\n                            />\r\n                        );\r\n                    })}\r\n                </div>\r\n            </Helmet>\r\n        );\r\n}\r\n\r\nexport default Blog;\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\Home.jsx",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\About.jsx",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\EditBlog.jsx",["259"],[],"import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n\tgetBlogBySlugAsync,\r\n\tupdateBlogAsync,\r\n} from \"../features/post/blogSlice\";\r\nimport Helmet from \"../components/Helmet\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getUserByUsernameAsync } from \"../features/user/userSlice\";\r\n\r\nconst EditBlog = ({ alias }) => {\r\n\tconst textareaRef = useRef();\r\n\tconst imageRef = useRef();\r\n\tconst dispatch = useDispatch();\r\n\tconst navigate = useNavigate();\r\n\tconst params = useParams();\r\n\tconst slug = params.slug;\r\n\tconst blog = useSelector((state) => state.blog);\r\n\tconst [newBlog, setNewBlog] = useState(blog);\r\n\tuseEffect(() => {\r\n\t\tif (newBlog.slug !== blog.slug || slug !== blog.slug) {\r\n\t\t\tdispatch(getBlogBySlugAsync(slug));\r\n\t\t\tsetNewBlog(blog);\r\n\t\t}\r\n\t}, [slug, dispatch, blog, newBlog.slug]);\r\n\r\n\tconst handleChange = (input) => (event) => {\r\n\t\tsetNewBlog({ ...newBlog, [input]: event.target.value });\r\n\t};\r\n\t// const [image, setImage] = useState();\r\n\r\n\tconst readImage = (e) => {\r\n\t\tconst image = e.target.files[0];\r\n\t};\r\n\r\n\t\r\n    const username = JSON.parse(localStorage.getItem('user'))?.account.username;\r\n\r\n\tconst handleNewBlog = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tawait dispatch(updateBlogAsync({ blogReqData: newBlog }));\r\n\t\tawait dispatch(getUserByUsernameAsync({ username: username }));\r\n\t\tnavigate(`/${alias}/`);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Helmet title=\"Chỉnh sừa blog\">\r\n\t\t\t<div className=\"new-blog\">\r\n\t\t\t\t<form className=\"new-blog__form\" onSubmit={handleNewBlog}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\tref={imageRef}\r\n\t\t\t\t\t\tonChange={readImage}\r\n\t\t\t\t\t\tclassName=\"new-blog__form__image\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"quote\"\r\n\t\t\t\t\t\tonChange={handleChange(\"quote\")}\r\n\t\t\t\t\t\tclassName=\"new-blog__form__quote\"\r\n\t\t\t\t\t\tplaceholder=\"Quote\"\r\n\t\t\t\t\t\tvalue={newBlog?.quote}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"location\"\r\n\t\t\t\t\t\tclassName=\"new-blog__form__place\"\r\n\t\t\t\t\t\tplaceholder=\"Địa điểm\"\r\n\t\t\t\t\t\tonChange={handleChange(\"location\")}\r\n\t\t\t\t\t\tvalue={newBlog?.location}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\tclassName=\"new-blog__form__title\"\r\n\t\t\t\t\t\tplaceholder=\"Tiêu đề\"\r\n\t\t\t\t\t\tonChange={handleChange(\"title\")}\r\n\t\t\t\t\t\tvalue={newBlog?.title}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"content\"\r\n\t\t\t\t\t\tclassName=\"new-blog__form__body\"\r\n\t\t\t\t\t\tplaceholder=\"Nội dung\"\r\n\t\t\t\t\t\tref={textareaRef}\r\n\t\t\t\t\t\tvalue={newBlog?.content}\r\n\t\t\t\t\t\tonChange={handleChange(\"content\")}\r\n\t\t\t\t\t\tonKeyUp={(e) => {\r\n\t\t\t\t\t\t\ttextareaRef.current.style.height = \"200px\";\r\n\t\t\t\t\t\t\tlet height = e.target.scrollHeight;\r\n\t\t\t\t\t\t\tif (height > 200) {\r\n\t\t\t\t\t\t\t\t// textareaRef.current.style.height = \"auto\";\r\n\t\t\t\t\t\t\t\ttextareaRef.current.style.height = `${height}px`;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}></textarea>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"new-blog__form__signature\"\r\n\t\t\t\t\t\tplaceholder=\"Chữ ký\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button className=\"new-blog__form__create-button\" type=\"submit\">\r\n\t\t\t\t\t\tSửa bài viết\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</Helmet>\r\n\t);\r\n};\r\n\r\nexport default EditBlog;\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\NewBlog.jsx",["260","261","262","263","264"],[],"import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport namingBlogSlug from '../utils/namingSlugs';\r\nimport { createNewBlogAsync } from '../features/post/blogSlice';\r\nimport { createNewTopic } from '../features/topic/topicSlice';\r\nimport Helmet from '../components/Helmet';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { unwrapResult } from '@reduxjs/toolkit';\r\nimport { getBloggerByAliasAsync } from '../features/user/bloggerSlice';\r\nimport { getUserByUsernameAsync } from '../features/user/userSlice';\r\nimport Checkbox from '../components/Checkbox';\r\n\r\nconst NewBlog = () => {\r\n    const textareaRef = useRef();\r\n    const imageRef = useRef();\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const user = useSelector((state) => state.user);\r\n    const blogger = useSelector((state) => state.blogger);\r\n    // const userSelector = useSelector((state) => state.user);\r\n\r\n    const username = JSON.parse(localStorage.getItem('user'))?.account.username;\r\n    useEffect(() => {\r\n        dispatch(getUserByUsernameAsync({ username: username }));\r\n    }, [user.username, dispatch]);\r\n\r\n    var date_format = new Date().toISOString().slice(0, 10);\r\n    // console.log(date_format);\r\n    // const date = date_format.getMonth()+'-'+ date_format.getDate()+'-'+date_format.getFullYear()\r\n    // console.log(date)\r\n\r\n    const [isChecked, setIsChecked] = useState(true);\r\n\r\n    const initialBlogState = {\r\n        title: '',\r\n        content: '',\r\n        quote: '',\r\n        date: date_format,\r\n        location: '',\r\n        slug: '',\r\n        topicID:\r\n            user.Topic !== undefined && user?.Topic.length !== 0\r\n                ? user?.Topic[0]?._id\r\n                : '',\r\n        coverImg: '',\r\n        published: isChecked,\r\n        signature: 'by ' + user.name,\r\n    };\r\n\r\n    const [newBlog, setNewBlog] = useState(initialBlogState);\r\n\r\n    const handleChange = (input) => (event) => {\r\n        newBlog[input] = event.target.value;\r\n    };\r\n\r\n    const handleChecked = (e) => {\r\n        newBlog.published = e;\r\n    };\r\n\r\n    const handleTitleChange = () => (event) => {\r\n        newBlog.title = event.target.value;\r\n        newBlog.slug = namingBlogSlug(event.target.value);\r\n    };\r\n\r\n    // const [image, setImage] = useState();\r\n\r\n    const readImage = (e) => {\r\n        const image = e.target.files[0];\r\n        document.documentElement.style.setProperty(\r\n            '--uploadedImage',\r\n            'url(' + URL.createObjectURL(image) + ')'\r\n        );\r\n        imageRef.current.classList.add('change');\r\n        setNewBlog({ ...newBlog, ['coverImg']: image });\r\n    };\r\n\r\n    const imageUploadHandler = (e) => {};\r\n\r\n    const [topic, setTopic] = useState({\r\n        topicName: '',\r\n        slug: '',\r\n        quote: '',\r\n        img: '',\r\n        userID: user._id,\r\n    });\r\n\r\n    const handleNewBlog = async (e) => {\r\n        e.preventDefault();\r\n        if (newBlog.topicID === 0) {\r\n            const res = await dispatch(createNewTopic({ topic: topic }));\r\n            const result = unwrapResult(res);\r\n            newBlog.topicID = result.tasks.result._id;\r\n        }\r\n        await dispatch(createNewBlogAsync({ blogReqData: newBlog }));\r\n        // await dispatch(getBloggerByAliasAsync(blogger.alias));\r\n\t\tawait dispatch(getUserByUsernameAsync({ username: username }));\r\n        navigate(`/${blogger.alias}/`);\r\n    };\r\n\r\n    function TopicMenu({ topics }) {\r\n        const [newTopic, setNewTopic] = useState('Chủ đề mới');\r\n\r\n        const onTopicClick = () => {\r\n            var option = document.getElementById('topic').value;\r\n            if (option === '0') {\r\n                const input = prompt('Nhập chủ đề mới');\r\n                setNewTopic(input);\r\n                topic.topicName = input;\r\n                topic.slug = namingBlogSlug(input);\r\n                newBlog.topicID = 0;\r\n            } else {\r\n                newBlog.topicID = option;\r\n                setNewTopic('Chủ đề mới');\r\n            }\r\n            console.log(initialBlogState);\r\n        };\r\n\r\n        return (\r\n            <div className=\"select\">\r\n                <select name=\"topic\" id=\"topic\" onChange={onTopicClick}>\r\n                    {topics?.length !== 0 ? (\r\n                        topics?.map((topic, index) => {\r\n                            return (\r\n                                <option key={index} value={topic._id}>\r\n                                    {topic.topicName}\r\n                                </option>\r\n                            );\r\n                        })\r\n                    ) : (\r\n                        <option value=\"1\">Chưa có chủ đề nào*</option>\r\n                    )}\r\n                    <option value=\"0\">{newTopic}</option>\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Helmet title=\"Tạo blog mới\">\r\n            <div className=\"new-blog\">\r\n                <div className=\"new-blog__form__topic\">\r\n                    <div className=\"new-blog__form__topic__published\">\r\n                        <Checkbox\r\n                            content={'Published?'}\r\n                            isChecked={isChecked}\r\n                            setIsChecked={setIsChecked}\r\n                            handleChecked={handleChecked}\r\n                        />\r\n                    </div>\r\n                    <TopicMenu topics={user.Topic}></TopicMenu>\r\n                </div>\r\n                <form className=\"new-blog__form\" onSubmit={handleNewBlog}>\r\n                    <input\r\n                        type=\"file\"\r\n                        name=\"coverImg\"\r\n                        ref={imageRef}\r\n                        onChange={readImage}\r\n                        className=\"new-blog__form__image\"\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"quote\"\r\n                        onChange={handleChange('quote')}\r\n                        className=\"new-blog__form__quote\"\r\n                        placeholder=\"Châm ngôn\"\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"location\"\r\n                        className=\"new-blog__form__place\"\r\n                        placeholder=\"Địa điểm\"\r\n                        onChange={handleChange('location')}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        className=\"new-blog__form__title\"\r\n                        placeholder=\"Tiêu đề*\"\r\n                        onChange={handleTitleChange()}\r\n                    />\r\n                    <textarea\r\n                        type=\"text\"\r\n                        name=\"content\"\r\n                        className=\"new-blog__form__body\"\r\n                        placeholder=\"Nội dung*\"\r\n                        ref={textareaRef}\r\n                        onChange={handleChange('content')}\r\n                        onKeyUp={(e) => {\r\n                            textareaRef.current.style.height = '200px';\r\n                            let height = e.target.scrollHeight;\r\n                            if (height > 200) {\r\n                                // textareaRef.current.style.height = \"auto\";\r\n                                textareaRef.current.style.height = `${height}px`;\r\n                            }\r\n                        }}\r\n                    ></textarea>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"new-blog__form__signature\"\r\n                        placeholder={initialBlogState.signature}\r\n                        onChange={handleChange('signature')}\r\n                    />\r\n                    <button\r\n                        className=\"new-blog__form__create-button\"\r\n                        type=\"submit\"\r\n                    >\r\n                        Tạo bài viết\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default NewBlog;\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\Settings.jsx",["265"],[],"import React from 'react';\r\nimport { useRef } from 'react';\r\nimport { useState } from 'react';\r\nimport Avatar from 'react-avatar-edit';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateUserAsync } from '../features/user/userSlice';\r\n\r\nconst Settings = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const user = useSelector((state) => state.user);\r\n    // const blogger = useSelector((state) => state.blogger);\r\n    var [src, setSrc] = useState(\r\n        user.profilepic === '' ||\r\n            user.profilepic === undefined\r\n            ? require('../assets/image/user/alt.png')\r\n            : 'data:image/jpg;base64,' + user.profilepic\r\n    );\r\n    var [newImg, setNewImg] = useState();\r\n    var [editting, setEditting] = useState(false);\r\n    const [file, setFile] = useState();\r\n    const [changeImg, setChangeImg] = useState(false);\r\n    const editRef = useRef();\r\n    const pfpRef = useRef();\r\n\r\n    const onEditClick = () => {\r\n        setEditting(!editting);\r\n        editRef.current.classList.toggle('editting');\r\n        if (editting === false) {\r\n            editRef.current.innerHTML = '&#10003;';\r\n        } else {\r\n            dispatch(\r\n                updateUserAsync({\r\n                    id: user._id,\r\n                    userReq: { profilepic: file },\r\n                })\r\n            );\r\n            setChangeImg(true);\r\n            setSrc(newImg);\r\n            editRef.current.innerHTML = 'Đổi ảnh';\r\n        }\r\n    };\r\n\r\n    const onStopClick = () => {\r\n        setEditting(!editting);\r\n        editRef.current.classList.toggle('editting');\r\n        if (editting === false) {\r\n            editRef.current.innerHTML = '&#10003;';\r\n        } else {\r\n            setChangeImg(false);\r\n            editRef.current.innerHTML = 'Đổi ảnh';\r\n        }\r\n    };\r\n\r\n    const onImageLoad = (e) => {\r\n        // setWidth()\r\n        console.log(e);\r\n    };\r\n\r\n    return (\r\n        <div className=\"Settings\">\r\n            <div className=\"Settings__left\">\r\n                <div className=\"Settings__left__pfp\">\r\n                    {editting === true ? (\r\n                        <Avatar\r\n                            width={350}\r\n                            height={350}\r\n                            onCrop={(e) => setNewImg(e)}\r\n                            onFileLoad={(file) => setFile(file)}\r\n                        ></Avatar>\r\n                    ) : user.profilepic === '' ||\r\n                      user.profilepic === undefined ? (\r\n                        <div className=\"Settings__left__pfp__img-container\">\r\n                            <img\r\n                                src={changeImg === true ? newImg : src}\r\n                                alt=\"\"\r\n                                ref={pfpRef}\r\n                            />\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"Settings__left__pfp__img-container\">\r\n                            <img\r\n                                src={changeImg === true ? newImg : src}\r\n                                alt=\"\"\r\n                                ref={pfpRef}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"Settings__left__change\">\r\n                    <div\r\n                        className=\"Settings__left__change__edit\"\r\n                        onClick={onEditClick}\r\n                        ref={editRef}\r\n                    >\r\n                        Đổi ảnh\r\n                    </div>\r\n                    {editting === true && (\r\n                        <div\r\n                            className=\"Settings__left__change__stop\"\r\n                            onClick={onStopClick}\r\n                        >\r\n                            &#x2715;\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className=\"Settings__right\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\utils\\namingSlugs.js",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\Helmet.jsx",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\CategoryCard.jsx",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\Banner.jsx",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\Topic.jsx",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\BlogCard.jsx",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\MessageBox.jsx",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\features\\common\\common.js",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\features\\common\\authHeader.js",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\Checkbox.jsx",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\features\\comment\\commentSlice.js",["266"],[],"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport Axios from 'axios';\r\nimport authHeader from '../common/authHeader';\r\nimport serverUrl from '../common/common';\r\n\r\nconst commentUrl = 'api/comment';\r\n\r\nexport const getAllCommentsByBlogAsync = createAsyncThunk(\r\n    'comment/getAllCommentsByBlogAsync',\r\n    async (blogID) => {\r\n        const response = await Axios.get(\r\n            `${serverUrl}${commentUrl}/get-blog-comments?blogID=${blogID}`,\r\n            { headers: authHeader() }\r\n        );\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\n// export const getAllcommentBySlugAsync = createAsyncThunk(\r\n//     'comment/getAllcommentBySlugAsync',\r\n//     async (slug) => {\r\n//         const response = await Axios.get(\r\n//             `${serverUrl}${commentUrl}/get-comment-by-slug?slug=${slug}`,\r\n//             { headers: authHeader() }\r\n//         );\r\n//         const tasks = response.data;\r\n//         return { tasks };\r\n//     }\r\n// );\r\n\r\nexport const createNewComment = createAsyncThunk(\r\n    'comment/createNewComment',\r\n    async (comment) => {\r\n        // console.log(comment)\r\n        const response = await Axios.post(serverUrl + commentUrl + '/add-new-comment', comment, {\r\n            headers: authHeader(),\r\n        });\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nconst commentSlice = createSlice({\r\n    name: 'comment',\r\n    initialState: [],\r\n    reducers: {},\r\n    extraReducers: {\r\n        [getAllCommentsByBlogAsync.fulfilled]: (state, action) => {\r\n            console.log('fetching comments successfully');\r\n            return action.payload.tasks.result;\r\n        },\r\n        [createNewComment.fulfilled]: (state, action) => {\r\n            console.log('add new comment successfully');\r\n            // return action.payload.tasks.result;\r\n        },\r\n    },\r\n});\r\nexport const {} = commentSlice.actions;\r\nexport default commentSlice.reducer;\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\Comment.jsx",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\Reply.jsx",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\BloggerCard.jsx",[],[],{"ruleId":"267","severity":1,"message":"268","line":1,"column":26,"nodeType":"269","messageId":"270","endLine":1,"endColumn":37},{"ruleId":"267","severity":1,"message":"271","line":9,"column":8,"nodeType":"269","messageId":"270","endLine":9,"endColumn":20},{"ruleId":"267","severity":1,"message":"272","line":12,"column":8,"nodeType":"269","messageId":"270","endLine":12,"endColumn":15},{"ruleId":"267","severity":1,"message":"273","line":1,"column":41,"nodeType":"269","messageId":"270","endLine":1,"endColumn":47},{"ruleId":"274","severity":1,"message":"275","line":118,"column":14,"nodeType":"276","messageId":"277","endLine":118,"endColumn":16},{"ruleId":"274","severity":1,"message":"275","line":58,"column":14,"nodeType":"276","messageId":"277","endLine":58,"endColumn":16},{"ruleId":"267","severity":1,"message":"278","line":3,"column":8,"nodeType":"269","messageId":"270","endLine":3,"endColumn":20},{"ruleId":"267","severity":1,"message":"279","line":4,"column":8,"nodeType":"269","messageId":"270","endLine":4,"endColumn":18},{"ruleId":"274","severity":1,"message":"275","line":47,"column":14,"nodeType":"276","messageId":"277","endLine":47,"endColumn":16},{"ruleId":"267","severity":1,"message":"280","line":1,"column":8,"nodeType":"269","messageId":"270","endLine":1,"endColumn":14},{"ruleId":"274","severity":1,"message":"275","line":59,"column":14,"nodeType":"276","messageId":"277","endLine":59,"endColumn":16},{"ruleId":"267","severity":1,"message":"281","line":29,"column":19,"nodeType":"269","messageId":"270","endLine":29,"endColumn":30},{"ruleId":"267","severity":1,"message":"282","line":16,"column":11,"nodeType":"269","messageId":"270","endLine":16,"endColumn":15},{"ruleId":"267","severity":1,"message":"283","line":4,"column":10,"nodeType":"269","messageId":"270","endLine":4,"endColumn":23},{"ruleId":"267","severity":1,"message":"284","line":11,"column":8,"nodeType":"269","messageId":"270","endLine":11,"endColumn":17},{"ruleId":"267","severity":1,"message":"285","line":10,"column":10,"nodeType":"269","messageId":"270","endLine":10,"endColumn":18},{"ruleId":"267","severity":1,"message":"286","line":1,"column":28,"nodeType":"269","messageId":"270","endLine":1,"endColumn":35},{"ruleId":"267","severity":1,"message":"271","line":7,"column":8,"nodeType":"269","messageId":"270","endLine":7,"endColumn":20},{"ruleId":"267","severity":1,"message":"287","line":11,"column":5,"nodeType":"269","messageId":"270","endLine":11,"endColumn":21},{"ruleId":"267","severity":1,"message":"288","line":16,"column":10,"nodeType":"269","messageId":"270","endLine":16,"endColumn":28},{"ruleId":"267","severity":1,"message":"289","line":17,"column":17,"nodeType":"269","messageId":"270","endLine":17,"endColumn":22},{"ruleId":"290","severity":1,"message":"291","line":41,"column":8,"nodeType":"292","endLine":41,"endColumn":35,"suggestions":"293"},{"ruleId":"267","severity":1,"message":"294","line":37,"column":9,"nodeType":"269","messageId":"270","endLine":37,"endColumn":14},{"ruleId":"267","severity":1,"message":"295","line":11,"column":10,"nodeType":"269","messageId":"270","endLine":11,"endColumn":32},{"ruleId":"290","severity":1,"message":"296","line":28,"column":8,"nodeType":"292","endLine":28,"endColumn":33,"suggestions":"297"},{"ruleId":"298","severity":1,"message":"299","line":77,"column":34,"nodeType":"300","messageId":"301","endLine":77,"endColumn":53,"fix":"302"},{"ruleId":"267","severity":1,"message":"303","line":80,"column":11,"nodeType":"269","messageId":"270","endLine":80,"endColumn":29},{"ruleId":"267","severity":1,"message":"304","line":82,"column":19,"nodeType":"269","messageId":"270","endLine":82,"endColumn":27},{"ruleId":"267","severity":1,"message":"305","line":55,"column":11,"nodeType":"269","messageId":"270","endLine":55,"endColumn":22},{"ruleId":"274","severity":1,"message":"275","line":59,"column":14,"nodeType":"276","messageId":"277","endLine":59,"endColumn":16},"no-unused-vars","'createStore' is defined but never used.","Identifier","unusedVar","'PageNotFound' is defined but never used.","'account' is assigned a value but never used.","'nanoid' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'setAuthToken' is defined but never used.","'authHeader' is defined but never used.","'Footer' is defined but never used.","'setFullName' is assigned a value but never used.","'user' is assigned a value but never used.","'selectAccount' is defined but never used.","'userSlice' is defined but never used.","'useState' is defined but never used.","'useMemo' is defined but never used.","'createNewComment' is defined but never used.","'getBloggerByUserID' is defined but never used.","'Axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBlog'. Either include it or remove the dependency array.","ArrayExpression",["306"],"'image' is assigned a value but never used.","'getBloggerByAliasAsync' is defined but never used.","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["307"],"no-useless-computed-key","Unnecessarily computed property ['coverImg'] found.","Property","unnecessarilyComputedProperty",{"range":"308","text":"309"},"'imageUploadHandler' is assigned a value but never used.","'setTopic' is assigned a value but never used.","'onImageLoad' is assigned a value but never used.",{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},[2712,2724],"'coverImg'","Update the dependencies array to be: [dispatch, slug, blog._id, getBlog]",{"range":"314","text":"315"},"Update the dependencies array to be: [user.username, dispatch, username]",{"range":"316","text":"317"},[1578,1605],"[dispatch, slug, blog._id, getBlog]",[1214,1239],"[user.username, dispatch, username]"]