[{"D:\\Code\\HTML\\BlogProject\\client\\src\\index.js":"1","D:\\Code\\HTML\\BlogProject\\client\\src\\reportWebVitals.js":"2","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\index.js":"3","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\reportWebVitals.js":"4","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\app\\store.js":"5","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\App.jsx":"6","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\features\\post\\blogSlice.js":"7","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\features\\user\\userSlice.js":"8","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\features\\account\\accountSlice.js":"9","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\features\\user\\bloggerSlice.js":"10","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\Layout.jsx":"11","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\features\\topic\\topicSlice.js":"12","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\Signup.jsx":"13","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\PageNotFound.jsx":"14","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\Login.jsx":"15","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\setAuthToken.js":"16","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\Footer.jsx":"17","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\Header.jsx":"18","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\routes\\routes.jsx":"19","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\SettingsMenu.jsx":"20","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\DropdownMenu.jsx":"21","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\NoTopicNotif.jsx":"22","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\Category.jsx":"23","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\Blog.jsx":"24","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\Home.jsx":"25","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\About.jsx":"26","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\EditBlog.jsx":"27","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\NewBlog.jsx":"28","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\Settings.jsx":"29","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\utils\\namingSlugs.js":"30","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\Helmet.jsx":"31","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\CategoryCard.jsx":"32","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\Banner.jsx":"33","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\Topic.jsx":"34","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\BlogCard.jsx":"35","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\MessageBox.jsx":"36","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\features\\common\\common.js":"37","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\features\\common\\authHeader.js":"38"},{"size":698,"mtime":1660644182608,"results":"39","hashOfConfig":"40"},{"size":362,"mtime":1658147476063,"results":"41","hashOfConfig":"40"},{"size":698,"mtime":1674164251848,"results":"42","hashOfConfig":"43"},{"size":375,"mtime":1674164251851,"results":"44","hashOfConfig":"43"},{"size":639,"mtime":1674164250173,"results":"45","hashOfConfig":"43"},{"size":793,"mtime":1674164251842,"results":"46","hashOfConfig":"43"},{"size":3476,"mtime":1674214731449,"results":"47","hashOfConfig":"43"},{"size":2270,"mtime":1674214036786,"results":"48","hashOfConfig":"43"},{"size":2598,"mtime":1674209565389,"results":"49","hashOfConfig":"43"},{"size":1056,"mtime":1674208158672,"results":"50","hashOfConfig":"43"},{"size":1560,"mtime":1674212998974,"results":"51","hashOfConfig":"43"},{"size":1843,"mtime":1674211882894,"results":"52","hashOfConfig":"43"},{"size":5000,"mtime":1674214754975,"results":"53","hashOfConfig":"43"},{"size":137,"mtime":1674164251850,"results":"54","hashOfConfig":"43"},{"size":3361,"mtime":1674209387176,"results":"55","hashOfConfig":"43"},{"size":271,"mtime":1674164251857,"results":"56","hashOfConfig":"43"},{"size":116,"mtime":1674164251843,"results":"57","hashOfConfig":"43"},{"size":8367,"mtime":1674209263874,"results":"58","hashOfConfig":"43"},{"size":1048,"mtime":1674164251851,"results":"59","hashOfConfig":"43"},{"size":1438,"mtime":1674164251845,"results":"60","hashOfConfig":"43"},{"size":910,"mtime":1674164251843,"results":"61","hashOfConfig":"43"},{"size":497,"mtime":1674164251845,"results":"62","hashOfConfig":"43"},{"size":2377,"mtime":1674164251849,"results":"63","hashOfConfig":"43"},{"size":1682,"mtime":1674164251848,"results":"64","hashOfConfig":"43"},{"size":3244,"mtime":1674212026602,"results":"65","hashOfConfig":"43"},{"size":2255,"mtime":1674203235264,"results":"66","hashOfConfig":"43"},{"size":3143,"mtime":1674164251849,"results":"67","hashOfConfig":"43"},{"size":6932,"mtime":1674215226017,"results":"68","hashOfConfig":"43"},{"size":3957,"mtime":1674207631842,"results":"69","hashOfConfig":"43"},{"size":279,"mtime":1674164251857,"results":"70","hashOfConfig":"43"},{"size":263,"mtime":1674164251844,"results":"71","hashOfConfig":"43"},{"size":4350,"mtime":1674164251843,"results":"72","hashOfConfig":"43"},{"size":896,"mtime":1674164251843,"results":"73","hashOfConfig":"43"},{"size":3871,"mtime":1674164251845,"results":"74","hashOfConfig":"43"},{"size":1591,"mtime":1674164251843,"results":"75","hashOfConfig":"43"},{"size":1116,"mtime":1674164251844,"results":"76","hashOfConfig":"43"},{"size":84,"mtime":1674214789963,"results":"77","hashOfConfig":"43"},{"size":268,"mtime":1674208244737,"results":"78","hashOfConfig":"43"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1hcbhdr",{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"73tzx2",{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"89"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"89"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"89"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"89"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"89"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"89"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Code\\HTML\\BlogProject\\client\\src\\index.js",[],[],[],"D:\\Code\\HTML\\BlogProject\\client\\src\\reportWebVitals.js",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\index.js",[],[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\reportWebVitals.js",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\app\\store.js",["213"],[],"import { configureStore, createStore } from '@reduxjs/toolkit';\r\nimport blogReducer from '../features/post/blogSlice';\r\nimport userReducer from '../features/user/userSlice';\r\nimport accountReducer from '../features/account/accountSlice';\r\nimport topicReducer from '../features/topic/topicSlice';\r\nimport bloggerReducer from '../features/user/bloggerSlice';\r\n\r\nconst initialState = {};\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        blog: blogReducer,\r\n        user: userReducer,\r\n        account: accountReducer,\r\n        topic: topicReducer,\r\n        blogger: bloggerReducer,\r\n    },\r\n    preloadedState: initialState,\r\n});\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\App.jsx",["214","215"],[],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, Routes, HashRouter } from \"react-router-dom\";\r\n\r\nimport Layout from \"./Layout\";\r\nimport Signup from \"../pages/Signup\";\r\nimport Login from \"../pages/Login\";\r\nimport { selectAccount } from \"../features/account/accountSlice\";\r\nimport PageNotFound from \"../pages/PageNotFound\";\r\n\r\nconst App = () => {\r\n\tconst account = useSelector(selectAccount);\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t{/* {account ? (\r\n\t\t\t\t<Layout />\r\n\t\t\t) : ( */}\r\n\t\t\t<HashRouter>\r\n\t\t\t\t<Routes>\r\n\t\t\t\t\t<Route path=\"/:alias/*\" element={<Layout />} />\r\n\t\t\t\t\t<Route path=\"/signup\" element={<Signup />} />\r\n\t\t\t\t\t<Route path=\"/\" element={<Login />} />\r\n\t\t\t\t</Routes>\r\n\t\t\t</HashRouter>\r\n\t\t\t{/* )} */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\features\\post\\blogSlice.js",["216","217"],[],"import { createSlice, createAsyncThunk, nanoid } from '@reduxjs/toolkit';\r\nimport Axios from 'axios';\r\nimport authHeader from '../common/authHeader';\r\nimport serverUrl from '../common/common';\r\n\r\nconst blogUrl = 'api/blog';\r\n\r\nexport const getAllBlogsByUserIDAsync = createAsyncThunk(\r\n    'blogs/getAllBlogsByUserIDAsync',\r\n    async (userID) => {\r\n        const response = await Axios.get(\r\n            `${serverUrl}${blogUrl}?userID=${userID}`,\r\n            { headers: authHeader() }\r\n        );\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nexport const getBlogBySlugAsync = createAsyncThunk(\r\n    'blog/getBlogBySlugAsync',\r\n    async (slug) => {\r\n        const response = await Axios.get(\r\n            `${serverUrl}${blogUrl}/get-blog-by-slug?slug=${slug}`,\r\n            { headers: authHeader() }\r\n        );\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nexport const createNewBlogAsync = createAsyncThunk(\r\n    'blog/createNewBlogAsync',\r\n    async ({ blogReqData }) => {\r\n        const formData = new FormData();\r\n        formData.append('title', blogReqData.title);\r\n        formData.append('coverImg', blogReqData.coverImg);\r\n        formData.append('topicID', blogReqData.topicID);\r\n        formData.append('slug', blogReqData.slug);\r\n        formData.append('content', blogReqData.content);\r\n        formData.append('quote', blogReqData.quote);\r\n        formData.append('date', blogReqData.date);\r\n        formData.append('location', blogReqData.location);\r\n        const response = await Axios.post(serverUrl + blogUrl, formData, {\r\n            headers: authHeader(),\r\n        });\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nexport const updateBlogAsync = createAsyncThunk(\r\n    'blog/updateBlogAsync',\r\n    async ({ blogReqData }) => {\r\n        const id = blogReqData.id;\r\n        const response = await Axios.put(\r\n            `${serverUrl}${blogUrl}/${id}`,\r\n            { headers: authHeader() },\r\n            blogReqData\r\n        );\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nexport const deleteBlogAsync = createAsyncThunk(\r\n    'blog/deleteBlogAsync',\r\n    async (id) => {\r\n        const response = await Axios.delete(`${serverUrl}${blogUrl}/${id}`, {\r\n            headers: authHeader(),\r\n        });\r\n        window.location.reload(false);\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nconst blogSlice = createSlice({\r\n    name: 'blog',\r\n    initialState: [],\r\n    reducers: {},\r\n    extraReducers: {\r\n        [getAllBlogsByUserIDAsync.fulfilled]: (state, action) => {\r\n            console.log('fetching blogs by userID successfully');\r\n            return action.payload.tasks.result;\r\n        },\r\n        [getBlogBySlugAsync.fulfilled]: (state, action) => {\r\n            console.log('fetching blog by slug successfully');\r\n            return action.payload.tasks.result;\r\n        },\r\n        [createNewBlogAsync.fulfilled]: (state, action) => {\r\n            console.log('added new blog successfully');\r\n            return action.payload.tasks.result;\r\n        },\r\n        [updateBlogAsync.fulfilled]: (state, action) => {\r\n            console.log('updated blog successfully');\r\n            return action.payload.tasks.result;\r\n        },\r\n    },\r\n});\r\nexport const {} = blogSlice.actions;\r\n\r\nexport const selectPost = (state) => state.blog.blog;\r\n\r\nexport default blogSlice.reducer;\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\features\\user\\userSlice.js",["218"],[],"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport Axios from 'axios';\r\nimport authHeader from '../common/authHeader';\r\nimport serverUrl from '../common/common';\r\n\r\nconst userUrl = 'api/user';\r\n\r\nexport const getUserByUsernameAsync = createAsyncThunk(\r\n    'api/user/getUserByUsernameAsync',\r\n    async ({ username }) => {\r\n        console.log(authHeader());\r\n        const response = await Axios.get(\r\n            `${serverUrl}${userUrl}/get-user-by-username?username=${username}`,\r\n            { headers: authHeader() }\r\n        );\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nexport const updateUserAsync = createAsyncThunk('', async ({ id, userReq }) => {\r\n    const formData = new FormData();\r\n    userReq.name && formData.append('name', userReq.name);\r\n    userReq.alias && formData.append('alias', userReq.alias);\r\n    userReq.gender && formData.append('gender', userReq.gender);\r\n    userReq.date && formData.append('date', userReq.date);\r\n    userReq.tel && formData.append('tel', userReq.tel);\r\n    userReq.job && formData.append('job', userReq.job);\r\n    userReq.address && formData.append('address', userReq.address);\r\n    userReq.email && formData.append('email', userReq.email);\r\n    userReq.profilepic && formData.append('profilepic', userReq.profilepic);\r\n    userReq.upperpic && formData.append('upperpic', userReq.upperpic);\r\n    userReq.lowerpic && formData.append('lowerpic', userReq.lowerpic);\r\n    console.log(userReq.profilepic);\r\n    const response = await Axios.put(\r\n        `${serverUrl}${userUrl}/update-user?id=${id}`,\r\n        formData,\r\n        { headers: authHeader() }\r\n    );\r\n    const tasks = response.data;\r\n    return { tasks };\r\n});\r\n\r\nexport const userSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        user: null,\r\n    },\r\n    reducers: {},\r\n    extraReducers: {\r\n        [getUserByUsernameAsync.fulfilled]: (state, action) => {\r\n            console.log('get user by username successfully');\r\n            // state.user = action.payload.tasks;\r\n            return action.payload.tasks.result;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {} = userSlice.actions;\r\n\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n",[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\features\\account\\accountSlice.js",["219","220"],[],"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport Axios from 'axios';\r\nimport setAuthToken from '../../setAuthToken';\r\nimport authHeader from '../common/authHeader';\r\nimport serverUrl from '../common/common';\r\n\r\nconst accountUrl = 'api/account';\r\n\r\nexport const setCurrentUser = (decoded) => {\r\n    return {\r\n        payload: decoded,\r\n    };\r\n};\r\n\r\nexport const authenticateUserAsync = createAsyncThunk(\r\n    'auth/authenticateUserAsync',\r\n    async (user) => {\r\n        const response = await Axios.post(serverUrl + 'auth/login', user);\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nexport const createNewAccountAsync = createAsyncThunk(\r\n    'api/user/createNewAccountAsync',\r\n    async ({ account }) => {\r\n        const response = await Axios.post(serverUrl + accountUrl, account);\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nexport const accountSlice = createSlice({\r\n    name: 'account',\r\n    initialState: {\r\n        account: null,\r\n    },\r\n    reducers: {\r\n        // login: (state, action) => {\r\n        // \tconst data = {\r\n        // \t\tusername: action.payload.username,\r\n        // \t\tpassword: action.payload.password,\r\n        // \t};\r\n        // \tAxios.post(\"http://localhost:5000/auth\", { data })\r\n        // \t\t.then((res) => {\r\n        // \t\t\tif (res) {\r\n        // \t\t\t\tstate.account = action.payload;\r\n        // \t\t\t\tconsole.log(state.account);\r\n        // \t\t\t} else state.account = null;\r\n        // \t\t})\r\n        // \t\t.catch((error) => {\r\n        // \t\t\tconsole.log(error);\r\n        // \t\t});\r\n        // },\r\n        logout: (state) => {\r\n            localStorage.setItem('user', null)\r\n            state.account = null;\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [authenticateUserAsync.fulfilled]: (state, action) => {\r\n            console.log('Authenticated user successfully');\r\n            const account = action.payload.tasks;\r\n            localStorage.setItem('user', JSON.stringify(account));\r\n            console.log(account)\r\n            // setAuthToken(token);\r\n            if (action.payload.tasks)\r\n                state.account = action.payload.tasks.account;\r\n            else state.account = null;\r\n        },\r\n        [createNewAccountAsync.fulfilled]: (state, action) => {\r\n            console.log('Created new account successfully');\r\n            return action.payload.tasks.result;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { logout } = accountSlice.actions;\r\n\r\nexport const selectAccount = (state) => state.account.account;\r\n\r\nexport default accountSlice.reducer;\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\features\\user\\bloggerSlice.js",["221"],[],"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport Axios from \"axios\";\r\nimport authHeader from \"../common/authHeader\";\r\nimport serverUrl from '../common/common';\r\n\r\nconst userUrl = 'api/user';\r\n\r\nexport const getBloggerByAliasAsync = createAsyncThunk(\r\n\t\"api/user/getBloggerByAliasAsync\",\r\n\tasync (alias) => {\r\n\t\tconst response = await Axios.get(\r\n            `${serverUrl}${userUrl}/get-user-by-alias?alias=${alias}`,\r\n            { headers: authHeader() }\r\n        );\r\n\t\tconst tasks = response.data;\r\n\t\treturn { tasks };\r\n\t}\r\n);\r\n\r\nexport const bloggerSlice = createSlice({\r\n\tname: \"blogger\",\r\n\tinitialState: {\r\n\t\tblogger: null,\r\n\t},\r\n\treducers: {},\r\n\textraReducers: {\r\n\t\t[getBloggerByAliasAsync.fulfilled]: (state, action) => {\r\n\t\t\tconsole.log(\"get blogger by alias successfully\");\r\n\t\t\t// state.user = action.payload.tasks;\r\n\t\t\treturn action.payload.tasks.result;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const {} = bloggerSlice.actions;\r\n\r\nexport const selectBlogger = (state) => state.blogger.blogger;\r\n\r\nexport default bloggerSlice.reducer;\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\Layout.jsx",["222","223","224"],[],"import Footer from './Footer';\r\nimport Header from './Header';\r\nimport Routes from '../routes/routes';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getBloggerByAliasAsync } from '../features/user/bloggerSlice';\r\nimport { getUserByUsernameAsync } from '../features/user/userSlice';\r\n\r\nfunction Layout() {\r\n    const params = useParams();\r\n    const alias = params.alias;\r\n    const dispatch = useDispatch();\r\n    const blogger = useSelector((state) => state.blogger);\r\n    const userSelector = useSelector((state) => state.user);\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    const account = user.account;\r\n    useEffect(() => {\r\n        dispatch(getBloggerByAliasAsync(alias));\r\n        // if (account.alias === blogger.alias) {\r\n        //     dispatch(getUserByUsernameAsync({ username: account.username }));\r\n        //     user.account = userSelector;\r\n\t\t// \tconsole.log(user)\r\n            // localStorage.setItem('user', JSON.stringify(user));\r\n        // }\r\n    }, [dispatch, alias, account.alias, blogger.alias]);\r\n\r\n    return (\r\n        // <HashRouter>\r\n        <div className=\"App\">\r\n            <Header blogger={blogger}></Header>\r\n            <div className=\"container\">\r\n                <div className=\"main\">\r\n                    <Routes blogger={blogger} />\r\n                </div>\r\n            </div>\r\n            {/* <Footer></Footer> */}\r\n        </div>\r\n        // </HashRouter>\r\n    );\r\n}\r\n\r\nexport default Layout;\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\features\\topic\\topicSlice.js",["225"],[],"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport Axios from 'axios';\r\nimport authHeader from '../common/authHeader';\r\nimport serverUrl from '../common/common';\r\n\r\nconst topicUrl = 'api/topic';\r\n\r\nexport const getAllTopicsByUserIDAsync = createAsyncThunk(\r\n    'topic/getAllTopicsByUserIDAsync',\r\n    async (userID) => {\r\n        const response = await Axios.get(\r\n            `${serverUrl}${topicUrl}?userID=${userID}`,\r\n            { headers: authHeader() }\r\n        );\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nexport const getAllTopicBySlugAsync = createAsyncThunk(\r\n    'topic/getAllTopicBySlugAsync',\r\n    async (slug) => {\r\n        const response = await Axios.get(\r\n            `${serverUrl}${topicUrl}/get-topic-by-slug?slug=${slug}`,\r\n            { headers: authHeader() }\r\n        );\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nexport const createNewTopic = createAsyncThunk(\r\n    'topic/createNewTopic',\r\n    async ({ topic }) => {\r\n        console.log(topic);\r\n        const response = await Axios.post(serverUrl + topicUrl, topic, {\r\n            headers: authHeader(),\r\n        });\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nconst topicSlice = createSlice({\r\n    name: 'topic',\r\n    initialState: [],\r\n    reducers: {},\r\n    extraReducers: {\r\n        [getAllTopicsByUserIDAsync.fulfilled]: (state, action) => {\r\n            console.log('fetching topics successfully');\r\n            return action.payload.tasks.result;\r\n        },\r\n        [createNewTopic.fulfilled]: (state, action) => {\r\n            console.log('create new topic successfully');\r\n            return action.payload.tasks.result;\r\n        },\r\n    },\r\n});\r\nexport const {} = topicSlice.actions;\r\nexport default topicSlice.reducer;\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\Signup.jsx",["226"],[],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { createNewAccountAsync } from \"../features/account/accountSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport loginImage01 from \"../assets/image/login/login-image-01.png\";\r\n\r\nconst Signup = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst navigate = useNavigate();\r\n\r\n\tconst initialAccountState = {\r\n\t\tname: \"\",\r\n\t\talias: \"\",\r\n\t\tgender: true,\r\n\t\tdate: '2023-01-01',\r\n\t\ttel: \"\",\r\n\t\tjob: \"\",\r\n\t\taddress: \"\",\r\n\t\temail: \"\",\r\n\t\tprofilepic: \"\",\r\n\t\tupperpic: \"\",\r\n\t\tlowerpic: \"\",\r\n\t\tusername: \"\",\r\n\t\tpassword: \"\",\r\n\t};\r\n\r\n\tconst [fullName, setFullName] = useState({ firstName: \"\", surName: \"\" });\r\n\r\n\tconst [account, setAccount] = useState(initialAccountState);\r\n\r\n\tconst handleChange = (input) => (event) => {\r\n\t\tsetAccount({ ...account, [input]: event.target.value });\r\n\t};\r\n\r\n\tconst handleNameChange = (input) => (event) => {\r\n\t\tfullName[input] = event.target.value;\r\n\t\taccount.name = fullName.surName + \" \" + fullName.firstName;\r\n\t\t// setAccount({\r\n\t\t// \t...account,\r\n\t\t// \tname: fullName.surName + \" \" + fullName.firstName,\r\n\t\t// });\r\n\t};\r\n\r\n\tconst handleSignUp = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log(\"registering...\");\r\n\t\tsetAccount({ ...account, date: new Date(account.date) });\r\n\t\tdispatch(createNewAccountAsync({ account }));\r\n\t\tnavigate(\"/\");\r\n\t};\r\n\r\n\t\r\n\r\n\treturn (\r\n\t\t<div className=\"login\">\r\n\t\t\t<div className=\"login__image signup\">\r\n\t\t\t\t<img src={loginImage01} alt=\"\" />\r\n\t\t\t</div>\r\n\t\t\t{/* <div className=\"login__image login__image__after signup\">\r\n\t\t\t\t<img src={loginImage02} alt=\"\" />\r\n\t\t\t</div> */}\r\n\t\t\t<form className=\"login__form\" onSubmit={handleSignUp}>\r\n\t\t\t\t<div className=\"login__form__item\">\r\n\t\t\t\t\t<div className=\"login__form__item__whole__small__title\">\r\n\t\t\t\t\t\t<div className=\"login__form__item__small__title\">\r\n\t\t\t\t\t\t\t<div className=\"login__form__item__title\"> Họ</div>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tname=\"surName\"\r\n\t\t\t\t\t\t\t\tid=\"surName\"\r\n\t\t\t\t\t\t\t\tonChange={handleNameChange(\"surName\")}\r\n\t\t\t\t\t\t\t\t// placeholder={\"Cẩm\".toString()}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"login__form__item__small__title\">\r\n\t\t\t\t\t\t\t<div className=\"login__form__item__title\"> Tên</div>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tname=\"firstName\"\r\n\t\t\t\t\t\t\t\tid=\"firstName\"\r\n\t\t\t\t\t\t\t\tonChange={handleNameChange(\"firstName\")}\r\n\t\t\t\t\t\t\t\t// placeholder={\"Sục\".toString()}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"login__form__item\">\r\n\t\t\t\t\t<div className=\"login__form__item__title\">Biệt danh</div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"alias\"\r\n\t\t\t\t\t\tid=\"alias\"\r\n\t\t\t\t\t\tonChange={handleChange(\"alias\")}\r\n\t\t\t\t\t\t// placeholder={\"huongleehere\".toString()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"login__form__item\">\r\n\t\t\t\t\t<div className=\"login__form__item__title\">Tên tài khoản</div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\t\tid=\"username-signup\"\r\n\t\t\t\t\t\tonChange={handleChange(\"username\")}\r\n\t\t\t\t\t\t// placeholder={\"huongleehere\".toString()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"login__form__item\">\r\n\t\t\t\t\t<div className=\"login__form__item__title\">Mật khẩu</div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\tid=\"password-signup\"\r\n\t\t\t\t\t\tonChange={handleChange(\"password\")}\r\n\t\t\t\t\t\t// placeholder={\"Abc_123456\".toString()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"login__form__item\">\r\n\t\t\t\t\t<div className=\"login__form__item__title\">Email</div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\tonChange={handleChange(\"email\")}\r\n\t\t\t\t\t\t// placeholder={\"Bloggit@gmail.com\".toString()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* <div className=\"login__form__item\">\r\n\t\t\t\t\t<div className=\"login__form__item__title\">Số điện thoại </div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"tel\"\r\n\t\t\t\t\t\tid=\"tel\"\r\n\t\t\t\t\t\tonChange={handleChange(\"tel\")}\r\n\t\t\t\t\t\tplaceholder={\"0123456789\".toString()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t{/* <div className=\"login__form__item\">\r\n\t\t\t\t\t<div className=\"login__form__item__title\">Ngày sinh </div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"date\"\r\n\t\t\t\t\t\tid=\"date\"\r\n\t\t\t\t\t\tonChange={handleChange(\"date\")}\r\n\t\t\t\t\t\t// placeholder=\"02/11/2002\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t{/* <div className=\"login__form__item\">\r\n\t\t\t\t\t<div className=\"login__form__item__title\">Địa chỉ </div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"location\"\r\n\t\t\t\t\t\tid=\"location\"\r\n\t\t\t\t\t\tonChange={handleChange(\"location\")}\r\n\t\t\t\t\t\tplaceholder={\"ex: Thủy Phương, Hương Thủy\".toString()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t{/* <div className=\"login__form__item\">\r\n\t\t\t\t\t<div className=\"login__form__item__title\"> Nghề nghiệp </div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"job\"\r\n\t\t\t\t\t\tid=\"job\"\r\n\t\t\t\t\t\tonChange={handleChange(\"job\")}\r\n\t\t\t\t\t\tplaceholder={\"Má thiên hạ\".toString()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t<button type=\"submit\" className=\"login__form__button\">\r\n\t\t\t\t\tĐăng ký\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Signup;\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\PageNotFound.jsx",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\Login.jsx",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\setAuthToken.js",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\Footer.jsx",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\Header.jsx",["227"],[],"import React, { useRef, useEffect } from 'react';\r\nimport { Link, useLocation, useNavigate, useParams } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectAccount } from '../features/account/accountSlice';\r\nimport DropdownMenu from './DropdownMenu';\r\nimport SettingsMenu from './SettingsMenu';\r\n\r\nimport alt from '../assets/image/user/alt.png';\r\nimport { useState } from 'react';\r\nimport NoTopicNotif from './NoTopicNotif';\r\nconst mainNav = [\r\n    {\r\n        display: 'TRANG CHỦ',\r\n        path: '/',\r\n    },\r\n    {\r\n        display: 'TỚ LÀ?',\r\n        path: '/about',\r\n    },\r\n    // {\r\n    // \tdisplay: \"CHỦ ĐỀ\",\r\n    // \tpath: \"/\",\r\n    // },\r\n];\r\n\r\nconst settings = [\r\n    { name: 'Cài đặt', slug: '/settings' },\r\n    {\r\n        name: 'Đăng xuất',\r\n        slug: '/',\r\n    },\r\n];\r\n\r\nfunction Header(props) {\r\n    const params = useParams();\r\n    const pathName = useLocation().pathname;\r\n    var activeNav = mainNav.findIndex(\r\n        (e) => `/${params.alias}`.concat(e.path) === pathName\r\n    );\r\n\r\n    const navigate = useNavigate();\r\n\r\n    var currentTopic;\r\n    const blog = useSelector((state) => state.blog);\r\n    const topics = props.blogger.Topic;\r\n    // useEffect(() => {\r\n    // \tif (typeof slug !== \"object\") {\r\n    // \t\tdispatch(getAllTopicBySlugAsync(slug.current));\r\n    // \t\tdispatch(getBlogBySlugAsync(slug.current));\r\n    // \t}\r\n    // }, [dispatch, slug]);\r\n    const slugType = params['*'].split('/')[0];\r\n    switch (slugType) {\r\n        case 'topic':\r\n            if (topics)\r\n                // if (!Array.isArray(topics) && typeof topics !== \"string\") {\r\n                currentTopic = topics\r\n                    .find((topic) => topic.slug === params['*'].split('/')[1])\r\n                    ?.topicName.toUpperCase();\r\n            // }\r\n            break;\r\n        case 'blog':\r\n            if (blog)\r\n                if (!Array.isArray(blog) && typeof blog !== 'string') {\r\n                    currentTopic = blog.Topic?.topicName.toUpperCase();\r\n                }\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    currentTopic && (activeNav = 2);\r\n\r\n    const headerRef = useRef();\r\n    const logoRef = useRef();\r\n    const containerRef = useRef();\r\n\r\n    // const account = useSelector(selectAccount);\r\n    const account = JSON.parse(localStorage.getItem('user'));\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', () => {\r\n            if (document.documentElement.scrollTop > 80) {\r\n                headerRef.current?.classList?.add('shrink');\r\n                logoRef.current?.classList?.add('shrink');\r\n                containerRef.current?.classList?.add('shrink');\r\n            } else {\r\n                headerRef.current?.classList?.remove('shrink');\r\n                logoRef.current?.classList?.remove('shrink');\r\n                containerRef.current?.classList?.remove('shrink');\r\n            }\r\n        });\r\n        return () => {\r\n            window.removeEventListener('scroll', null);\r\n        };\r\n    }, []);\r\n\r\n    const menuLeft = useRef(null);\r\n    const menuToggle = () => menuLeft.current.classList.toggle('active');\r\n\r\n    const [openTopics, setOpenTopics] = useState(false);\r\n\r\n    const [noTopicNotif, setNoTopicNotif] = useState(false);\r\n\r\n    const [openSettings, setOpenSettings] = useState(false);\r\n\r\n    return (\r\n        <div className=\"header\" ref={headerRef}>\r\n            <div className=\"container\" ref={containerRef}>\r\n                <div className=\"header__logo\" ref={logoRef}>\r\n                    <Link to=\"/BlogProject/\">\r\n                        <p>{props?.blogger?.alias}'s Blog</p>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"header__menu\">\r\n                    <div\r\n                        className=\"header__menu__mobile-toggle\"\r\n                        onClick={menuToggle}\r\n                    >\r\n                        <i className=\"bx bx-menu-alt-left\"></i>\r\n                    </div>\r\n                    <div className=\"header__menu__left\" ref={menuLeft}>\r\n                        <div\r\n                            className=\"header__menu__left__close\"\r\n                            onClick={menuToggle}\r\n                        >\r\n                            <i className=\"bx bx-x\"></i>\r\n                        </div>\r\n                        {mainNav?.map((item, index) => (\r\n                            <div\r\n                                onClick={menuToggle}\r\n                                key={index}\r\n                                className={`header__menu__left__item header__menu__item ${\r\n                                    activeNav === index ? 'active' : ''\r\n                                }`}\r\n                            >\r\n                                <Link to={`/${params.alias}${item.path}`}>\r\n                                    {item.display}\r\n                                </Link>\r\n                            </div>\r\n                        ))}\r\n                        <div\r\n                            onClick={() => {\r\n                                // menuToggle();\r\n                                topics.length !== 0\r\n                                    ? setOpenTopics(!openTopics)\r\n                                    : setNoTopicNotif(!noTopicNotif);\r\n                            }}\r\n                            className={`header__menu__left__item header__menu__item ${\r\n                                activeNav === 2 ? 'active' : ''\r\n                            }`}\r\n                        >\r\n                            {params['*'].includes('topic') ||\r\n                            params['*'].includes('blog')\r\n                                ? currentTopic\r\n                                : 'CHỦ ĐỀ'}\r\n                            {openTopics && (\r\n                                <DropdownMenu\r\n                                    blogger={props.blogger}\r\n                                    onclick={menuToggle}\r\n                                />\r\n                            )}\r\n                            {noTopicNotif && (\r\n                                <NoTopicNotif\r\n                                    onCloseButtonClick={() =>\r\n                                        setNoTopicNotif(!noTopicNotif)\r\n                                    }\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"header__menu__right\">\r\n                        <div className=\"header__menu__right__item header__menu__item\">\r\n                            {/* <i className=\"bx bx-search\"></i>\r\n\t\t\t\t\t\t\t<i className=\"bx bx-wrench\"></i>\r\n\t\t\t\t\t\t\t<i className=\"bx bx-bell\"></i> */}\r\n                        </div>\r\n                        {account ? (\r\n                            <div\r\n                                className=\"header__menu__right__pfp\"\r\n                                onClick={() => setOpenSettings(!openSettings)}\r\n                            >\r\n                                {props?.blogger?.profilepic !== '' &&\r\n                                typeof props.blogger.profilepic !==\r\n                                    'undefined' ? (\r\n                                    <img\r\n                                        src={'data:image/jpg;base64,' + props.blogger.profilepic}\r\n                                        alt={alt}\r\n                                    />\r\n                                ) : (\r\n                                    <img src={alt} alt={alt} />\r\n                                )}\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"header__menu__right__login-button\">\r\n                                <button onClick={() => navigate('/')}>\r\n                                    Đăng nhập\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                        {openSettings && (\r\n                            <SettingsMenu\r\n                                alias={props?.blogger?.alias}\r\n                                settings={settings}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\routes\\routes.jsx",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\SettingsMenu.jsx",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\DropdownMenu.jsx",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\NoTopicNotif.jsx",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\Category.jsx",["228"],[],"import React from \"react\";\r\nimport Helmet from \"../components/Helmet\";\r\nimport Banner from \"../components/Banner\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getBloggerByAliasAsync } from \"../features/user/bloggerSlice\";\r\nimport CategoryCard from \"../components/CategoryCard\";\r\nimport PageNotFound from \"./PageNotFound\";\r\nimport { useState } from \"react\";\r\nimport alt from \"../assets/image/topic/alt.jpg\";\r\n\r\nfunction Category() {\r\n\tconst dispatch = useDispatch();\r\n\tconst params = useParams();\r\n\tconst alias = params.alias;\r\n\tconst blogger = useSelector((state) => state.blogger);\r\n\tuseEffect(() => {\r\n\t\tdispatch(getBloggerByAliasAsync(alias));\r\n\t}, [dispatch, alias]);\r\n\t\r\n\tconst topic = blogger.Topic?.find((topic) => topic.slug === params.slug);\r\n\t// const allBlogsByTopic = Array.isArray(allBlogs)\r\n\t// \t? allBlogs?.filter((blog) => blog.Topic.slug === params.slug)\r\n\t// \t: [allBlogs];\r\n\tconst allBlogsByTopic = topic ? topic.Blog : null;\r\n\r\n\tif (\r\n\t\t(typeof topic !== \"undefined\" && topic.length === 0) ||\r\n\t\ttypeof topic === \"string\"\r\n\t)\r\n\t\treturn <PageNotFound />;\r\n\r\n\tif (topic)\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Helmet title=\"Chủ đề\">\r\n\t\t\t\t\t<div className=\"allCategoryCards\">\r\n\t\t\t\t\t\t<div className=\"allCategoryCards_banner\">\r\n\t\t\t\t\t\t\t{topic.img !== undefined && topic.img !== '' ? (\r\n\t\t\t\t\t\t\t\t<Banner\r\n\t\t\t\t\t\t\t\t\timg={'data:image/jpg;base64,' + topic.img.toString('base64')}\r\n\t\t\t\t\t\t\t\t\twidth=\"100\"\r\n\t\t\t\t\t\t\t\t\theight=\"440\"\r\n\t\t\t\t\t\t\t\t\tquote={topic.quote}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Banner\r\n\t\t\t\t\t\t\t\t\timg={alt}\r\n\t\t\t\t\t\t\t\t\twidth=\"100\"\r\n\t\t\t\t\t\t\t\t\theight=\"440\"\r\n\t\t\t\t\t\t\t\t\tquote={topic.quote}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"allCategoryCards_container\">\r\n\t\t\t\t\t\t\t{allBlogsByTopic.map((blog, index) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<CategoryCard\r\n\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\tid={blog.id}\r\n\t\t\t\t\t\t\t\t\t\timg={blog.coverImg}\r\n\t\t\t\t\t\t\t\t\t\tdate={`${\r\n\t\t\t\t\t\t\t\t\t\t\tblog.location !== null ? blog.location + \" - \" : \"\"\r\n\t\t\t\t\t\t\t\t\t\t}${blog.date !== undefined ? blog.date.slice(0, 10) : \"\"}`}\r\n\t\t\t\t\t\t\t\t\t\ttitle={`${blog.title}`}\r\n\t\t\t\t\t\t\t\t\t\tcontent={`${blog.content}`}\r\n\t\t\t\t\t\t\t\t\t\tslug={`${blog.slug}`}\r\n\t\t\t\t\t\t\t\t\t\tblogger={blogger}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Helmet>\r\n\t\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Category;\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\Blog.jsx",["229"],[],"import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getBlogBySlugAsync } from \"../features/post/blogSlice\";\r\nimport Helmet from \"../components/Helmet\";\r\nimport Banner from \"../components/Banner\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PageNotFound from \"./PageNotFound\";\r\nimport alt from \"../assets/image/blog/alt.jpg\";\r\n\r\nfunction Blog({ name }) {\r\n\tconst params = useParams();\r\n\tconst slug = params.slug;\r\n\tconst dispatch = useDispatch();\r\n\tconst blogs = useSelector((state) => state.blog);\r\n\tuseEffect(() => {\r\n\t\tdispatch(getBlogBySlugAsync(slug));\r\n\t}, [dispatch, slug]);\r\n\tconst blog = Array.isArray(blogs)\r\n\t\t? blogs?.find((blog) => blog.slug === slug)\r\n\t\t: blogs;\r\n\r\n\t// if (\r\n\t// \t(blog.length === 0)\r\n\t// )\r\n\t// \treturn <PageNotFound />;\r\n\r\n\tif (typeof blog === \"object\")\r\n\t\t// if (blog)\r\n\t\treturn (\r\n\t\t\t<Helmet title=\"Blog\">\r\n\t\t\t\t<div className=\"blog\">\r\n\t\t\t\t\t{blog.coverImg !== undefined ? (\r\n\t\t\t\t\t\t<Banner\r\n\t\t\t\t\t\t\timg={'data:image/jpg;base64,' + blog.coverImg.toString('base64')}\r\n\t\t\t\t\t\t\talt={alt}\r\n\t\t\t\t\t\t\tquote={blog.quote}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Banner img={alt} alt={alt} quote={blog.quote} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<div className=\"blog__timestamp\">{`${\r\n\t\t\t\t\t\tblog.location === undefined ? blog.location + \" - \" : \"\"\r\n\t\t\t\t\t}${blog.date === undefined ? \"\" : blog.date.slice(0, 10)}`}</div>\r\n\t\t\t\t\t<div className=\"blog__content\">\r\n\t\t\t\t\t\t<div className=\"blog__content__title\">{blog.title}</div>\r\n\t\t\t\t\t\t<div className=\"blog__content__body\">{blog.content}</div>\r\n\t\t\t\t\t\t<div className=\"blog__content__signature\">by {name}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Helmet>\r\n\t\t);\r\n}\r\n\r\nexport default Blog;\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\Home.jsx",["230"],[],"import React from 'react';\r\nimport Helmet from '../components/Helmet';\r\nimport Topic from '../components/Topic';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport alt from '../assets/image/user/alt.png';\r\n\r\nfunction Home({ blogger }) {\r\n    // const allTopics = useSelector((state) => state.topic);\r\n    const user = JSON.parse(localStorage.getItem('user'))?.account;\r\n    // const userID = blogger.id;\r\n    // const dispatch = useDispatch();\r\n    // useEffect(() => {\r\n    // \tdispatch(getAllTopicsByUserIDAsync(userID));\r\n    // }, [dispatch, userID]);\r\n    var allTopicElements;\r\n    if (blogger._id) {\r\n        allTopicElements = blogger.Topic.map((topic, index) => {\r\n            return (\r\n                <Topic\r\n                    key={index}\r\n                    index={index}\r\n                    id={topic._id}\r\n                    userID={topic.userID}\r\n                    topicName={topic.topicName}\r\n                    slug={topic.slug}\r\n                    blogs={topic.Blog}\r\n                    alias={blogger.alias}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    // const isEqual = (...objects) =>\r\n    //     objects.every(\r\n    //         (obj) => JSON.stringify(obj) === JSON.stringify(objects[0])\r\n    //     );\r\n\tvar isLoggedIn = false;\r\n\tuser && (isLoggedIn = (blogger.alias === user.alias));\r\n    return (\r\n        <div>\r\n            <Helmet title=\"Trang chủ\">\r\n                {\r\n                    <div className=\"home\">\r\n                        {isLoggedIn ? (\r\n                            <div className=\"home__new-blog\">\r\n                                <Link\r\n                                    to={`/${user.alias}/newBlog`}\r\n                                    className=\"home__link\"\r\n                                >\r\n                                    <div className=\"home__new-blog__pfp\">\r\n                                        {blogger.profilepic !== '' &&\r\n                                        blogger.profilepic !== undefined ? (\r\n                                            <img\r\n                                                src={\r\n                                                    'data:image/jpg;base64,' +\r\n                                                    blogger.profilepic\r\n                                                }\r\n                                                alt={alt}\r\n                                            />\r\n                                        ) : (\r\n                                            <img src={alt} alt={alt} />\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"home__new-blog__placeholder\">\r\n                                        {'Tạo nguồn cảm hứng mới <3'}\r\n                                    </div>\r\n                                </Link>\r\n                            </div>\r\n                        ) : (\r\n                            ''\r\n                        )}\r\n                        <div className=\"home__topics\">{allTopicElements}</div>\r\n                    </div>\r\n                }\r\n            </Helmet>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\About.jsx",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\EditBlog.jsx",["231","232","233","234"],[],"import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport namingBlogSlug from \"../utils/namingSlugs\";\r\nimport {\r\n\tgetBlogBySlugAsync,\r\n\tcreateNewBlogAsync,\r\n\tupdateBlogAsync,\r\n} from \"../features/post/blogSlice\";\r\nimport Helmet from \"../components/Helmet\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst EditBlog = ({ alias }) => {\r\n\tconst textareaRef = useRef();\r\n\tconst imageRef = useRef();\r\n\tconst dispatch = useDispatch();\r\n\tconst navigate = useNavigate();\r\n\tconst params = useParams();\r\n\tconst slug = params.slug;\r\n\tconst blog = useSelector((state) => state.blog);\r\n\tconst [newBlog, setNewBlog] = useState(blog);\r\n\tuseEffect(() => {\r\n\t\tif (newBlog.slug !== blog.slug || slug !== blog.slug) {\r\n\t\t\tdispatch(getBlogBySlugAsync(slug));\r\n\t\t\tsetNewBlog(blog);\r\n\t\t}\r\n\t}, [slug, dispatch, blog, newBlog.slug]);\r\n\r\n\tconst handleChange = (input) => (event) => {\r\n\t\tsetNewBlog({ ...newBlog, [input]: event.target.value });\r\n\t};\r\n\t// const [image, setImage] = useState();\r\n\r\n\tconst readImage = (e) => {\r\n\t\tconst image = e.target.files[0];\r\n\t};\r\n\r\n\tconst imageUploadHandler = (e) => {};\r\n\r\n\tconst handleNewBlog = (e) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(updateBlogAsync({ blogReqData: newBlog }));\r\n\t\tnavigate(`/${alias}/`);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Helmet title=\"Chỉnh sừa blog\">\r\n\t\t\t<div className=\"new-blog\">\r\n\t\t\t\t<form className=\"new-blog__form\" onSubmit={handleNewBlog}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\tref={imageRef}\r\n\t\t\t\t\t\tonChange={readImage}\r\n\t\t\t\t\t\tclassName=\"new-blog__form__image\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"quote\"\r\n\t\t\t\t\t\tonChange={handleChange(\"quote\")}\r\n\t\t\t\t\t\tclassName=\"new-blog__form__quote\"\r\n\t\t\t\t\t\tplaceholder=\"Quote\"\r\n\t\t\t\t\t\tvalue={newBlog?.quote}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"location\"\r\n\t\t\t\t\t\tclassName=\"new-blog__form__place\"\r\n\t\t\t\t\t\tplaceholder=\"Địa điểm\"\r\n\t\t\t\t\t\tonChange={handleChange(\"location\")}\r\n\t\t\t\t\t\tvalue={newBlog?.location}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\tclassName=\"new-blog__form__title\"\r\n\t\t\t\t\t\tplaceholder=\"Tiêu đề\"\r\n\t\t\t\t\t\tonChange={handleChange(\"title\")}\r\n\t\t\t\t\t\tvalue={newBlog?.title}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"content\"\r\n\t\t\t\t\t\tclassName=\"new-blog__form__body\"\r\n\t\t\t\t\t\tplaceholder=\"Nội dung\"\r\n\t\t\t\t\t\tref={textareaRef}\r\n\t\t\t\t\t\tvalue={newBlog?.content}\r\n\t\t\t\t\t\tonChange={handleChange(\"content\")}\r\n\t\t\t\t\t\tonKeyUp={(e) => {\r\n\t\t\t\t\t\t\ttextareaRef.current.style.height = \"200px\";\r\n\t\t\t\t\t\t\tlet height = e.target.scrollHeight;\r\n\t\t\t\t\t\t\tif (height > 200) {\r\n\t\t\t\t\t\t\t\t// textareaRef.current.style.height = \"auto\";\r\n\t\t\t\t\t\t\t\ttextareaRef.current.style.height = `${height}px`;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}></textarea>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"new-blog__form__signature\"\r\n\t\t\t\t\t\tplaceholder=\"Chữ ký\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button className=\"new-blog__form__create-button\" type=\"submit\">\r\n\t\t\t\t\t\tSửa bài viết\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</Helmet>\r\n\t);\r\n};\r\n\r\nexport default EditBlog;\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\NewBlog.jsx",["235","236","237","238"],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\pages\\Settings.jsx",["239"],[],"import React from 'react';\r\nimport { useRef } from 'react';\r\nimport { useState } from 'react';\r\nimport Avatar from 'react-avatar-edit';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateUserAsync } from '../features/user/userSlice';\r\n\r\nconst Settings = (props) => {\r\n    const dispatch = useDispatch();\r\n\r\n    var [src, setSrc] = useState(\r\n        props.blogger.profilepic === '' ||\r\n            props.blogger.profilepic === undefined\r\n            ? require('../assets/image/user/alt.png')\r\n            : 'data:image/jpg;base64,' + props.blogger.profilepic\r\n    );\r\n    var [newImg, setNewImg] = useState();\r\n    var [editting, setEditting] = useState(false);\r\n    const [file, setFile] = useState();\r\n    const [changeImg, setChangeImg] = useState(false);\r\n    const editRef = useRef();\r\n    const pfpRef = useRef();\r\n\r\n    const onEditClick = () => {\r\n        setEditting(!editting);\r\n        editRef.current.classList.toggle('editting');\r\n        if (editting === false) {\r\n            editRef.current.innerHTML = '&#10003;';\r\n        } else {\r\n            dispatch(\r\n                updateUserAsync({\r\n                    id: props.blogger._id,\r\n                    userReq: { profilepic: file },\r\n                })\r\n            );\r\n            setChangeImg(true);\r\n            setSrc(newImg);\r\n            editRef.current.innerHTML = 'Đổi ảnh';\r\n        }\r\n    };\r\n\r\n    const onStopClick = () => {\r\n        setEditting(!editting);\r\n        editRef.current.classList.toggle('editting');\r\n        if (editting === false) {\r\n            editRef.current.innerHTML = '&#10003;';\r\n        } else {\r\n            setChangeImg(false);\r\n            editRef.current.innerHTML = 'Đổi ảnh';\r\n        }\r\n    };\r\n\r\n    const onImageLoad = (e) => {\r\n        // setWidth()\r\n        console.log(e);\r\n    };\r\n\r\n    return (\r\n        <div className=\"Settings\">\r\n            <div className=\"Settings__left\">\r\n                <div className=\"Settings__left__pfp\">\r\n                    {editting === true ? (\r\n                        <Avatar\r\n                            width={350}\r\n                            height={350}\r\n                            onCrop={(e) => setNewImg(e)}\r\n                            onFileLoad={(file) => setFile(file)}\r\n                        ></Avatar>\r\n                    ) : props.blogger.profilepic === '' ||\r\n                      props.blogger.profilepic === undefined ? (\r\n                        <div className=\"Settings__left__pfp__img-container\">\r\n                            <img\r\n                                src={changeImg === true ? newImg : src}\r\n                                alt=\"\"\r\n                                ref={pfpRef}\r\n                            />\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"Settings__left__pfp__img-container\">\r\n                            <img\r\n                                src={changeImg === true ? newImg : src}\r\n                                alt=\"\"\r\n                                ref={pfpRef}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"Settings__left__change\">\r\n                    <div\r\n                        className=\"Settings__left__change__edit\"\r\n                        onClick={onEditClick}\r\n                        ref={editRef}\r\n                    >\r\n                        Đổi ảnh\r\n                    </div>\r\n                    {editting === true && (\r\n                        <div\r\n                            className=\"Settings__left__change__stop\"\r\n                            onClick={onStopClick}\r\n                        >\r\n                            &#x2715;\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className=\"Settings__right\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\utils\\namingSlugs.js",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\Helmet.jsx",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\CategoryCard.jsx",["240","241"],[],"import React, { useRef } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport MessageBox from \"./MessageBox\";\r\nimport { deleteBlogAsync } from \"../features/post/blogSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport alt from \"../assets/image/blog/alt.jpg\";\r\n\r\nconst CategoryCard = (props) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst params = useParams();\r\n\tconst bodyImageRef = useRef();\r\n\tconst onImgLoad = ({ target: img }) => {\r\n\t\tconst { offsetHeight, offsetWidth } = img;\r\n\t\tif (offsetWidth > offsetHeight)\r\n\t\t\tbodyImageRef.current.classList.add(\"landscape\");\r\n\t\telse bodyImageRef.current.classList.add(\"portrait\");\r\n\t};\r\n\r\n\tconst [openMessageBox, setOpenMessageBox] = useState(false);\r\n\r\n\tconst [messageBoxType, setMessageBoxType] = useState();\r\n\r\n\tconst publish = useRef();\r\n\tconst store = useRef();\r\n\r\n\tconst onCheckButtonClick = () => {\r\n\t\tsetOpenMessageBox(false);\r\n\t\tdispatch(deleteBlogAsync(props.id));\r\n\t};\r\n\r\n\tconst onCloseButtonClick = () => {\r\n\t\tsetOpenMessageBox(false);\r\n\t};\r\n\r\n\tconst user = useSelector((state) => state.user);\r\n\tconst blogger = useSelector((state) => state.blogger);\r\n\r\n\tconst isEqual = (...objects) =>\r\n\t\tobjects.every((obj) => JSON.stringify(obj) === JSON.stringify(objects[0]));\r\n\tconst isLoggedIn = isEqual(user, blogger);\r\n\r\n\treturn (\r\n        <div className=\"category_container\" id={props.id}>\r\n            <Link to={`/${params.alias}/blog/${props.slug}`}>\r\n                <div className=\"category_container-image\" ref={bodyImageRef}>\r\n                    {props.img !== undefined ? (\r\n                        <img\r\n                            onLoad={onImgLoad}\r\n                            src={'data:image/jpg;base64,' + props.img.toString('base64')}\r\n                            alt=\"\"\r\n                        />\r\n                    ) : (\r\n                        <img onLoad={onImgLoad} src={alt} alt=\"\" />\r\n                    )}\r\n                </div>\r\n                <div className=\"category_container-content\">\r\n                    <h3>{props.date}</h3>\r\n                    <h1>{props.title}</h1>\r\n                    <p>{props.content}</p>\r\n                </div>\r\n            </Link>\r\n            {isLoggedIn && (\r\n                <div className=\"category_container-functions\">\r\n                    <div className=\"category_container-functions-left\">\r\n                        {/* <i\r\n\t\t\t\t\t\t\tclassName=\"bx bx-paper-plane\"\r\n\t\t\t\t\t\t\tref={publish}\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetOpenMessageBox(!openMessageBox);\r\n\t\t\t\t\t\t\t\tsetMessageBoxType(\"Xuất bản\");\r\n\t\t\t\t\t\t\t\tstore.current.classList.toggle(\"hidden\");\r\n\t\t\t\t\t\t\t}}></i>\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"bx bxs-box hidden\"\r\n\t\t\t\t\t\t\tref={store}\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetOpenMessageBox(!openMessageBox);\r\n\t\t\t\t\t\t\t\tsetMessageBoxType(\"Lưu trữ\");\r\n\t\t\t\t\t\t\t\tpublish.current.classList.toggle(\"hidden\");\r\n\t\t\t\t\t\t\t}}></i> */}\r\n                    </div>\r\n\r\n                    <div className=\"category_container-functions-right\">\r\n                        <i\r\n                            className=\"bx bxs-edit-alt\"\r\n                            onClick={() => {\r\n                                setOpenMessageBox(!openMessageBox);\r\n                                setMessageBoxType('Chỉnh sửa');\r\n                            }}\r\n                        ></i>\r\n                        <i\r\n                            className=\"bx bxs-trash\"\r\n                            onClick={() => {\r\n                                setOpenMessageBox(!openMessageBox);\r\n                                setMessageBoxType('Xóa');\r\n                            }}\r\n                        ></i>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {openMessageBox && (\r\n                <MessageBox\r\n                    alias={params.alias}\r\n                    slug={props.slug}\r\n                    title={`${messageBoxType} blog`}\r\n                    body={`Bạn có chắc chắn muốn ${messageBoxType.toLowerCase()} `}\r\n                    blogName={props.title}\r\n                    onCloseButtonClick={onCloseButtonClick}\r\n                    onCheckButtonClick={onCheckButtonClick}\r\n                    functionType={messageBoxType}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoryCard;\r\n","D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\Banner.jsx",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\Topic.jsx",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\BlogCard.jsx",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\components\\MessageBox.jsx",[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\features\\common\\common.js",[],[],[],"D:\\Code\\HTML\\blog\\BlogProject\\client\\src\\features\\common\\authHeader.js",[],[],{"ruleId":"242","severity":1,"message":"243","line":1,"column":26,"nodeType":"244","messageId":"245","endLine":1,"endColumn":37},{"ruleId":"242","severity":1,"message":"246","line":9,"column":8,"nodeType":"244","messageId":"245","endLine":9,"endColumn":20},{"ruleId":"242","severity":1,"message":"247","line":12,"column":8,"nodeType":"244","messageId":"245","endLine":12,"endColumn":15},{"ruleId":"242","severity":1,"message":"248","line":1,"column":41,"nodeType":"244","messageId":"245","endLine":1,"endColumn":47},{"ruleId":"249","severity":1,"message":"250","line":101,"column":14,"nodeType":"251","messageId":"252","endLine":101,"endColumn":16},{"ruleId":"249","severity":1,"message":"250","line":59,"column":14,"nodeType":"251","messageId":"252","endLine":59,"endColumn":16},{"ruleId":"242","severity":1,"message":"253","line":3,"column":8,"nodeType":"244","messageId":"245","endLine":3,"endColumn":20},{"ruleId":"242","severity":1,"message":"254","line":4,"column":8,"nodeType":"244","messageId":"245","endLine":4,"endColumn":18},{"ruleId":"249","severity":1,"message":"250","line":35,"column":14,"nodeType":"251","messageId":"252","endLine":35,"endColumn":16},{"ruleId":"242","severity":1,"message":"255","line":1,"column":8,"nodeType":"244","messageId":"245","endLine":1,"endColumn":14},{"ruleId":"242","severity":1,"message":"256","line":8,"column":10,"nodeType":"244","messageId":"245","endLine":8,"endColumn":32},{"ruleId":"242","severity":1,"message":"257","line":15,"column":11,"nodeType":"244","messageId":"245","endLine":15,"endColumn":23},{"ruleId":"249","severity":1,"message":"250","line":59,"column":14,"nodeType":"251","messageId":"252","endLine":59,"endColumn":16},{"ruleId":"242","severity":1,"message":"258","line":29,"column":19,"nodeType":"244","messageId":"245","endLine":29,"endColumn":30},{"ruleId":"242","severity":1,"message":"259","line":4,"column":10,"nodeType":"244","messageId":"245","endLine":4,"endColumn":23},{"ruleId":"242","severity":1,"message":"260","line":10,"column":10,"nodeType":"244","messageId":"245","endLine":10,"endColumn":18},{"ruleId":"242","severity":1,"message":"246","line":7,"column":8,"nodeType":"244","messageId":"245","endLine":7,"endColumn":20},{"ruleId":"242","severity":1,"message":"261","line":4,"column":10,"nodeType":"244","messageId":"245","endLine":4,"endColumn":21},{"ruleId":"242","severity":1,"message":"262","line":5,"column":8,"nodeType":"244","messageId":"245","endLine":5,"endColumn":22},{"ruleId":"242","severity":1,"message":"263","line":8,"column":2,"nodeType":"244","messageId":"245","endLine":8,"endColumn":20},{"ruleId":"242","severity":1,"message":"264","line":38,"column":9,"nodeType":"244","messageId":"245","endLine":38,"endColumn":14},{"ruleId":"242","severity":1,"message":"265","line":41,"column":8,"nodeType":"244","messageId":"245","endLine":41,"endColumn":26},{"ruleId":"242","severity":1,"message":"266","line":11,"column":10,"nodeType":"244","messageId":"245","endLine":11,"endColumn":32},{"ruleId":"267","severity":1,"message":"268","line":58,"column":34,"nodeType":"269","messageId":"270","endLine":58,"endColumn":53,"fix":"271"},{"ruleId":"242","severity":1,"message":"265","line":61,"column":11,"nodeType":"244","messageId":"245","endLine":61,"endColumn":29},{"ruleId":"242","severity":1,"message":"272","line":63,"column":19,"nodeType":"244","messageId":"245","endLine":63,"endColumn":27},{"ruleId":"242","severity":1,"message":"273","line":53,"column":11,"nodeType":"244","messageId":"245","endLine":53,"endColumn":22},{"ruleId":"242","severity":1,"message":"274","line":25,"column":8,"nodeType":"244","messageId":"245","endLine":25,"endColumn":15},{"ruleId":"242","severity":1,"message":"275","line":26,"column":8,"nodeType":"244","messageId":"245","endLine":26,"endColumn":13},"no-unused-vars","'createStore' is defined but never used.","Identifier","unusedVar","'PageNotFound' is defined but never used.","'account' is assigned a value but never used.","'nanoid' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'setAuthToken' is defined but never used.","'authHeader' is defined but never used.","'Footer' is defined but never used.","'getUserByUsernameAsync' is defined but never used.","'userSelector' is assigned a value but never used.","'setFullName' is assigned a value but never used.","'selectAccount' is defined but never used.","'useState' is defined but never used.","'useSelector' is defined but never used.","'namingBlogSlug' is defined but never used.","'createNewBlogAsync' is defined but never used.","'image' is assigned a value but never used.","'imageUploadHandler' is assigned a value but never used.","'getBloggerByAliasAsync' is defined but never used.","no-useless-computed-key","Unnecessarily computed property ['coverImg'] found.","Property","unnecessarilyComputedProperty",{"range":"276","text":"277"},"'setTopic' is assigned a value but never used.","'onImageLoad' is assigned a value but never used.","'publish' is assigned a value but never used.","'store' is assigned a value but never used.",[2048,2060],"'coverImg'"]