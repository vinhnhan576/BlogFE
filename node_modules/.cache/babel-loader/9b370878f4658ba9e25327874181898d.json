{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport Axios from \"axios\";\nimport qs from \"qs\";\nexport const accountSlice = createSlice({\n  name: \"account\",\n  initialState: {\n    account: null\n  },\n  reducers: {\n    login: (state, action) => {\n      Axios({\n        method: \"get\",\n        url: \"http://localhost:5000/auth\",\n        headers: {\n          \"content-type\": \"application/x-www-form-urlencoded\"\n        },\n        data: qs.stringify({\n          username: action.payload.username,\n          password: action.payload.password\n        })\n      }).then(res => {\n        console.log(res);\n        if (res) state.account = action.payload;else state.account = null;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    logout: state => {\n      state.account = null;\n    }\n  }\n});\nexport const {\n  login,\n  logout\n} = accountSlice.actions;\nexport const selectAccount = state => state.account.account;\nexport default accountSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","Axios","qs","accountSlice","name","initialState","account","reducers","login","state","action","method","url","headers","data","stringify","username","payload","password","then","res","console","log","catch","error","logout","actions","selectAccount","reducer"],"sources":["D:/Code/HTML/BlogProject/client/src/features/account/accountSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport Axios from \"axios\";\r\nimport qs from \"qs\";\r\n\r\nexport const accountSlice = createSlice({\r\n\tname: \"account\",\r\n\tinitialState: {\r\n\t\taccount: null,\r\n\t},\r\n\treducers: {\r\n\t\tlogin: (state, action) => {\r\n\t\t\tAxios({\r\n\t\t\t\tmethod: \"get\",\r\n\t\t\t\turl: \"http://localhost:5000/auth\",\r\n\t\t\t\theaders: { \"content-type\": \"application/x-www-form-urlencoded\" },\r\n\t\t\t\tdata: qs.stringify({\r\n\t\t\t\t\tusername: action.payload.username,\r\n\t\t\t\t\tpassword: action.payload.password,\r\n\t\t\t\t}),\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t\tif (res) state.account = action.payload;\r\n\t\t\t\t\telse state.account = null;\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t});\r\n\t\t},\r\n\t\tlogout: (state) => {\r\n\t\t\tstate.account = null;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { login, logout } = accountSlice.actions;\r\n\r\nexport const selectAccount = (state) => state.account.account;\r\n\r\nexport default accountSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AAEA,OAAO,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EACvCK,IAAI,EAAE,SADiC;EAEvCC,YAAY,EAAE;IACbC,OAAO,EAAE;EADI,CAFyB;EAKvCC,QAAQ,EAAE;IACTC,KAAK,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACzBT,KAAK,CAAC;QACLU,MAAM,EAAE,KADH;QAELC,GAAG,EAAE,4BAFA;QAGLC,OAAO,EAAE;UAAE,gBAAgB;QAAlB,CAHJ;QAILC,IAAI,EAAEZ,EAAE,CAACa,SAAH,CAAa;UAClBC,QAAQ,EAAEN,MAAM,CAACO,OAAP,CAAeD,QADP;UAElBE,QAAQ,EAAER,MAAM,CAACO,OAAP,CAAeC;QAFP,CAAb;MAJD,CAAD,CAAL,CASEC,IATF,CASQC,GAAD,IAAS;QACdC,OAAO,CAACC,GAAR,CAAYF,GAAZ;QACA,IAAIA,GAAJ,EAASX,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACO,OAAvB,CAAT,KACKR,KAAK,CAACH,OAAN,GAAgB,IAAhB;MACL,CAbF,EAcEiB,KAdF,CAcSC,KAAD,IAAW;QACjBH,OAAO,CAACC,GAAR,CAAYE,KAAZ;MACA,CAhBF;IAiBA,CAnBQ;IAoBTC,MAAM,EAAGhB,KAAD,IAAW;MAClBA,KAAK,CAACH,OAAN,GAAgB,IAAhB;IACA;EAtBQ;AAL6B,CAAD,CAAhC;AA+BP,OAAO,MAAM;EAAEE,KAAF;EAASiB;AAAT,IAAoBtB,YAAY,CAACuB,OAAvC;AAEP,OAAO,MAAMC,aAAa,GAAIlB,KAAD,IAAWA,KAAK,CAACH,OAAN,CAAcA,OAA/C;AAEP,eAAeH,YAAY,CAACyB,OAA5B"},"metadata":{},"sourceType":"module"}