{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport Axios from \"axios\"; // export const authenticateAccountAsync = createAsyncThunk(\n// \t\"accounts/authenticateAccountAsync\",\n// \tasync (username, password) => {\n// \t\tconst res = await Axios.get(`http://localhost:5000/auth}`);\n// \t\tconst tasks = res.data;\n// \t\treturn { tasks };\n// \t}\n// );\n\nexport const accountSlice = createSlice({\n  name: \"account\",\n  initialState: {\n    account: null\n  },\n  reducers: {\n    login: (state, action) => {\n      console.log(\"action payload:\" + action.payload); // const res =  Axios.get(\"http://localhost:5000/auth}\", {\n      // \tparams: {\n      // \t\tusername: action.payload.username,\n      // \t\tpassword: action.payload.password,\n      // \t},\n      // });\n      // if (res) state.account = action.payload;\n      // else state.account = null;\n\n      state.account = action.payload;\n    },\n    logout: state => {\n      state.account = null;\n    }\n  },\n  extraReducers: {\n    [authenticateAccountAsync.fulfilled]: (state, action) => {\n      console.log(\"account authentication successfully\");\n      return action.payload.tasks;\n    }\n  }\n});\nexport const {\n  login,\n  logout\n} = accountSlice.actions;\nexport default accountSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","Axios","accountSlice","name","initialState","account","reducers","login","state","action","console","log","payload","logout","extraReducers","authenticateAccountAsync","fulfilled","tasks","actions","reducer"],"sources":["D:/Code/HTML/BlogProject/client/src/features/account/accountSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport Axios from \"axios\";\r\n\r\n// export const authenticateAccountAsync = createAsyncThunk(\r\n// \t\"accounts/authenticateAccountAsync\",\r\n// \tasync (username, password) => {\r\n// \t\tconst res = await Axios.get(`http://localhost:5000/auth}`);\r\n// \t\tconst tasks = res.data;\r\n// \t\treturn { tasks };\r\n// \t}\r\n// );\r\n\r\nexport const accountSlice = createSlice({\r\n\tname: \"account\",\r\n\tinitialState: {\r\n\t\taccount: null,\r\n\t},\r\n\treducers: {\r\n\t\tlogin: (state, action) => {\r\n\t\t\tconsole.log(\"action payload:\" + action.payload);\r\n\t\t\t// const res =  Axios.get(\"http://localhost:5000/auth}\", {\r\n\t\t\t// \tparams: {\r\n\t\t\t// \t\tusername: action.payload.username,\r\n\t\t\t// \t\tpassword: action.payload.password,\r\n\t\t\t// \t},\r\n\t\t\t// });\r\n\t\t\t// if (res) state.account = action.payload;\r\n\t\t\t// else state.account = null;\r\n\t\t\tstate.account = action.payload;\r\n\t\t},\r\n\t\tlogout: (state) => {\r\n\t\t\tstate.account = null;\r\n\t\t},\r\n\t},\r\n\textraReducers: {\r\n\t\t[authenticateAccountAsync.fulfilled]: (state, action) => {\r\n\t\t\tconsole.log(\"account authentication successfully\");\r\n\t\t\treturn action.payload.tasks;\r\n\t\t},\r\n\t},\r\n});\r\nexport const { login, logout } = accountSlice.actions;\r\n\r\nexport default accountSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,YAAY,GAAGH,WAAW,CAAC;EACvCI,IAAI,EAAE,SADiC;EAEvCC,YAAY,EAAE;IACbC,OAAO,EAAE;EADI,CAFyB;EAKvCC,QAAQ,EAAE;IACTC,KAAK,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACzBC,OAAO,CAACC,GAAR,CAAY,oBAAoBF,MAAM,CAACG,OAAvC,EADyB,CAEzB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MACAJ,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACG,OAAvB;IACA,CAZQ;IAaTC,MAAM,EAAGL,KAAD,IAAW;MAClBA,KAAK,CAACH,OAAN,GAAgB,IAAhB;IACA;EAfQ,CAL6B;EAsBvCS,aAAa,EAAE;IACd,CAACC,wBAAwB,CAACC,SAA1B,GAAsC,CAACR,KAAD,EAAQC,MAAR,KAAmB;MACxDC,OAAO,CAACC,GAAR,CAAY,qCAAZ;MACA,OAAOF,MAAM,CAACG,OAAP,CAAeK,KAAtB;IACA;EAJa;AAtBwB,CAAD,CAAhC;AA6BP,OAAO,MAAM;EAAEV,KAAF;EAASM;AAAT,IAAoBX,YAAY,CAACgB,OAAvC;AAEP,eAAehB,YAAY,CAACiB,OAA5B"},"metadata":{},"sourceType":"module"}