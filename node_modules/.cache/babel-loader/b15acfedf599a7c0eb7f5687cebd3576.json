{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\HTML\\\\blog\\\\BlogProject\\\\client\\\\src\\\\components\\\\Comment.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport Reply from './Reply';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comment = _ref => {\n  _s();\n\n  let {\n    comment,\n    alias,\n    pfp,\n    head,\n    lastchild,\n    blogID,\n    userID\n  } = _ref;\n  const [showReplies, setShowReplies] = useState(false);\n  const [newReply, setNewReply] = useState(false);\n  console.log(blogID);\n  console.log(userID);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `comment__card`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment__card__left\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment__card__left__pfp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `comment__card__right ${comment.children && comment.children.length > 0 && 'border'} ${lastchild === true ? 'lastchild' : ''} ${!showReplies ? 'hiding-replies' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment__card__right__title\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment__card__right__title__alias\",\n            children: alias\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment__card__right__title__timestamp\",\n            children: comment.createdAt.slice(0, 16)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment__card__right__context\",\n          children: comment.context\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment__card__right__options\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment__card__right__options__reply\",\n            onClick: () => setNewReply(!newReply),\n            children: \"reply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), !showReplies ? comment.childNum > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment__card__right__show-reply\",\n          onClick: () => setShowReplies(!showReplies),\n          children: [\"show \", comment.childNum, ' ', comment.childNum === 1 ? 'reply' : 'replies', /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment__card__left__connectline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `comment__card__right__replies ${showReplies ? 'show-replies' : ''}`,\n          children: comment.children && comment.children.map((child, index) => {\n            return /*#__PURE__*/_jsxDEV(Comment, {\n              comment: child,\n              alias: alias,\n              head: false,\n              blogID: blogID,\n              userID: userID,\n              lastchild: index === comment.children.length - 1 ? true : false\n            }, child._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 41\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), newReply && /*#__PURE__*/_jsxDEV(Reply, {\n          blogID: blogID,\n          userID: userID,\n          parentID: comment._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Comment, \"7h0kt+FSJHDKfJ584zZzfEcjz64=\");\n\n_c = Comment;\n\nconst showingTimestamp = timestamp => {};\n\nexport default Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","Reply","Comment","comment","alias","pfp","head","lastchild","blogID","userID","showReplies","setShowReplies","newReply","setNewReply","console","log","children","length","createdAt","slice","context","childNum","map","child","index","_id","showingTimestamp","timestamp"],"sources":["D:/Code/HTML/blog/BlogProject/client/src/components/Comment.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport Reply from './Reply';\r\n\r\nconst Comment = ({ comment, alias, pfp, head, lastchild, blogID, userID }) => {\r\n    const [showReplies, setShowReplies] = useState(false);\r\n    const [newReply, setNewReply] = useState(false);\r\n\r\n    console.log(blogID)\r\n    console.log(userID)\r\n\r\n    return (\r\n        <div className=\"comment\">\r\n            <div className={`comment__card`}>\r\n                <div className=\"comment__card__left\">\r\n                    <div className=\"comment__card__left__pfp\"></div>\r\n                    {/* {!head && (\r\n                        <div className=\"comment__card__left__connectline\"></div>\r\n                    )} */}\r\n                </div>\r\n                <div\r\n                    className={`comment__card__right ${\r\n                        comment.children &&\r\n                        comment.children.length > 0 &&\r\n                        'border'\r\n                    } ${lastchild === true ? 'lastchild' : ''} ${\r\n                        !showReplies ? 'hiding-replies' : ''\r\n                    }`}\r\n                >\r\n                    <div className=\"comment__card__right__title\">\r\n                        <div className=\"comment__card__right__title__alias\">\r\n                            {alias}\r\n                        </div>\r\n                        <div className=\"comment__card__right__title__timestamp\">\r\n                            {comment.createdAt.slice(0, 16)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"comment__card__right__context\">\r\n                        {comment.context}\r\n                    </div>\r\n                    <div className=\"comment__card__right__options\">\r\n                        <div\r\n                            className=\"comment__card__right__options__reply\"\r\n                            onClick={() => setNewReply(!newReply)}\r\n                        >\r\n                            reply\r\n                        </div>\r\n                    </div>\r\n                    {!showReplies ? (\r\n                        comment.childNum > 0 && (\r\n                            <div\r\n                                className=\"comment__card__right__show-reply\"\r\n                                onClick={() => setShowReplies(!showReplies)}\r\n                            >\r\n                                show {comment.childNum}{' '}\r\n                                {comment.childNum === 1 ? 'reply' : 'replies'}\r\n                                <div className=\"comment__card__left__connectline\"></div>\r\n                            </div>\r\n                        )\r\n                    ) : (\r\n                        <div className={`comment__card__right__replies ${showReplies ? 'show-replies' :''}`}>\r\n                            {comment.children &&\r\n                                comment.children.map((child, index) => {\r\n                                    return (\r\n                                        <Comment\r\n                                            comment={child}\r\n                                            key={child._id}\r\n                                            alias={alias}\r\n                                            head={false}\r\n                                            blogID={blogID}\r\n                                            userID={userID}\r\n                                            lastchild={\r\n                                                index ===\r\n                                                comment.children.length - 1\r\n                                                    ? true\r\n                                                    : false\r\n                                            }\r\n                                        />\r\n                                    );\r\n                                })}\r\n                        </div>\r\n                    )}\r\n                    {newReply && (\r\n                        <Reply\r\n                            blogID={blogID}\r\n                            userID={userID}\r\n                            parentID={comment._id}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst showingTimestamp = (timestamp) => {\r\n\r\n};\r\n\r\nexport default Comment;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,OAAO,GAAG,QAA8D;EAAA;;EAAA,IAA7D;IAAEC,OAAF;IAAWC,KAAX;IAAkBC,GAAlB;IAAuBC,IAAvB;IAA6BC,SAA7B;IAAwCC,MAAxC;IAAgDC;EAAhD,CAA6D;EAC1E,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,KAAD,CAA9C;EACA,MAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;EAEAc,OAAO,CAACC,GAAR,CAAYP,MAAZ;EACAM,OAAO,CAACC,GAAR,CAAYN,MAAZ;EAEA,oBACI;IAAK,SAAS,EAAC,SAAf;IAAA,uBACI;MAAK,SAAS,EAAG,eAAjB;MAAA,wBACI;QAAK,SAAS,EAAC,qBAAf;QAAA,uBACI;UAAK,SAAS,EAAC;QAAf;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAOI;QACI,SAAS,EAAG,wBACRN,OAAO,CAACa,QAAR,IACAb,OAAO,CAACa,QAAR,CAAiBC,MAAjB,GAA0B,CAD1B,IAEA,QACH,IAAGV,SAAS,KAAK,IAAd,GAAqB,WAArB,GAAmC,EAAG,IACtC,CAACG,WAAD,GAAe,gBAAf,GAAkC,EACrC,EAPL;QAAA,wBASI;UAAK,SAAS,EAAC,6BAAf;UAAA,wBACI;YAAK,SAAS,EAAC,oCAAf;YAAA,UACKN;UADL;YAAA;YAAA;YAAA;UAAA,QADJ,eAII;YAAK,SAAS,EAAC,wCAAf;YAAA,UACKD,OAAO,CAACe,SAAR,CAAkBC,KAAlB,CAAwB,CAAxB,EAA2B,EAA3B;UADL;YAAA;YAAA;YAAA;UAAA,QAJJ;QAAA;UAAA;UAAA;UAAA;QAAA,QATJ,eAiBI;UAAK,SAAS,EAAC,+BAAf;UAAA,UACKhB,OAAO,CAACiB;QADb;UAAA;UAAA;UAAA;QAAA,QAjBJ,eAoBI;UAAK,SAAS,EAAC,+BAAf;UAAA,uBACI;YACI,SAAS,EAAC,sCADd;YAEI,OAAO,EAAE,MAAMP,WAAW,CAAC,CAACD,QAAF,CAF9B;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QApBJ,EA4BK,CAACF,WAAD,GACGP,OAAO,CAACkB,QAAR,GAAmB,CAAnB,iBACI;UACI,SAAS,EAAC,kCADd;UAEI,OAAO,EAAE,MAAMV,cAAc,CAAC,CAACD,WAAF,CAFjC;UAAA,oBAIUP,OAAO,CAACkB,QAJlB,EAI4B,GAJ5B,EAKKlB,OAAO,CAACkB,QAAR,KAAqB,CAArB,GAAyB,OAAzB,GAAmC,SALxC,eAMI;YAAK,SAAS,EAAC;UAAf;YAAA;YAAA;YAAA;UAAA,QANJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAFP,gBAYG;UAAK,SAAS,EAAG,iCAAgCX,WAAW,GAAG,cAAH,GAAmB,EAAG,EAAlF;UAAA,UACKP,OAAO,CAACa,QAAR,IACGb,OAAO,CAACa,QAAR,CAAiBM,GAAjB,CAAqB,CAACC,KAAD,EAAQC,KAAR,KAAkB;YACnC,oBACI,QAAC,OAAD;cACI,OAAO,EAAED,KADb;cAGI,KAAK,EAAEnB,KAHX;cAII,IAAI,EAAE,KAJV;cAKI,MAAM,EAAEI,MALZ;cAMI,MAAM,EAAEC,MANZ;cAOI,SAAS,EACLe,KAAK,KACLrB,OAAO,CAACa,QAAR,CAAiBC,MAAjB,GAA0B,CAD1B,GAEM,IAFN,GAGM;YAXd,GAESM,KAAK,CAACE,GAFf;cAAA;cAAA;cAAA;YAAA,QADJ;UAgBH,CAjBD;QAFR;UAAA;UAAA;UAAA;QAAA,QAxCR,EA8DKb,QAAQ,iBACL,QAAC,KAAD;UACI,MAAM,EAAEJ,MADZ;UAEI,MAAM,EAAEC,MAFZ;UAGI,QAAQ,EAAEN,OAAO,CAACsB;QAHtB;UAAA;UAAA;UAAA;QAAA,QA/DR;MAAA;QAAA;QAAA;QAAA;MAAA,QAPJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAkFH,CAzFD;;GAAMvB,O;;KAAAA,O;;AA2FN,MAAMwB,gBAAgB,GAAIC,SAAD,IAAe,CAEvC,CAFD;;AAIA,eAAezB,OAAf"},"metadata":{},"sourceType":"module"}