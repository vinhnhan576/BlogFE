{"ast":null,"code":"import { createSlice, createAsyncThunk, nanoid } from \"@reduxjs/toolkit\";\nimport Axios from \"axios\";\nexport const getAllTasksAsync = createAsyncThunk(\"tasks/getAllTasksAsync\", async () => {\n  const response = await Axios.get(\"http://localhost:5000/api/v1/tasks\");\n  const tasks = response.data;\n  return {\n    tasks\n  };\n});\nconst PostSlice = createSlice({\n  name: \"post\",\n  initialState: [],\n  reducers: {},\n  extraReducers: {\n    [getAllTasksAsync.fulfilled]: (state, action) => {\n      console.log(\"fetching data successfully\");\n      return action.payload.tasks;\n    },\n    [AddNewTaskAsync.fulfilled]: (state, action) => {\n      state.push(action.payload);\n    },\n    [deleteTaskAsync.fulfilled]: (state, action) => {\n      const newID = action.payload.id;\n      return state.filter(item => item.id !== newID);\n    },\n    [toggleIsdoneAsync.fulfilled]: (state, action) => {\n      const newID = action.payload.id;\n      const index = state.findIndex(item => item.id === newID);\n      state[index].isdone = !state[index].isdone;\n    }\n  }\n});\nexport const {} = PostSlice.actions;\nexport default PostSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","nanoid","Axios","getAllTasksAsync","response","get","tasks","data","PostSlice","name","initialState","reducers","extraReducers","fulfilled","state","action","console","log","payload","AddNewTaskAsync","push","deleteTaskAsync","newID","id","filter","item","toggleIsdoneAsync","index","findIndex","isdone","actions","reducer"],"sources":["D:/WEB CODE LIB/BlogProject/client/src/features/post/PostSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk, nanoid } from \"@reduxjs/toolkit\";\r\nimport Axios from \"axios\";\r\n\r\nexport const getAllTasksAsync = createAsyncThunk(\r\n  \"tasks/getAllTasksAsync\",\r\n  async () => {\r\n    const response = await Axios.get(\"http://localhost:5000/api/v1/tasks\");\r\n    const tasks = response.data;\r\n    return { tasks };\r\n  }\r\n);\r\n\r\nconst PostSlice = createSlice({\r\n  name: \"post\",\r\n  initialState: [],\r\n  reducers: {},\r\n  extraReducers: {\r\n    [getAllTasksAsync.fulfilled]: (state, action) => {\r\n      console.log(\"fetching data successfully\");\r\n      return action.payload.tasks;\r\n    },\r\n    [AddNewTaskAsync.fulfilled]: (state, action) => {\r\n      state.push(action.payload);\r\n    },\r\n    [deleteTaskAsync.fulfilled]: (state, action) => {\r\n      const newID = action.payload.id;\r\n      return state.filter((item) => item.id !== newID);\r\n    },\r\n    [toggleIsdoneAsync.fulfilled]: (state, action) => {\r\n      const newID = action.payload.id;\r\n      const index = state.findIndex((item) => item.id === newID);\r\n      state[index].isdone = !state[index].isdone;\r\n    },\r\n  },\r\n});\r\nexport const { } = PostSlice.actions;\r\nexport default PostSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,EAAwCC,MAAxC,QAAsD,kBAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,gBAAgB,GAAGH,gBAAgB,CAC9C,wBAD8C,EAE9C,YAAY;EACV,MAAMI,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,oCAAV,CAAvB;EACA,MAAMC,KAAK,GAAGF,QAAQ,CAACG,IAAvB;EACA,OAAO;IAAED;EAAF,CAAP;AACD,CAN6C,CAAzC;AASP,MAAME,SAAS,GAAGT,WAAW,CAAC;EAC5BU,IAAI,EAAE,MADsB;EAE5BC,YAAY,EAAE,EAFc;EAG5BC,QAAQ,EAAE,EAHkB;EAI5BC,aAAa,EAAE;IACb,CAACT,gBAAgB,CAACU,SAAlB,GAA8B,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC/CC,OAAO,CAACC,GAAR,CAAY,4BAAZ;MACA,OAAOF,MAAM,CAACG,OAAP,CAAeZ,KAAtB;IACD,CAJY;IAKb,CAACa,eAAe,CAACN,SAAjB,GAA6B,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC9CD,KAAK,CAACM,IAAN,CAAWL,MAAM,CAACG,OAAlB;IACD,CAPY;IAQb,CAACG,eAAe,CAACR,SAAjB,GAA6B,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC9C,MAAMO,KAAK,GAAGP,MAAM,CAACG,OAAP,CAAeK,EAA7B;MACA,OAAOT,KAAK,CAACU,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACF,EAAL,KAAYD,KAAnC,CAAP;IACD,CAXY;IAYb,CAACI,iBAAiB,CAACb,SAAnB,GAA+B,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAChD,MAAMO,KAAK,GAAGP,MAAM,CAACG,OAAP,CAAeK,EAA7B;MACA,MAAMI,KAAK,GAAGb,KAAK,CAACc,SAAN,CAAiBH,IAAD,IAAUA,IAAI,CAACF,EAAL,KAAYD,KAAtC,CAAd;MACAR,KAAK,CAACa,KAAD,CAAL,CAAaE,MAAb,GAAsB,CAACf,KAAK,CAACa,KAAD,CAAL,CAAaE,MAApC;IACD;EAhBY;AAJa,CAAD,CAA7B;AAuBA,OAAO,MAAM,KAAMrB,SAAS,CAACsB,OAAtB;AACP,eAAetB,SAAS,CAACuB,OAAzB"},"metadata":{},"sourceType":"module"}