{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport Axios from 'axios';\nimport authHeader from '../common/authHeader';\nimport serverUrl from '../common/common';\nconst topicUrl = 'api/topic';\nexport const getAllTopicsByUserIDAsync = createAsyncThunk('topic/getAllTopicsByUserIDAsync', async userID => {\n  const response = await Axios.get(`${serverUrl}${topicUrl}?userID=${userID}`, {\n    headers: authHeader()\n  });\n  const tasks = response.data;\n  return {\n    tasks\n  };\n});\nexport const getAllTopicBySlugAsync = createAsyncThunk('topic/getAllTopicBySlugAsync', async slug => {\n  const response = await Axios.get(`${serverUrl}${topicUrl}/get-topic-by-slug?slug=${slug}`, {\n    headers: authHeader()\n  });\n  const tasks = response.data;\n  return {\n    tasks\n  };\n});\nexport const createNewTopic = createAsyncThunk('topic/createNewTopic', async _ref => {\n  let {\n    topic\n  } = _ref;\n  console.log(topic);\n  const response = await Axios.post(serverUrl + topicUrl, topic, {\n    headers: authHeader()\n  });\n  const tasks = response.data;\n  return {\n    tasks\n  };\n});\nconst topicSlice = createSlice({\n  name: 'topic',\n  initialState: [],\n  reducers: {},\n  extraReducers: {\n    [getAllTopicsByUserIDAsync.fulfilled]: (state, action) => {\n      console.log('fetching topics successfully');\n      return action.payload.tasks.result;\n    },\n    [createNewTopic.fulfilled]: (state, action) => {\n      console.log('create new topic successfully');\n      return action.payload.tasks.result;\n    }\n  }\n});\nexport const {} = topicSlice.actions;\nexport default topicSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","Axios","authHeader","serverUrl","topicUrl","getAllTopicsByUserIDAsync","userID","response","get","headers","tasks","data","getAllTopicBySlugAsync","slug","createNewTopic","topic","console","log","post","topicSlice","name","initialState","reducers","extraReducers","fulfilled","state","action","payload","result","actions","reducer"],"sources":["D:/Code/HTML/blog/BlogProject/client/src/features/topic/topicSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport Axios from 'axios';\r\nimport authHeader from '../common/authHeader';\r\nimport serverUrl from '../common/common';\r\n\r\nconst topicUrl = 'api/topic';\r\n\r\nexport const getAllTopicsByUserIDAsync = createAsyncThunk(\r\n    'topic/getAllTopicsByUserIDAsync',\r\n    async (userID) => {\r\n        const response = await Axios.get(\r\n            `${serverUrl}${topicUrl}?userID=${userID}`,\r\n            { headers: authHeader() }\r\n        );\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nexport const getAllTopicBySlugAsync = createAsyncThunk(\r\n    'topic/getAllTopicBySlugAsync',\r\n    async (slug) => {\r\n        const response = await Axios.get(\r\n            `${serverUrl}${topicUrl}/get-topic-by-slug?slug=${slug}`,\r\n            { headers: authHeader() }\r\n        );\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nexport const createNewTopic = createAsyncThunk(\r\n    'topic/createNewTopic',\r\n    async ({ topic }) => {\r\n        console.log(topic);\r\n        const response = await Axios.post(serverUrl + topicUrl, topic, {\r\n            headers: authHeader(),\r\n        });\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nconst topicSlice = createSlice({\r\n    name: 'topic',\r\n    initialState: [],\r\n    reducers: {},\r\n    extraReducers: {\r\n        [getAllTopicsByUserIDAsync.fulfilled]: (state, action) => {\r\n            console.log('fetching topics successfully');\r\n            return action.payload.tasks.result;\r\n        },\r\n        [createNewTopic.fulfilled]: (state, action) => {\r\n            console.log('create new topic successfully');\r\n            return action.payload.tasks.result;\r\n        },\r\n    },\r\n});\r\nexport const {} = topicSlice.actions;\r\nexport default topicSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,MAAMC,QAAQ,GAAG,WAAjB;AAEA,OAAO,MAAMC,yBAAyB,GAAGL,gBAAgB,CACrD,iCADqD,EAErD,MAAOM,MAAP,IAAkB;EACd,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAClB,GAAEL,SAAU,GAAEC,QAAS,WAAUE,MAAO,EADtB,EAEnB;IAAEG,OAAO,EAAEP,UAAU;EAArB,CAFmB,CAAvB;EAIA,MAAMQ,KAAK,GAAGH,QAAQ,CAACI,IAAvB;EACA,OAAO;IAAED;EAAF,CAAP;AACH,CAToD,CAAlD;AAYP,OAAO,MAAME,sBAAsB,GAAGZ,gBAAgB,CAClD,8BADkD,EAElD,MAAOa,IAAP,IAAgB;EACZ,MAAMN,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAClB,GAAEL,SAAU,GAAEC,QAAS,2BAA0BS,IAAK,EADpC,EAEnB;IAAEJ,OAAO,EAAEP,UAAU;EAArB,CAFmB,CAAvB;EAIA,MAAMQ,KAAK,GAAGH,QAAQ,CAACI,IAAvB;EACA,OAAO;IAAED;EAAF,CAAP;AACH,CATiD,CAA/C;AAYP,OAAO,MAAMI,cAAc,GAAGd,gBAAgB,CAC1C,sBAD0C,EAE1C,cAAqB;EAAA,IAAd;IAAEe;EAAF,CAAc;EACjBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACA,MAAMR,QAAQ,GAAG,MAAMN,KAAK,CAACiB,IAAN,CAAWf,SAAS,GAAGC,QAAvB,EAAiCW,KAAjC,EAAwC;IAC3DN,OAAO,EAAEP,UAAU;EADwC,CAAxC,CAAvB;EAGA,MAAMQ,KAAK,GAAGH,QAAQ,CAACI,IAAvB;EACA,OAAO;IAAED;EAAF,CAAP;AACH,CATyC,CAAvC;AAYP,MAAMS,UAAU,GAAGpB,WAAW,CAAC;EAC3BqB,IAAI,EAAE,OADqB;EAE3BC,YAAY,EAAE,EAFa;EAG3BC,QAAQ,EAAE,EAHiB;EAI3BC,aAAa,EAAE;IACX,CAAClB,yBAAyB,CAACmB,SAA3B,GAAuC,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACtDV,OAAO,CAACC,GAAR,CAAY,8BAAZ;MACA,OAAOS,MAAM,CAACC,OAAP,CAAejB,KAAf,CAAqBkB,MAA5B;IACH,CAJU;IAKX,CAACd,cAAc,CAACU,SAAhB,GAA4B,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC3CV,OAAO,CAACC,GAAR,CAAY,+BAAZ;MACA,OAAOS,MAAM,CAACC,OAAP,CAAejB,KAAf,CAAqBkB,MAA5B;IACH;EARU;AAJY,CAAD,CAA9B;AAeA,OAAO,MAAM,KAAKT,UAAU,CAACU,OAAtB;AACP,eAAeV,UAAU,CAACW,OAA1B"},"metadata":{},"sourceType":"module"}