{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\HTML\\\\blog\\\\BlogProject\\\\client\\\\src\\\\components\\\\Reply.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createNewComment, getAllCommentsByBlogAsync } from '../features/comment/commentSlice';\nimport alt from '../assets/image/user/alt.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reply = _ref => {\n  _s();\n\n  let {\n    blogID,\n    userID,\n    isHeadComment,\n    parentID,\n    setShowReplies,\n    setNewReply\n  } = _ref;\n  const dispatch = useDispatch();\n  const textareaRef = useRef();\n  const [context, setContext] = useState('');\n  const user = useSelector(state => state.user);\n\n  const makeNewComment = async () => {\n    if (context) {\n      await dispatch(createNewComment({\n        context: context,\n        parentID: parentID,\n        blogID: blogID,\n        userID: userID\n      }));\n      await dispatch(getAllCommentsByBlogAsync(blogID));\n      !isHeadComment && setShowReplies(true);\n      !isHeadComment && setNewReply(false);\n      textareaRef.current.value = '';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reply\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `reply__container ${isHeadComment ? 'head' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `reply__pfp ${isHeadComment ? 'head' : ''}`,\n        children: (user === null || user === void 0 ? void 0 : user.profilepic) !== '' && (user === null || user === void 0 ? void 0 : user.profilepic) !== undefined ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: 'data:image/jpg;base64,' + (user === null || user === void 0 ? void 0 : user.profilepic),\n          alt: alt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: alt,\n          alt: alt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reply__comment-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          name: \"content\",\n          className: \"reply__input\",\n          placeholder: \"Leave a comment\",\n          ref: textareaRef,\n          onChange: e => setContext(e.target.value),\n          onBlur: e => {\n            if (e.target.value === '') {\n              textareaRef.current.style.height = '45px';\n            }\n          },\n          onFocus: e => {\n            if (e.target.value === '') textareaRef.current.style.height = '60px';\n          },\n          onInput: e => {\n            // textareaRef.current.style.height = '60px';\n            let height = e.target.scrollHeight;\n\n            if (height > 45 && e.target.value !== '') {\n              // textareaRef.current.style.height = \"auto\";\n              textareaRef.current.style.height = `${height}px`;\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reply__post-button\",\n          onClick: makeNewComment,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bx bxs-send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Reply, \"zjDsQy+QfBG/rHvtsPYJzRmx8F0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Reply;\nexport default Reply;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reply\");","map":{"version":3,"names":["React","useRef","useState","useDispatch","useSelector","createNewComment","getAllCommentsByBlogAsync","alt","Reply","blogID","userID","isHeadComment","parentID","setShowReplies","setNewReply","dispatch","textareaRef","context","setContext","user","state","makeNewComment","current","value","profilepic","undefined","e","target","style","height","scrollHeight"],"sources":["D:/Code/HTML/blog/BlogProject/client/src/components/Reply.jsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    createNewComment,\r\n    getAllCommentsByBlogAsync,\r\n} from '../features/comment/commentSlice';\r\nimport alt from '../assets/image/user/alt.png';\r\n\r\nconst Reply = ({\r\n    blogID,\r\n    userID,\r\n    isHeadComment,\r\n    parentID,\r\n    setShowReplies,\r\n    setNewReply,\r\n}) => {\r\n    const dispatch = useDispatch();\r\n    const textareaRef = useRef();\r\n    const [context, setContext] = useState('');\r\n    const user = useSelector((state) => state.user);\r\n\r\n    const makeNewComment = async () => {\r\n        if (context) {\r\n            await dispatch(\r\n                createNewComment({\r\n                    context: context,\r\n                    parentID: parentID,\r\n                    blogID: blogID,\r\n                    userID: userID,\r\n                })\r\n            );\r\n            await dispatch(getAllCommentsByBlogAsync(blogID));\r\n            !isHeadComment && setShowReplies(true);\r\n            !isHeadComment && setNewReply(false);\r\n            textareaRef.current.value = '';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"reply\">\r\n            {/* {!isHeadComment && <div className=\"reply__connect-line\"></div>} */}\r\n            <div className={`reply__container ${isHeadComment ? 'head' : ''}`}>\r\n                <div className={`reply__pfp ${isHeadComment ? 'head' : ''}`}>\r\n                    {user?.profilepic !== '' &&\r\n                    user?.profilepic !== undefined ? (\r\n                        <img\r\n                            src={'data:image/jpg;base64,' + user?.profilepic}\r\n                            alt={alt}\r\n                        />\r\n                    ) : (\r\n                        <img src={alt} alt={alt} />\r\n                    )}\r\n                </div>\r\n                <div className=\"reply__comment-area\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        name=\"content\"\r\n                        className=\"reply__input\"\r\n                        placeholder=\"Leave a comment\"\r\n                        ref={textareaRef}\r\n                        onChange={(e) => setContext(e.target.value)}\r\n                        onBlur={(e) => {\r\n                            if (e.target.value === ''){\r\n                                textareaRef.current.style.height = '45px';\r\n                            }\r\n                        }}\r\n                        onFocus={(e) => {\r\n                            if (e.target.value === '')\r\n                                textareaRef.current.style.height = '60px';\r\n                        }}\r\n                        onInput={(e) => {\r\n                            // textareaRef.current.style.height = '60px';\r\n                            let height = e.target.scrollHeight;\r\n                            if (height > 45 && e.target.value !== '') {\r\n                                // textareaRef.current.style.height = \"auto\";\r\n                                textareaRef.current.style.height = `${height}px`;\r\n                            }\r\n                        }}\r\n                    ></textarea>\r\n                    <div\r\n                        className=\"reply__post-button\"\r\n                        onClick={makeNewComment}\r\n                    >\r\n                        <i className=\"bx bxs-send\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Reply;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}