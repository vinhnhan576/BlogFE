{"ast":null,"code":"import { eachProp, is, toArray, getFluidValue, isAnimatedString, Globals, useIsomorphicLayoutEffect, each, easings, raf, flush, FluidValue, deprecateInterpolate, callFluidObservers, frameLoop, hasFluidValue, flushCalls, isEqual, getFluidObservers, addFluidObserver, removeFluidObserver, noop, useMemoOne, deprecateDirectCall, useForceUpdate, usePrev, useOnce, useConstant, onScroll, onResize, createInterpolator, createStringInterpolator } from '@react-spring/shared';\nexport { Globals, createInterpolator, easings, useIsomorphicLayoutEffect, useReducedMotion } from '@react-spring/shared';\nimport * as React from 'react';\nimport { useContext, useMemo, useRef, useState } from 'react';\nimport { getAnimated, AnimatedValue, getPayload, AnimatedString, getAnimatedType, setAnimated } from '@react-spring/animated';\nexport * from '@react-spring/types/animated';\nexport * from '@react-spring/types/interpolation';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction callProp(value) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return is.fun(value) ? value(...args) : value;\n}\n\nconst matchProp = (value, key) => value === true || !!(key && value && (is.fun(value) ? value(key) : toArray(value).includes(key)));\n\nconst resolveProp = (prop, key) => is.obj(prop) ? key && prop[key] : prop;\n\nconst getDefaultProp = (props, key) => props.default === true ? props[key] : props.default ? props.default[key] : undefined;\n\nconst noopTransform = value => value;\n\nconst getDefaultProps = function (props) {\n  let transform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noopTransform;\n  let keys = DEFAULT_PROPS;\n\n  if (props.default && props.default !== true) {\n    props = props.default;\n    keys = Object.keys(props);\n  }\n\n  const defaults = {};\n\n  for (const key of keys) {\n    const value = transform(props[key], key);\n\n    if (!is.und(value)) {\n      defaults[key] = value;\n    }\n  }\n\n  return defaults;\n};\n\nconst DEFAULT_PROPS = ['config', 'onProps', 'onStart', 'onChange', 'onPause', 'onResume', 'onRest'];\nconst RESERVED_PROPS = {\n  config: 1,\n  from: 1,\n  to: 1,\n  ref: 1,\n  loop: 1,\n  reset: 1,\n  pause: 1,\n  cancel: 1,\n  reverse: 1,\n  immediate: 1,\n  default: 1,\n  delay: 1,\n  onProps: 1,\n  onStart: 1,\n  onChange: 1,\n  onPause: 1,\n  onResume: 1,\n  onRest: 1,\n  onResolve: 1,\n  items: 1,\n  trail: 1,\n  sort: 1,\n  expires: 1,\n  initial: 1,\n  enter: 1,\n  update: 1,\n  leave: 1,\n  children: 1,\n  onDestroyed: 1,\n  keys: 1,\n  callId: 1,\n  parentId: 1\n};\n\nfunction getForwardProps(props) {\n  const forward = {};\n  let count = 0;\n  eachProp(props, (value, prop) => {\n    if (!RESERVED_PROPS[prop]) {\n      forward[prop] = value;\n      count++;\n    }\n  });\n\n  if (count) {\n    return forward;\n  }\n}\n\nfunction inferTo(props) {\n  const to = getForwardProps(props);\n\n  if (to) {\n    const out = {\n      to\n    };\n    eachProp(props, (val, key) => key in to || (out[key] = val));\n    return out;\n  }\n\n  return _extends({}, props);\n}\n\nfunction computeGoal(value) {\n  value = getFluidValue(value);\n  return is.arr(value) ? value.map(computeGoal) : isAnimatedString(value) ? Globals.createStringInterpolator({\n    range: [0, 1],\n    output: [value, value]\n  })(1) : value;\n}\n\nfunction hasProps(props) {\n  for (const _ in props) return true;\n\n  return false;\n}\n\nfunction isAsyncTo(to) {\n  return is.fun(to) || is.arr(to) && is.obj(to[0]);\n}\n\nfunction detachRefs(ctrl, ref) {\n  var _ctrl$ref;\n\n  (_ctrl$ref = ctrl.ref) == null ? void 0 : _ctrl$ref.delete(ctrl);\n  ref == null ? void 0 : ref.delete(ctrl);\n}\n\nfunction replaceRef(ctrl, ref) {\n  if (ref && ctrl.ref !== ref) {\n    var _ctrl$ref2;\n\n    (_ctrl$ref2 = ctrl.ref) == null ? void 0 : _ctrl$ref2.delete(ctrl);\n    ref.add(ctrl);\n    ctrl.ref = ref;\n  }\n}\n\nfunction useChain(refs, timeSteps) {\n  let timeFrame = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1000;\n  useIsomorphicLayoutEffect(() => {\n    if (timeSteps) {\n      let prevDelay = 0;\n      each(refs, (ref, i) => {\n        const controllers = ref.current;\n\n        if (controllers.length) {\n          let delay = timeFrame * timeSteps[i];\n          if (isNaN(delay)) delay = prevDelay;else prevDelay = delay;\n          each(controllers, ctrl => {\n            each(ctrl.queue, props => {\n              const memoizedDelayProp = props.delay;\n\n              props.delay = key => delay + callProp(memoizedDelayProp || 0, key);\n            });\n          });\n          ref.start();\n        }\n      });\n    } else {\n      let p = Promise.resolve();\n      each(refs, ref => {\n        const controllers = ref.current;\n\n        if (controllers.length) {\n          const queues = controllers.map(ctrl => {\n            const q = ctrl.queue;\n            ctrl.queue = [];\n            return q;\n          });\n          p = p.then(() => {\n            each(controllers, (ctrl, i) => each(queues[i] || [], update => ctrl.queue.push(update)));\n            return Promise.all(ref.start());\n          });\n        }\n      });\n    }\n  });\n}\n\nconst config = {\n  default: {\n    tension: 170,\n    friction: 26\n  },\n  gentle: {\n    tension: 120,\n    friction: 14\n  },\n  wobbly: {\n    tension: 180,\n    friction: 12\n  },\n  stiff: {\n    tension: 210,\n    friction: 20\n  },\n  slow: {\n    tension: 280,\n    friction: 60\n  },\n  molasses: {\n    tension: 280,\n    friction: 120\n  }\n};\n\nconst defaults = _extends({}, config.default, {\n  mass: 1,\n  damping: 1,\n  easing: easings.linear,\n  clamp: false\n});\n\nclass AnimationConfig {\n  constructor() {\n    this.tension = void 0;\n    this.friction = void 0;\n    this.frequency = void 0;\n    this.damping = void 0;\n    this.mass = void 0;\n    this.velocity = 0;\n    this.restVelocity = void 0;\n    this.precision = void 0;\n    this.progress = void 0;\n    this.duration = void 0;\n    this.easing = void 0;\n    this.clamp = void 0;\n    this.bounce = void 0;\n    this.decay = void 0;\n    this.round = void 0;\n    Object.assign(this, defaults);\n  }\n\n}\n\nfunction mergeConfig(config, newConfig, defaultConfig) {\n  if (defaultConfig) {\n    defaultConfig = _extends({}, defaultConfig);\n    sanitizeConfig(defaultConfig, newConfig);\n    newConfig = _extends({}, defaultConfig, newConfig);\n  }\n\n  sanitizeConfig(config, newConfig);\n  Object.assign(config, newConfig);\n\n  for (const key in defaults) {\n    if (config[key] == null) {\n      config[key] = defaults[key];\n    }\n  }\n\n  let {\n    mass,\n    frequency,\n    damping\n  } = config;\n\n  if (!is.und(frequency)) {\n    if (frequency < 0.01) frequency = 0.01;\n    if (damping < 0) damping = 0;\n    config.tension = Math.pow(2 * Math.PI / frequency, 2) * mass;\n    config.friction = 4 * Math.PI * damping * mass / frequency;\n  }\n\n  return config;\n}\n\nfunction sanitizeConfig(config, props) {\n  if (!is.und(props.decay)) {\n    config.duration = undefined;\n  } else {\n    const isTensionConfig = !is.und(props.tension) || !is.und(props.friction);\n\n    if (isTensionConfig || !is.und(props.frequency) || !is.und(props.damping) || !is.und(props.mass)) {\n      config.duration = undefined;\n      config.decay = undefined;\n    }\n\n    if (isTensionConfig) {\n      config.frequency = undefined;\n    }\n  }\n}\n\nconst emptyArray = [];\n\nclass Animation {\n  constructor() {\n    this.changed = false;\n    this.values = emptyArray;\n    this.toValues = null;\n    this.fromValues = emptyArray;\n    this.to = void 0;\n    this.from = void 0;\n    this.config = new AnimationConfig();\n    this.immediate = false;\n  }\n\n}\n\nfunction scheduleProps(callId, _ref2) {\n  let {\n    key,\n    props,\n    defaultProps,\n    state,\n    actions\n  } = _ref2;\n  return new Promise((resolve, reject) => {\n    var _props$cancel;\n\n    let delay;\n    let timeout;\n    let cancel = matchProp((_props$cancel = props.cancel) != null ? _props$cancel : defaultProps == null ? void 0 : defaultProps.cancel, key);\n\n    if (cancel) {\n      onStart();\n    } else {\n      if (!is.und(props.pause)) {\n        state.paused = matchProp(props.pause, key);\n      }\n\n      let pause = defaultProps == null ? void 0 : defaultProps.pause;\n\n      if (pause !== true) {\n        pause = state.paused || matchProp(pause, key);\n      }\n\n      delay = callProp(props.delay || 0, key);\n\n      if (pause) {\n        state.resumeQueue.add(onResume);\n        actions.pause();\n      } else {\n        actions.resume();\n        onResume();\n      }\n    }\n\n    function onPause() {\n      state.resumeQueue.add(onResume);\n      state.timeouts.delete(timeout);\n      timeout.cancel();\n      delay = timeout.time - raf.now();\n    }\n\n    function onResume() {\n      if (delay > 0 && !Globals.skipAnimation) {\n        state.delayed = true;\n        timeout = raf.setTimeout(onStart, delay);\n        state.pauseQueue.add(onPause);\n        state.timeouts.add(timeout);\n      } else {\n        onStart();\n      }\n    }\n\n    function onStart() {\n      if (state.delayed) {\n        state.delayed = false;\n      }\n\n      state.pauseQueue.delete(onPause);\n      state.timeouts.delete(timeout);\n\n      if (callId <= (state.cancelId || 0)) {\n        cancel = true;\n      }\n\n      try {\n        actions.start(_extends({}, props, {\n          callId,\n          cancel\n        }), resolve);\n      } catch (err) {\n        reject(err);\n      }\n    }\n  });\n}\n\nconst getCombinedResult = (target, results) => results.length == 1 ? results[0] : results.some(result => result.cancelled) ? getCancelledResult(target.get()) : results.every(result => result.noop) ? getNoopResult(target.get()) : getFinishedResult(target.get(), results.every(result => result.finished));\n\nconst getNoopResult = value => ({\n  value,\n  noop: true,\n  finished: true,\n  cancelled: false\n});\n\nconst getFinishedResult = function (value, finished) {\n  let cancelled = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return {\n    value,\n    finished,\n    cancelled\n  };\n};\n\nconst getCancelledResult = value => ({\n  value,\n  cancelled: true,\n  finished: false\n});\n\nfunction runAsync(to, props, state, target) {\n  const {\n    callId,\n    parentId,\n    onRest\n  } = props;\n  const {\n    asyncTo: prevTo,\n    promise: prevPromise\n  } = state;\n\n  if (!parentId && to === prevTo && !props.reset) {\n    return prevPromise;\n  }\n\n  return state.promise = (async () => {\n    state.asyncId = callId;\n    state.asyncTo = to;\n    const defaultProps = getDefaultProps(props, (value, key) => key === 'onRest' ? undefined : value);\n    let preventBail;\n    let bail;\n    const bailPromise = new Promise((resolve, reject) => (preventBail = resolve, bail = reject));\n\n    const bailIfEnded = bailSignal => {\n      const bailResult = callId <= (state.cancelId || 0) && getCancelledResult(target) || callId !== state.asyncId && getFinishedResult(target, false);\n\n      if (bailResult) {\n        bailSignal.result = bailResult;\n        bail(bailSignal);\n        throw bailSignal;\n      }\n    };\n\n    const animate = (arg1, arg2) => {\n      const bailSignal = new BailSignal();\n      const skipAnimationSignal = new SkipAnimationSignal();\n      return (async () => {\n        if (Globals.skipAnimation) {\n          stopAsync(state);\n          skipAnimationSignal.result = getFinishedResult(target, false);\n          bail(skipAnimationSignal);\n          throw skipAnimationSignal;\n        }\n\n        bailIfEnded(bailSignal);\n        const props = is.obj(arg1) ? _extends({}, arg1) : _extends({}, arg2, {\n          to: arg1\n        });\n        props.parentId = callId;\n        eachProp(defaultProps, (value, key) => {\n          if (is.und(props[key])) {\n            props[key] = value;\n          }\n        });\n        const result = await target.start(props);\n        bailIfEnded(bailSignal);\n\n        if (state.paused) {\n          await new Promise(resume => {\n            state.resumeQueue.add(resume);\n          });\n        }\n\n        return result;\n      })();\n    };\n\n    let result;\n\n    if (Globals.skipAnimation) {\n      stopAsync(state);\n      return getFinishedResult(target, false);\n    }\n\n    try {\n      let animating;\n\n      if (is.arr(to)) {\n        animating = (async queue => {\n          for (const props of queue) {\n            await animate(props);\n          }\n        })(to);\n      } else {\n        animating = Promise.resolve(to(animate, target.stop.bind(target)));\n      }\n\n      await Promise.all([animating.then(preventBail), bailPromise]);\n      result = getFinishedResult(target.get(), true, false);\n    } catch (err) {\n      if (err instanceof BailSignal) {\n        result = err.result;\n      } else if (err instanceof SkipAnimationSignal) {\n        result = err.result;\n      } else {\n        throw err;\n      }\n    } finally {\n      if (callId == state.asyncId) {\n        state.asyncId = parentId;\n        state.asyncTo = parentId ? prevTo : undefined;\n        state.promise = parentId ? prevPromise : undefined;\n      }\n    }\n\n    if (is.fun(onRest)) {\n      raf.batchedUpdates(() => {\n        onRest(result, target, target.item);\n      });\n    }\n\n    return result;\n  })();\n}\n\nfunction stopAsync(state, cancelId) {\n  flush(state.timeouts, t => t.cancel());\n  state.pauseQueue.clear();\n  state.resumeQueue.clear();\n  state.asyncId = state.asyncTo = state.promise = undefined;\n  if (cancelId) state.cancelId = cancelId;\n}\n\nclass BailSignal extends Error {\n  constructor() {\n    super('An async animation has been interrupted. You see this error because you ' + 'forgot to use `await` or `.catch(...)` on its returned promise.');\n    this.result = void 0;\n  }\n\n}\n\nclass SkipAnimationSignal extends Error {\n  constructor() {\n    super('SkipAnimationSignal');\n    this.result = void 0;\n  }\n\n}\n\nconst isFrameValue = value => value instanceof FrameValue;\n\nlet nextId$1 = 1;\n\nclass FrameValue extends FluidValue {\n  constructor() {\n    super(...arguments);\n    this.id = nextId$1++;\n    this.key = void 0;\n    this._priority = 0;\n  }\n\n  get priority() {\n    return this._priority;\n  }\n\n  set priority(priority) {\n    if (this._priority != priority) {\n      this._priority = priority;\n\n      this._onPriorityChange(priority);\n    }\n  }\n\n  get() {\n    const node = getAnimated(this);\n    return node && node.getValue();\n  }\n\n  to() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return Globals.to(this, args);\n  }\n\n  interpolate() {\n    deprecateInterpolate();\n\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return Globals.to(this, args);\n  }\n\n  toJSON() {\n    return this.get();\n  }\n\n  observerAdded(count) {\n    if (count == 1) this._attach();\n  }\n\n  observerRemoved(count) {\n    if (count == 0) this._detach();\n  }\n\n  _attach() {}\n\n  _detach() {}\n\n  _onChange(value) {\n    let idle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    callFluidObservers(this, {\n      type: 'change',\n      parent: this,\n      value,\n      idle\n    });\n  }\n\n  _onPriorityChange(priority) {\n    if (!this.idle) {\n      frameLoop.sort(this);\n    }\n\n    callFluidObservers(this, {\n      type: 'priority',\n      parent: this,\n      priority\n    });\n  }\n\n}\n\nconst $P = Symbol.for('SpringPhase');\nconst HAS_ANIMATED = 1;\nconst IS_ANIMATING = 2;\nconst IS_PAUSED = 4;\n\nconst hasAnimated = target => (target[$P] & HAS_ANIMATED) > 0;\n\nconst isAnimating = target => (target[$P] & IS_ANIMATING) > 0;\n\nconst isPaused = target => (target[$P] & IS_PAUSED) > 0;\n\nconst setActiveBit = (target, active) => active ? target[$P] |= IS_ANIMATING | HAS_ANIMATED : target[$P] &= ~IS_ANIMATING;\n\nconst setPausedBit = (target, paused) => paused ? target[$P] |= IS_PAUSED : target[$P] &= ~IS_PAUSED;\n\nclass SpringValue extends FrameValue {\n  constructor(arg1, arg2) {\n    super();\n    this.key = void 0;\n    this.animation = new Animation();\n    this.queue = void 0;\n    this.defaultProps = {};\n    this._state = {\n      paused: false,\n      delayed: false,\n      pauseQueue: new Set(),\n      resumeQueue: new Set(),\n      timeouts: new Set()\n    };\n    this._pendingCalls = new Set();\n    this._lastCallId = 0;\n    this._lastToId = 0;\n    this._memoizedDuration = 0;\n\n    if (!is.und(arg1) || !is.und(arg2)) {\n      const props = is.obj(arg1) ? _extends({}, arg1) : _extends({}, arg2, {\n        from: arg1\n      });\n\n      if (is.und(props.default)) {\n        props.default = true;\n      }\n\n      this.start(props);\n    }\n  }\n\n  get idle() {\n    return !(isAnimating(this) || this._state.asyncTo) || isPaused(this);\n  }\n\n  get goal() {\n    return getFluidValue(this.animation.to);\n  }\n\n  get velocity() {\n    const node = getAnimated(this);\n    return node instanceof AnimatedValue ? node.lastVelocity || 0 : node.getPayload().map(node => node.lastVelocity || 0);\n  }\n\n  get hasAnimated() {\n    return hasAnimated(this);\n  }\n\n  get isAnimating() {\n    return isAnimating(this);\n  }\n\n  get isPaused() {\n    return isPaused(this);\n  }\n\n  get isDelayed() {\n    return this._state.delayed;\n  }\n\n  advance(dt) {\n    let idle = true;\n    let changed = false;\n    const anim = this.animation;\n    let {\n      config,\n      toValues\n    } = anim;\n    const payload = getPayload(anim.to);\n\n    if (!payload && hasFluidValue(anim.to)) {\n      toValues = toArray(getFluidValue(anim.to));\n    }\n\n    anim.values.forEach((node, i) => {\n      if (node.done) return;\n      const to = node.constructor == AnimatedString ? 1 : payload ? payload[i].lastPosition : toValues[i];\n      let finished = anim.immediate;\n      let position = to;\n\n      if (!finished) {\n        position = node.lastPosition;\n\n        if (config.tension <= 0) {\n          node.done = true;\n          return;\n        }\n\n        let elapsed = node.elapsedTime += dt;\n        const from = anim.fromValues[i];\n        const v0 = node.v0 != null ? node.v0 : node.v0 = is.arr(config.velocity) ? config.velocity[i] : config.velocity;\n        let velocity;\n        const precision = config.precision || (from == to ? 0.005 : Math.min(1, Math.abs(to - from) * 0.001));\n\n        if (!is.und(config.duration)) {\n          let p = 1;\n\n          if (config.duration > 0) {\n            if (this._memoizedDuration !== config.duration) {\n              this._memoizedDuration = config.duration;\n\n              if (node.durationProgress > 0) {\n                node.elapsedTime = config.duration * node.durationProgress;\n                elapsed = node.elapsedTime += dt;\n              }\n            }\n\n            p = (config.progress || 0) + elapsed / this._memoizedDuration;\n            p = p > 1 ? 1 : p < 0 ? 0 : p;\n            node.durationProgress = p;\n          }\n\n          position = from + config.easing(p) * (to - from);\n          velocity = (position - node.lastPosition) / dt;\n          finished = p == 1;\n        } else if (config.decay) {\n          const decay = config.decay === true ? 0.998 : config.decay;\n          const e = Math.exp(-(1 - decay) * elapsed);\n          position = from + v0 / (1 - decay) * (1 - e);\n          finished = Math.abs(node.lastPosition - position) <= precision;\n          velocity = v0 * e;\n        } else {\n          velocity = node.lastVelocity == null ? v0 : node.lastVelocity;\n          const restVelocity = config.restVelocity || precision / 10;\n          const bounceFactor = config.clamp ? 0 : config.bounce;\n          const canBounce = !is.und(bounceFactor);\n          const isGrowing = from == to ? node.v0 > 0 : from < to;\n          let isMoving;\n          let isBouncing = false;\n          const step = 1;\n          const numSteps = Math.ceil(dt / step);\n\n          for (let n = 0; n < numSteps; ++n) {\n            isMoving = Math.abs(velocity) > restVelocity;\n\n            if (!isMoving) {\n              finished = Math.abs(to - position) <= precision;\n\n              if (finished) {\n                break;\n              }\n            }\n\n            if (canBounce) {\n              isBouncing = position == to || position > to == isGrowing;\n\n              if (isBouncing) {\n                velocity = -velocity * bounceFactor;\n                position = to;\n              }\n            }\n\n            const springForce = -config.tension * 0.000001 * (position - to);\n            const dampingForce = -config.friction * 0.001 * velocity;\n            const acceleration = (springForce + dampingForce) / config.mass;\n            velocity = velocity + acceleration * step;\n            position = position + velocity * step;\n          }\n        }\n\n        node.lastVelocity = velocity;\n\n        if (Number.isNaN(position)) {\n          console.warn(`Got NaN while animating:`, this);\n          finished = true;\n        }\n      }\n\n      if (payload && !payload[i].done) {\n        finished = false;\n      }\n\n      if (finished) {\n        node.done = true;\n      } else {\n        idle = false;\n      }\n\n      if (node.setValue(position, config.round)) {\n        changed = true;\n      }\n    });\n    const node = getAnimated(this);\n    const currVal = node.getValue();\n\n    if (idle) {\n      const finalVal = getFluidValue(anim.to);\n\n      if ((currVal !== finalVal || changed) && !config.decay) {\n        node.setValue(finalVal);\n\n        this._onChange(finalVal);\n      } else if (changed && config.decay) {\n        this._onChange(currVal);\n      }\n\n      this._stop();\n    } else if (changed) {\n      this._onChange(currVal);\n    }\n  }\n\n  set(value) {\n    raf.batchedUpdates(() => {\n      this._stop();\n\n      this._focus(value);\n\n      this._set(value);\n    });\n    return this;\n  }\n\n  pause() {\n    this._update({\n      pause: true\n    });\n  }\n\n  resume() {\n    this._update({\n      pause: false\n    });\n  }\n\n  finish() {\n    if (isAnimating(this)) {\n      const {\n        to,\n        config\n      } = this.animation;\n      raf.batchedUpdates(() => {\n        this._onStart();\n\n        if (!config.decay) {\n          this._set(to, false);\n        }\n\n        this._stop();\n      });\n    }\n\n    return this;\n  }\n\n  update(props) {\n    const queue = this.queue || (this.queue = []);\n    queue.push(props);\n    return this;\n  }\n\n  start(to, arg2) {\n    let queue;\n\n    if (!is.und(to)) {\n      queue = [is.obj(to) ? to : _extends({}, arg2, {\n        to\n      })];\n    } else {\n      queue = this.queue || [];\n      this.queue = [];\n    }\n\n    return Promise.all(queue.map(props => {\n      const up = this._update(props);\n\n      return up;\n    })).then(results => getCombinedResult(this, results));\n  }\n\n  stop(cancel) {\n    const {\n      to\n    } = this.animation;\n\n    this._focus(this.get());\n\n    stopAsync(this._state, cancel && this._lastCallId);\n    raf.batchedUpdates(() => this._stop(to, cancel));\n    return this;\n  }\n\n  reset() {\n    this._update({\n      reset: true\n    });\n  }\n\n  eventObserved(event) {\n    if (event.type == 'change') {\n      this._start();\n    } else if (event.type == 'priority') {\n      this.priority = event.priority + 1;\n    }\n  }\n\n  _prepareNode(props) {\n    const key = this.key || '';\n    let {\n      to,\n      from\n    } = props;\n    to = is.obj(to) ? to[key] : to;\n\n    if (to == null || isAsyncTo(to)) {\n      to = undefined;\n    }\n\n    from = is.obj(from) ? from[key] : from;\n\n    if (from == null) {\n      from = undefined;\n    }\n\n    const range = {\n      to,\n      from\n    };\n\n    if (!hasAnimated(this)) {\n      if (props.reverse) [to, from] = [from, to];\n      from = getFluidValue(from);\n\n      if (!is.und(from)) {\n        this._set(from);\n      } else if (!getAnimated(this)) {\n        this._set(to);\n      }\n    }\n\n    return range;\n  }\n\n  _update(_ref, isLoop) {\n    let props = _extends({}, _ref);\n\n    const {\n      key,\n      defaultProps\n    } = this;\n    if (props.default) Object.assign(defaultProps, getDefaultProps(props, (value, prop) => /^on/.test(prop) ? resolveProp(value, key) : value));\n    mergeActiveFn(this, props, 'onProps');\n    sendEvent(this, 'onProps', props, this);\n\n    const range = this._prepareNode(props);\n\n    if (Object.isFrozen(this)) {\n      throw Error('Cannot animate a `SpringValue` object that is frozen. ' + 'Did you forget to pass your component to `animated(...)` before animating its props?');\n    }\n\n    const state = this._state;\n    return scheduleProps(++this._lastCallId, {\n      key,\n      props,\n      defaultProps,\n      state,\n      actions: {\n        pause: () => {\n          if (!isPaused(this)) {\n            setPausedBit(this, true);\n            flushCalls(state.pauseQueue);\n            sendEvent(this, 'onPause', getFinishedResult(this, checkFinished(this, this.animation.to)), this);\n          }\n        },\n        resume: () => {\n          if (isPaused(this)) {\n            setPausedBit(this, false);\n\n            if (isAnimating(this)) {\n              this._resume();\n            }\n\n            flushCalls(state.resumeQueue);\n            sendEvent(this, 'onResume', getFinishedResult(this, checkFinished(this, this.animation.to)), this);\n          }\n        },\n        start: this._merge.bind(this, range)\n      }\n    }).then(result => {\n      if (props.loop && result.finished && !(isLoop && result.noop)) {\n        const nextProps = createLoopUpdate(props);\n\n        if (nextProps) {\n          return this._update(nextProps, true);\n        }\n      }\n\n      return result;\n    });\n  }\n\n  _merge(range, props, resolve) {\n    if (props.cancel) {\n      this.stop(true);\n      return resolve(getCancelledResult(this));\n    }\n\n    const hasToProp = !is.und(range.to);\n    const hasFromProp = !is.und(range.from);\n\n    if (hasToProp || hasFromProp) {\n      if (props.callId > this._lastToId) {\n        this._lastToId = props.callId;\n      } else {\n        return resolve(getCancelledResult(this));\n      }\n    }\n\n    const {\n      key,\n      defaultProps,\n      animation: anim\n    } = this;\n    const {\n      to: prevTo,\n      from: prevFrom\n    } = anim;\n    let {\n      to = prevTo,\n      from = prevFrom\n    } = range;\n\n    if (hasFromProp && !hasToProp && (!props.default || is.und(to))) {\n      to = from;\n    }\n\n    if (props.reverse) [to, from] = [from, to];\n    const hasFromChanged = !isEqual(from, prevFrom);\n\n    if (hasFromChanged) {\n      anim.from = from;\n    }\n\n    from = getFluidValue(from);\n    const hasToChanged = !isEqual(to, prevTo);\n\n    if (hasToChanged) {\n      this._focus(to);\n    }\n\n    const hasAsyncTo = isAsyncTo(props.to);\n    const {\n      config\n    } = anim;\n    const {\n      decay,\n      velocity\n    } = config;\n\n    if (hasToProp || hasFromProp) {\n      config.velocity = 0;\n    }\n\n    if (props.config && !hasAsyncTo) {\n      mergeConfig(config, callProp(props.config, key), props.config !== defaultProps.config ? callProp(defaultProps.config, key) : void 0);\n    }\n\n    let node = getAnimated(this);\n\n    if (!node || is.und(to)) {\n      return resolve(getFinishedResult(this, true));\n    }\n\n    const reset = is.und(props.reset) ? hasFromProp && !props.default : !is.und(from) && matchProp(props.reset, key);\n    const value = reset ? from : this.get();\n    const goal = computeGoal(to);\n    const isAnimatable = is.num(goal) || is.arr(goal) || isAnimatedString(goal);\n    const immediate = !hasAsyncTo && (!isAnimatable || matchProp(defaultProps.immediate || props.immediate, key));\n\n    if (hasToChanged) {\n      const nodeType = getAnimatedType(to);\n\n      if (nodeType !== node.constructor) {\n        if (immediate) {\n          node = this._set(goal);\n        } else throw Error(`Cannot animate between ${node.constructor.name} and ${nodeType.name}, as the \"to\" prop suggests`);\n      }\n    }\n\n    const goalType = node.constructor;\n    let started = hasFluidValue(to);\n    let finished = false;\n\n    if (!started) {\n      const hasValueChanged = reset || !hasAnimated(this) && hasFromChanged;\n\n      if (hasToChanged || hasValueChanged) {\n        finished = isEqual(computeGoal(value), goal);\n        started = !finished;\n      }\n\n      if (!isEqual(anim.immediate, immediate) && !immediate || !isEqual(config.decay, decay) || !isEqual(config.velocity, velocity)) {\n        started = true;\n      }\n    }\n\n    if (finished && isAnimating(this)) {\n      if (anim.changed && !reset) {\n        started = true;\n      } else if (!started) {\n        this._stop(prevTo);\n      }\n    }\n\n    if (!hasAsyncTo) {\n      if (started || hasFluidValue(prevTo)) {\n        anim.values = node.getPayload();\n        anim.toValues = hasFluidValue(to) ? null : goalType == AnimatedString ? [1] : toArray(goal);\n      }\n\n      if (anim.immediate != immediate) {\n        anim.immediate = immediate;\n\n        if (!immediate && !reset) {\n          this._set(prevTo);\n        }\n      }\n\n      if (started) {\n        const {\n          onRest\n        } = anim;\n        each(ACTIVE_EVENTS, type => mergeActiveFn(this, props, type));\n        const result = getFinishedResult(this, checkFinished(this, prevTo));\n        flushCalls(this._pendingCalls, result);\n\n        this._pendingCalls.add(resolve);\n\n        if (anim.changed) raf.batchedUpdates(() => {\n          anim.changed = !reset;\n          onRest == null ? void 0 : onRest(result, this);\n\n          if (reset) {\n            callProp(defaultProps.onRest, result);\n          } else {\n            anim.onStart == null ? void 0 : anim.onStart(result, this);\n          }\n        });\n      }\n    }\n\n    if (reset) {\n      this._set(value);\n    }\n\n    if (hasAsyncTo) {\n      resolve(runAsync(props.to, props, this._state, this));\n    } else if (started) {\n      this._start();\n    } else if (isAnimating(this) && !hasToChanged) {\n      this._pendingCalls.add(resolve);\n    } else {\n      resolve(getNoopResult(value));\n    }\n  }\n\n  _focus(value) {\n    const anim = this.animation;\n\n    if (value !== anim.to) {\n      if (getFluidObservers(this)) {\n        this._detach();\n      }\n\n      anim.to = value;\n\n      if (getFluidObservers(this)) {\n        this._attach();\n      }\n    }\n  }\n\n  _attach() {\n    let priority = 0;\n    const {\n      to\n    } = this.animation;\n\n    if (hasFluidValue(to)) {\n      addFluidObserver(to, this);\n\n      if (isFrameValue(to)) {\n        priority = to.priority + 1;\n      }\n    }\n\n    this.priority = priority;\n  }\n\n  _detach() {\n    const {\n      to\n    } = this.animation;\n\n    if (hasFluidValue(to)) {\n      removeFluidObserver(to, this);\n    }\n  }\n\n  _set(arg) {\n    let idle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    const value = getFluidValue(arg);\n\n    if (!is.und(value)) {\n      const oldNode = getAnimated(this);\n\n      if (!oldNode || !isEqual(value, oldNode.getValue())) {\n        const nodeType = getAnimatedType(value);\n\n        if (!oldNode || oldNode.constructor != nodeType) {\n          setAnimated(this, nodeType.create(value));\n        } else {\n          oldNode.setValue(value);\n        }\n\n        if (oldNode) {\n          raf.batchedUpdates(() => {\n            this._onChange(value, idle);\n          });\n        }\n      }\n    }\n\n    return getAnimated(this);\n  }\n\n  _onStart() {\n    const anim = this.animation;\n\n    if (!anim.changed) {\n      anim.changed = true;\n      sendEvent(this, 'onStart', getFinishedResult(this, checkFinished(this, anim.to)), this);\n    }\n  }\n\n  _onChange(value, idle) {\n    if (!idle) {\n      this._onStart();\n\n      callProp(this.animation.onChange, value, this);\n    }\n\n    callProp(this.defaultProps.onChange, value, this);\n\n    super._onChange(value, idle);\n  }\n\n  _start() {\n    const anim = this.animation;\n    getAnimated(this).reset(getFluidValue(anim.to));\n\n    if (!anim.immediate) {\n      anim.fromValues = anim.values.map(node => node.lastPosition);\n    }\n\n    if (!isAnimating(this)) {\n      setActiveBit(this, true);\n\n      if (!isPaused(this)) {\n        this._resume();\n      }\n    }\n  }\n\n  _resume() {\n    if (Globals.skipAnimation) {\n      this.finish();\n    } else {\n      frameLoop.start(this);\n    }\n  }\n\n  _stop(goal, cancel) {\n    if (isAnimating(this)) {\n      setActiveBit(this, false);\n      const anim = this.animation;\n      each(anim.values, node => {\n        node.done = true;\n      });\n\n      if (anim.toValues) {\n        anim.onChange = anim.onPause = anim.onResume = undefined;\n      }\n\n      callFluidObservers(this, {\n        type: 'idle',\n        parent: this\n      });\n      const result = cancel ? getCancelledResult(this.get()) : getFinishedResult(this.get(), checkFinished(this, goal != null ? goal : anim.to));\n      flushCalls(this._pendingCalls, result);\n\n      if (anim.changed) {\n        anim.changed = false;\n        sendEvent(this, 'onRest', result, this);\n      }\n    }\n  }\n\n}\n\nfunction checkFinished(target, to) {\n  const goal = computeGoal(to);\n  const value = computeGoal(target.get());\n  return isEqual(value, goal);\n}\n\nfunction createLoopUpdate(props) {\n  let loop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : props.loop;\n  let to = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : props.to;\n  let loopRet = callProp(loop);\n\n  if (loopRet) {\n    const overrides = loopRet !== true && inferTo(loopRet);\n    const reverse = (overrides || props).reverse;\n    const reset = !overrides || overrides.reset;\n    return createUpdate(_extends({}, props, {\n      loop,\n      default: false,\n      pause: undefined,\n      to: !reverse || isAsyncTo(to) ? to : undefined,\n      from: reset ? props.from : undefined,\n      reset\n    }, overrides));\n  }\n}\n\nfunction createUpdate(props) {\n  const {\n    to,\n    from\n  } = props = inferTo(props);\n  const keys = new Set();\n  if (is.obj(to)) findDefined(to, keys);\n  if (is.obj(from)) findDefined(from, keys);\n  props.keys = keys.size ? Array.from(keys) : null;\n  return props;\n}\n\nfunction declareUpdate(props) {\n  const update = createUpdate(props);\n\n  if (is.und(update.default)) {\n    update.default = getDefaultProps(update);\n  }\n\n  return update;\n}\n\nfunction findDefined(values, keys) {\n  eachProp(values, (value, key) => value != null && keys.add(key));\n}\n\nconst ACTIVE_EVENTS = ['onStart', 'onRest', 'onChange', 'onPause', 'onResume'];\n\nfunction mergeActiveFn(target, props, type) {\n  target.animation[type] = props[type] !== getDefaultProp(props, type) ? resolveProp(props[type], target.key) : undefined;\n}\n\nfunction sendEvent(target, type) {\n  var _target$animation$typ, _target$animation, _target$defaultProps$, _target$defaultProps;\n\n  for (var _len4 = arguments.length, args = new Array(_len4 > 2 ? _len4 - 2 : 0), _key4 = 2; _key4 < _len4; _key4++) {\n    args[_key4 - 2] = arguments[_key4];\n  }\n\n  (_target$animation$typ = (_target$animation = target.animation)[type]) == null ? void 0 : _target$animation$typ.call(_target$animation, ...args);\n  (_target$defaultProps$ = (_target$defaultProps = target.defaultProps)[type]) == null ? void 0 : _target$defaultProps$.call(_target$defaultProps, ...args);\n}\n\nconst BATCHED_EVENTS = ['onStart', 'onChange', 'onRest'];\nlet nextId = 1;\n\nclass Controller {\n  constructor(props, flush) {\n    this.id = nextId++;\n    this.springs = {};\n    this.queue = [];\n    this.ref = void 0;\n    this._flush = void 0;\n    this._initialProps = void 0;\n    this._lastAsyncId = 0;\n    this._active = new Set();\n    this._changed = new Set();\n    this._started = false;\n    this._item = void 0;\n    this._state = {\n      paused: false,\n      pauseQueue: new Set(),\n      resumeQueue: new Set(),\n      timeouts: new Set()\n    };\n    this._events = {\n      onStart: new Map(),\n      onChange: new Map(),\n      onRest: new Map()\n    };\n    this._onFrame = this._onFrame.bind(this);\n\n    if (flush) {\n      this._flush = flush;\n    }\n\n    if (props) {\n      this.start(_extends({\n        default: true\n      }, props));\n    }\n  }\n\n  get idle() {\n    return !this._state.asyncTo && Object.values(this.springs).every(spring => {\n      return spring.idle && !spring.isDelayed && !spring.isPaused;\n    });\n  }\n\n  get item() {\n    return this._item;\n  }\n\n  set item(item) {\n    this._item = item;\n  }\n\n  get() {\n    const values = {};\n    this.each((spring, key) => values[key] = spring.get());\n    return values;\n  }\n\n  set(values) {\n    for (const key in values) {\n      const value = values[key];\n\n      if (!is.und(value)) {\n        this.springs[key].set(value);\n      }\n    }\n  }\n\n  update(props) {\n    if (props) {\n      this.queue.push(createUpdate(props));\n    }\n\n    return this;\n  }\n\n  start(props) {\n    let {\n      queue\n    } = this;\n\n    if (props) {\n      queue = toArray(props).map(createUpdate);\n    } else {\n      this.queue = [];\n    }\n\n    if (this._flush) {\n      return this._flush(this, queue);\n    }\n\n    prepareKeys(this, queue);\n    return flushUpdateQueue(this, queue);\n  }\n\n  stop(arg, keys) {\n    if (arg !== !!arg) {\n      keys = arg;\n    }\n\n    if (keys) {\n      const springs = this.springs;\n      each(toArray(keys), key => springs[key].stop(!!arg));\n    } else {\n      stopAsync(this._state, this._lastAsyncId);\n      this.each(spring => spring.stop(!!arg));\n    }\n\n    return this;\n  }\n\n  pause(keys) {\n    if (is.und(keys)) {\n      this.start({\n        pause: true\n      });\n    } else {\n      const springs = this.springs;\n      each(toArray(keys), key => springs[key].pause());\n    }\n\n    return this;\n  }\n\n  resume(keys) {\n    if (is.und(keys)) {\n      this.start({\n        pause: false\n      });\n    } else {\n      const springs = this.springs;\n      each(toArray(keys), key => springs[key].resume());\n    }\n\n    return this;\n  }\n\n  each(iterator) {\n    eachProp(this.springs, iterator);\n  }\n\n  _onFrame() {\n    const {\n      onStart,\n      onChange,\n      onRest\n    } = this._events;\n    const active = this._active.size > 0;\n    const changed = this._changed.size > 0;\n\n    if (active && !this._started || changed && !this._started) {\n      this._started = true;\n      flush(onStart, _ref3 => {\n        let [onStart, result] = _ref3;\n        result.value = this.get();\n        onStart(result, this, this._item);\n      });\n    }\n\n    const idle = !active && this._started;\n    const values = changed || idle && onRest.size ? this.get() : null;\n\n    if (changed && onChange.size) {\n      flush(onChange, _ref4 => {\n        let [onChange, result] = _ref4;\n        result.value = values;\n        onChange(result, this, this._item);\n      });\n    }\n\n    if (idle) {\n      this._started = false;\n      flush(onRest, _ref5 => {\n        let [onRest, result] = _ref5;\n        result.value = values;\n        onRest(result, this, this._item);\n      });\n    }\n  }\n\n  eventObserved(event) {\n    if (event.type == 'change') {\n      this._changed.add(event.parent);\n\n      if (!event.idle) {\n        this._active.add(event.parent);\n      }\n    } else if (event.type == 'idle') {\n      this._active.delete(event.parent);\n    } else return;\n\n    raf.onFrame(this._onFrame);\n  }\n\n}\n\nfunction flushUpdateQueue(ctrl, queue) {\n  return Promise.all(queue.map(props => flushUpdate(ctrl, props))).then(results => getCombinedResult(ctrl, results));\n}\n\nasync function flushUpdate(ctrl, props, isLoop) {\n  const {\n    keys,\n    to,\n    from,\n    loop,\n    onRest,\n    onResolve\n  } = props;\n  const defaults = is.obj(props.default) && props.default;\n\n  if (loop) {\n    props.loop = false;\n  }\n\n  if (to === false) props.to = null;\n  if (from === false) props.from = null;\n  const asyncTo = is.arr(to) || is.fun(to) ? to : undefined;\n\n  if (asyncTo) {\n    props.to = undefined;\n    props.onRest = undefined;\n\n    if (defaults) {\n      defaults.onRest = undefined;\n    }\n  } else {\n    each(BATCHED_EVENTS, key => {\n      const handler = props[key];\n\n      if (is.fun(handler)) {\n        const queue = ctrl['_events'][key];\n\n        props[key] = _ref6 => {\n          let {\n            finished,\n            cancelled\n          } = _ref6;\n          const result = queue.get(handler);\n\n          if (result) {\n            if (!finished) result.finished = false;\n            if (cancelled) result.cancelled = true;\n          } else {\n            queue.set(handler, {\n              value: null,\n              finished: finished || false,\n              cancelled: cancelled || false\n            });\n          }\n        };\n\n        if (defaults) {\n          defaults[key] = props[key];\n        }\n      }\n    });\n  }\n\n  const state = ctrl['_state'];\n\n  if (props.pause === !state.paused) {\n    state.paused = props.pause;\n    flushCalls(props.pause ? state.pauseQueue : state.resumeQueue);\n  } else if (state.paused) {\n    props.pause = true;\n  }\n\n  const promises = (keys || Object.keys(ctrl.springs)).map(key => ctrl.springs[key].start(props));\n  const cancel = props.cancel === true || getDefaultProp(props, 'cancel') === true;\n\n  if (asyncTo || cancel && state.asyncId) {\n    promises.push(scheduleProps(++ctrl['_lastAsyncId'], {\n      props,\n      state,\n      actions: {\n        pause: noop,\n        resume: noop,\n\n        start(props, resolve) {\n          if (cancel) {\n            stopAsync(state, ctrl['_lastAsyncId']);\n            resolve(getCancelledResult(ctrl));\n          } else {\n            props.onRest = onRest;\n            resolve(runAsync(asyncTo, props, state, ctrl));\n          }\n        }\n\n      }\n    }));\n  }\n\n  if (state.paused) {\n    await new Promise(resume => {\n      state.resumeQueue.add(resume);\n    });\n  }\n\n  const result = getCombinedResult(ctrl, await Promise.all(promises));\n\n  if (loop && result.finished && !(isLoop && result.noop)) {\n    const nextProps = createLoopUpdate(props, loop, to);\n\n    if (nextProps) {\n      prepareKeys(ctrl, [nextProps]);\n      return flushUpdate(ctrl, nextProps, true);\n    }\n  }\n\n  if (onResolve) {\n    raf.batchedUpdates(() => onResolve(result, ctrl, ctrl.item));\n  }\n\n  return result;\n}\n\nfunction getSprings(ctrl, props) {\n  const springs = _extends({}, ctrl.springs);\n\n  if (props) {\n    each(toArray(props), props => {\n      if (is.und(props.keys)) {\n        props = createUpdate(props);\n      }\n\n      if (!is.obj(props.to)) {\n        props = _extends({}, props, {\n          to: undefined\n        });\n      }\n\n      prepareSprings(springs, props, key => {\n        return createSpring(key);\n      });\n    });\n  }\n\n  setSprings(ctrl, springs);\n  return springs;\n}\n\nfunction setSprings(ctrl, springs) {\n  eachProp(springs, (spring, key) => {\n    if (!ctrl.springs[key]) {\n      ctrl.springs[key] = spring;\n      addFluidObserver(spring, ctrl);\n    }\n  });\n}\n\nfunction createSpring(key, observer) {\n  const spring = new SpringValue();\n  spring.key = key;\n\n  if (observer) {\n    addFluidObserver(spring, observer);\n  }\n\n  return spring;\n}\n\nfunction prepareSprings(springs, props, create) {\n  if (props.keys) {\n    each(props.keys, key => {\n      const spring = springs[key] || (springs[key] = create(key));\n      spring['_prepareNode'](props);\n    });\n  }\n}\n\nfunction prepareKeys(ctrl, queue) {\n  each(queue, props => {\n    prepareSprings(ctrl.springs, props, key => {\n      return createSpring(key, ctrl);\n    });\n  });\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst _excluded$6 = [\"children\"];\n\nconst SpringContext = _ref => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$6);\n\n  const inherited = useContext(ctx);\n  const pause = props.pause || !!inherited.pause,\n        immediate = props.immediate || !!inherited.immediate;\n  props = useMemoOne(() => ({\n    pause,\n    immediate\n  }), [pause, immediate]);\n  const {\n    Provider\n  } = ctx;\n  return React.createElement(Provider, {\n    value: props\n  }, children);\n};\n\nconst ctx = makeContext(SpringContext, {});\nSpringContext.Provider = ctx.Provider;\nSpringContext.Consumer = ctx.Consumer;\n\nfunction makeContext(target, init) {\n  Object.assign(target, React.createContext(init));\n  target.Provider._context = target;\n  target.Consumer._context = target;\n  return target;\n}\n\nconst SpringRef = () => {\n  const current = [];\n\n  const SpringRef = function SpringRef(props) {\n    deprecateDirectCall();\n    const results = [];\n    each(current, (ctrl, i) => {\n      if (is.und(props)) {\n        results.push(ctrl.start());\n      } else {\n        const update = _getProps(props, ctrl, i);\n\n        if (update) {\n          results.push(ctrl.start(update));\n        }\n      }\n    });\n    return results;\n  };\n\n  SpringRef.current = current;\n\n  SpringRef.add = function (ctrl) {\n    if (!current.includes(ctrl)) {\n      current.push(ctrl);\n    }\n  };\n\n  SpringRef.delete = function (ctrl) {\n    const i = current.indexOf(ctrl);\n    if (~i) current.splice(i, 1);\n  };\n\n  SpringRef.pause = function () {\n    each(current, ctrl => ctrl.pause(...arguments));\n    return this;\n  };\n\n  SpringRef.resume = function () {\n    each(current, ctrl => ctrl.resume(...arguments));\n    return this;\n  };\n\n  SpringRef.set = function (values) {\n    each(current, ctrl => ctrl.set(values));\n  };\n\n  SpringRef.start = function (props) {\n    const results = [];\n    each(current, (ctrl, i) => {\n      if (is.und(props)) {\n        results.push(ctrl.start());\n      } else {\n        const update = this._getProps(props, ctrl, i);\n\n        if (update) {\n          results.push(ctrl.start(update));\n        }\n      }\n    });\n    return results;\n  };\n\n  SpringRef.stop = function () {\n    each(current, ctrl => ctrl.stop(...arguments));\n    return this;\n  };\n\n  SpringRef.update = function (props) {\n    each(current, (ctrl, i) => ctrl.update(this._getProps(props, ctrl, i)));\n    return this;\n  };\n\n  const _getProps = function _getProps(arg, ctrl, index) {\n    return is.fun(arg) ? arg(index, ctrl) : arg;\n  };\n\n  SpringRef._getProps = _getProps;\n  return SpringRef;\n};\n\nfunction useSprings(length, props, deps) {\n  const propsFn = is.fun(props) && props;\n  if (propsFn && !deps) deps = [];\n  const ref = useMemo(() => propsFn || arguments.length == 3 ? SpringRef() : void 0, []);\n  const layoutId = useRef(0);\n  const forceUpdate = useForceUpdate();\n  const state = useMemo(() => ({\n    ctrls: [],\n    queue: [],\n\n    flush(ctrl, updates) {\n      const springs = getSprings(ctrl, updates);\n      const canFlushSync = layoutId.current > 0 && !state.queue.length && !Object.keys(springs).some(key => !ctrl.springs[key]);\n      return canFlushSync ? flushUpdateQueue(ctrl, updates) : new Promise(resolve => {\n        setSprings(ctrl, springs);\n        state.queue.push(() => {\n          resolve(flushUpdateQueue(ctrl, updates));\n        });\n        forceUpdate();\n      });\n    }\n\n  }), []);\n  const ctrls = useRef([...state.ctrls]);\n  const updates = [];\n  const prevLength = usePrev(length) || 0;\n  useMemo(() => {\n    each(ctrls.current.slice(length, prevLength), ctrl => {\n      detachRefs(ctrl, ref);\n      ctrl.stop(true);\n    });\n    ctrls.current.length = length;\n    declareUpdates(prevLength, length);\n  }, [length]);\n  useMemo(() => {\n    declareUpdates(0, Math.min(prevLength, length));\n  }, deps);\n\n  function declareUpdates(startIndex, endIndex) {\n    for (let i = startIndex; i < endIndex; i++) {\n      const ctrl = ctrls.current[i] || (ctrls.current[i] = new Controller(null, state.flush));\n      const update = propsFn ? propsFn(i, ctrl) : props[i];\n\n      if (update) {\n        updates[i] = declareUpdate(update);\n      }\n    }\n  }\n\n  const springs = ctrls.current.map((ctrl, i) => getSprings(ctrl, updates[i]));\n  const context = useContext(SpringContext);\n  const prevContext = usePrev(context);\n  const hasContext = context !== prevContext && hasProps(context);\n  useIsomorphicLayoutEffect(() => {\n    layoutId.current++;\n    state.ctrls = ctrls.current;\n    const {\n      queue\n    } = state;\n\n    if (queue.length) {\n      state.queue = [];\n      each(queue, cb => cb());\n    }\n\n    each(ctrls.current, (ctrl, i) => {\n      ref == null ? void 0 : ref.add(ctrl);\n\n      if (hasContext) {\n        ctrl.start({\n          default: context\n        });\n      }\n\n      const update = updates[i];\n\n      if (update) {\n        replaceRef(ctrl, update.ref);\n\n        if (ctrl.ref) {\n          ctrl.queue.push(update);\n        } else {\n          ctrl.start(update);\n        }\n      }\n    });\n  });\n  useOnce(() => () => {\n    each(state.ctrls, ctrl => ctrl.stop(true));\n  });\n  const values = springs.map(x => _extends({}, x));\n  return ref ? [values, ref] : values;\n}\n\nfunction useSpring(props, deps) {\n  const isFn = is.fun(props);\n  const [[values], ref] = useSprings(1, isFn ? props : [props], isFn ? deps || [] : deps);\n  return isFn || arguments.length == 2 ? [values, ref] : values;\n}\n\nconst initSpringRef = () => SpringRef();\n\nconst useSpringRef = () => useState(initSpringRef)[0];\n\nconst useSpringValue = (initial, props) => {\n  const springValue = useConstant(() => new SpringValue(initial, props));\n  useOnce(() => () => {\n    springValue.stop();\n  });\n  return springValue;\n};\n\nfunction useTrail(length, propsArg, deps) {\n  const propsFn = is.fun(propsArg) && propsArg;\n  if (propsFn && !deps) deps = [];\n  let reverse = true;\n  let passedRef = undefined;\n  const result = useSprings(length, (i, ctrl) => {\n    const props = propsFn ? propsFn(i, ctrl) : propsArg;\n    passedRef = props.ref;\n    reverse = reverse && props.reverse;\n    return props;\n  }, deps || [{}]);\n  useIsomorphicLayoutEffect(() => {\n    each(result[1].current, (ctrl, i) => {\n      const parent = result[1].current[i + (reverse ? 1 : -1)];\n      replaceRef(ctrl, passedRef);\n\n      if (ctrl.ref) {\n        if (parent) {\n          ctrl.update({\n            to: parent.springs\n          });\n        }\n\n        return;\n      }\n\n      if (parent) {\n        ctrl.start({\n          to: parent.springs\n        });\n      } else {\n        ctrl.start();\n      }\n    });\n  }, deps);\n\n  if (propsFn || arguments.length == 3) {\n    var _passedRef;\n\n    const ref = (_passedRef = passedRef) != null ? _passedRef : result[1];\n\n    ref['_getProps'] = (propsArg, ctrl, i) => {\n      const props = is.fun(propsArg) ? propsArg(i, ctrl) : propsArg;\n\n      if (props) {\n        const parent = ref.current[i + (props.reverse ? 1 : -1)];\n        if (parent) props.to = parent.springs;\n        return props;\n      }\n    };\n\n    return result;\n  }\n\n  return result[0];\n}\n\nlet TransitionPhase;\n\n(function (TransitionPhase) {\n  TransitionPhase[\"MOUNT\"] = \"mount\";\n  TransitionPhase[\"ENTER\"] = \"enter\";\n  TransitionPhase[\"UPDATE\"] = \"update\";\n  TransitionPhase[\"LEAVE\"] = \"leave\";\n})(TransitionPhase || (TransitionPhase = {}));\n\nfunction useTransition(data, props, deps) {\n  const propsFn = is.fun(props) && props;\n  const {\n    reset,\n    sort,\n    trail = 0,\n    expires = true,\n    exitBeforeEnter = false,\n    onDestroyed,\n    ref: propsRef,\n    config: propsConfig\n  } = propsFn ? propsFn() : props;\n  const ref = useMemo(() => propsFn || arguments.length == 3 ? SpringRef() : void 0, []);\n  const items = toArray(data);\n  const transitions = [];\n  const usedTransitions = useRef(null);\n  const prevTransitions = reset ? null : usedTransitions.current;\n  useIsomorphicLayoutEffect(() => {\n    usedTransitions.current = transitions;\n  });\n  useOnce(() => {\n    each(transitions, t => {\n      ref == null ? void 0 : ref.add(t.ctrl);\n      t.ctrl.ref = ref;\n    });\n    return () => {\n      each(usedTransitions.current, t => {\n        if (t.expired) {\n          clearTimeout(t.expirationId);\n        }\n\n        detachRefs(t.ctrl, ref);\n        t.ctrl.stop(true);\n      });\n    };\n  });\n  const keys = getKeys(items, propsFn ? propsFn() : props, prevTransitions);\n  const expired = reset && usedTransitions.current || [];\n  useIsomorphicLayoutEffect(() => each(expired, _ref7 => {\n    let {\n      ctrl,\n      item,\n      key\n    } = _ref7;\n    detachRefs(ctrl, ref);\n    callProp(onDestroyed, item, key);\n  }));\n  const reused = [];\n  if (prevTransitions) each(prevTransitions, (t, i) => {\n    if (t.expired) {\n      clearTimeout(t.expirationId);\n      expired.push(t);\n    } else {\n      i = reused[i] = keys.indexOf(t.key);\n      if (~i) transitions[i] = t;\n    }\n  });\n  each(items, (item, i) => {\n    if (!transitions[i]) {\n      transitions[i] = {\n        key: keys[i],\n        item,\n        phase: TransitionPhase.MOUNT,\n        ctrl: new Controller()\n      };\n      transitions[i].ctrl.item = item;\n    }\n  });\n\n  if (reused.length) {\n    let i = -1;\n    const {\n      leave\n    } = propsFn ? propsFn() : props;\n    each(reused, (keyIndex, prevIndex) => {\n      const t = prevTransitions[prevIndex];\n\n      if (~keyIndex) {\n        i = transitions.indexOf(t);\n        transitions[i] = _extends({}, t, {\n          item: items[keyIndex]\n        });\n      } else if (leave) {\n        transitions.splice(++i, 0, t);\n      }\n    });\n  }\n\n  if (is.fun(sort)) {\n    transitions.sort((a, b) => sort(a.item, b.item));\n  }\n\n  let delay = -trail;\n  const forceUpdate = useForceUpdate();\n  const defaultProps = getDefaultProps(props);\n  const changes = new Map();\n  const exitingTransitions = useRef(new Map());\n  const forceChange = useRef(false);\n  each(transitions, (t, i) => {\n    const key = t.key;\n    const prevPhase = t.phase;\n    const p = propsFn ? propsFn() : props;\n    let to;\n    let phase;\n    let propsDelay = callProp(p.delay || 0, key);\n\n    if (prevPhase == TransitionPhase.MOUNT) {\n      to = p.enter;\n      phase = TransitionPhase.ENTER;\n    } else {\n      const isLeave = keys.indexOf(key) < 0;\n\n      if (prevPhase != TransitionPhase.LEAVE) {\n        if (isLeave) {\n          to = p.leave;\n          phase = TransitionPhase.LEAVE;\n        } else if (to = p.update) {\n          phase = TransitionPhase.UPDATE;\n        } else return;\n      } else if (!isLeave) {\n        to = p.enter;\n        phase = TransitionPhase.ENTER;\n      } else return;\n    }\n\n    to = callProp(to, t.item, i);\n    to = is.obj(to) ? inferTo(to) : {\n      to\n    };\n\n    if (!to.config) {\n      const config = propsConfig || defaultProps.config;\n      to.config = callProp(config, t.item, i, phase);\n    }\n\n    delay += trail;\n\n    const payload = _extends({}, defaultProps, {\n      delay: propsDelay + delay,\n      ref: propsRef,\n      immediate: p.immediate,\n      reset: false\n    }, to);\n\n    if (phase == TransitionPhase.ENTER && is.und(payload.from)) {\n      const _p = propsFn ? propsFn() : props;\n\n      const from = is.und(_p.initial) || prevTransitions ? _p.from : _p.initial;\n      payload.from = callProp(from, t.item, i);\n    }\n\n    const {\n      onResolve\n    } = payload;\n\n    payload.onResolve = result => {\n      callProp(onResolve, result);\n      const transitions = usedTransitions.current;\n      const t = transitions.find(t => t.key === key);\n      if (!t) return;\n\n      if (result.cancelled && t.phase != TransitionPhase.UPDATE) {\n        return;\n      }\n\n      if (t.ctrl.idle) {\n        const idle = transitions.every(t => t.ctrl.idle);\n\n        if (t.phase == TransitionPhase.LEAVE) {\n          const expiry = callProp(expires, t.item);\n\n          if (expiry !== false) {\n            const expiryMs = expiry === true ? 0 : expiry;\n            t.expired = true;\n\n            if (!idle && expiryMs > 0) {\n              if (expiryMs <= 0x7fffffff) t.expirationId = setTimeout(forceUpdate, expiryMs);\n              return;\n            }\n          }\n        }\n\n        if (idle && transitions.some(t => t.expired)) {\n          exitingTransitions.current.delete(t);\n\n          if (exitBeforeEnter) {\n            forceChange.current = true;\n          }\n\n          forceUpdate();\n        }\n      }\n    };\n\n    const springs = getSprings(t.ctrl, payload);\n\n    if (phase === TransitionPhase.LEAVE && exitBeforeEnter) {\n      exitingTransitions.current.set(t, {\n        phase,\n        springs,\n        payload\n      });\n    } else {\n      changes.set(t, {\n        phase,\n        springs,\n        payload\n      });\n    }\n  });\n  const context = useContext(SpringContext);\n  const prevContext = usePrev(context);\n  const hasContext = context !== prevContext && hasProps(context);\n  useIsomorphicLayoutEffect(() => {\n    if (hasContext) {\n      each(transitions, t => {\n        t.ctrl.start({\n          default: context\n        });\n      });\n    }\n  }, [context]);\n  each(changes, (_, t) => {\n    if (exitingTransitions.current.size) {\n      const ind = transitions.findIndex(state => state.key === t.key);\n      transitions.splice(ind, 1);\n    }\n  });\n  useIsomorphicLayoutEffect(() => {\n    each(exitingTransitions.current.size ? exitingTransitions.current : changes, (_ref8, t) => {\n      let {\n        phase,\n        payload\n      } = _ref8;\n      const {\n        ctrl\n      } = t;\n      t.phase = phase;\n      ref == null ? void 0 : ref.add(ctrl);\n\n      if (hasContext && phase == TransitionPhase.ENTER) {\n        ctrl.start({\n          default: context\n        });\n      }\n\n      if (payload) {\n        replaceRef(ctrl, payload.ref);\n\n        if ((ctrl.ref || ref) && !forceChange.current) {\n          ctrl.update(payload);\n        } else {\n          ctrl.start(payload);\n\n          if (forceChange.current) {\n            forceChange.current = false;\n          }\n        }\n      }\n    });\n  }, reset ? void 0 : deps);\n\n  const renderTransitions = render => React.createElement(React.Fragment, null, transitions.map((t, i) => {\n    const {\n      springs\n    } = changes.get(t) || t.ctrl;\n    const elem = render(_extends({}, springs), t.item, t, i);\n    return elem && elem.type ? React.createElement(elem.type, _extends({}, elem.props, {\n      key: is.str(t.key) || is.num(t.key) ? t.key : t.ctrl.id,\n      ref: elem.ref\n    })) : elem;\n  }));\n\n  return ref ? [renderTransitions, ref] : renderTransitions;\n}\n\nlet nextKey = 1;\n\nfunction getKeys(items, _ref9, prevTransitions) {\n  let {\n    key,\n    keys = key\n  } = _ref9;\n\n  if (keys === null) {\n    const reused = new Set();\n    return items.map(item => {\n      const t = prevTransitions && prevTransitions.find(t => t.item === item && t.phase !== TransitionPhase.LEAVE && !reused.has(t));\n\n      if (t) {\n        reused.add(t);\n        return t.key;\n      }\n\n      return nextKey++;\n    });\n  }\n\n  return is.und(keys) ? items : is.fun(keys) ? items.map(keys) : toArray(keys);\n}\n\nconst _excluded$5 = [\"container\"];\n\nconst useScroll = function () {\n  let _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  let {\n    container\n  } = _ref,\n      springOptions = _objectWithoutPropertiesLoose(_ref, _excluded$5);\n\n  const [scrollValues, api] = useSpring(() => _extends({\n    scrollX: 0,\n    scrollY: 0,\n    scrollXProgress: 0,\n    scrollYProgress: 0\n  }, springOptions), []);\n  useIsomorphicLayoutEffect(() => {\n    const cleanupScroll = onScroll(_ref10 => {\n      let {\n        x,\n        y\n      } = _ref10;\n      api.start({\n        scrollX: x.current,\n        scrollXProgress: x.progress,\n        scrollY: y.current,\n        scrollYProgress: y.progress\n      });\n    }, {\n      container: (container == null ? void 0 : container.current) || undefined\n    });\n    return () => {\n      each(Object.values(scrollValues), value => value.stop());\n      cleanupScroll();\n    };\n  }, []);\n  return scrollValues;\n};\n\nconst _excluded$4 = [\"container\"];\n\nconst useResize = _ref => {\n  let {\n    container\n  } = _ref,\n      springOptions = _objectWithoutPropertiesLoose(_ref, _excluded$4);\n\n  const [sizeValues, api] = useSpring(() => _extends({\n    width: 0,\n    height: 0\n  }, springOptions), []);\n  useIsomorphicLayoutEffect(() => {\n    const cleanupScroll = onResize(_ref11 => {\n      let {\n        width,\n        height\n      } = _ref11;\n      api.start({\n        width,\n        height,\n        immediate: sizeValues.width.get() === 0 || sizeValues.height.get() === 0\n      });\n    }, {\n      container: (container == null ? void 0 : container.current) || undefined\n    });\n    return () => {\n      each(Object.values(sizeValues), value => value.stop());\n      cleanupScroll();\n    };\n  }, []);\n  return sizeValues;\n};\n\nconst _excluded$3 = [\"to\", \"from\"],\n      _excluded2 = [\"root\", \"once\", \"amount\"];\nconst defaultThresholdOptions = {\n  any: 0,\n  all: 1\n};\n\nfunction useInView(props, args) {\n  const [isInView, setIsInView] = useState(false);\n  const ref = useRef();\n  const propsFn = is.fun(props) && props;\n  const springsProps = propsFn ? propsFn() : {};\n\n  const {\n    to = {},\n    from = {}\n  } = springsProps,\n        restSpringProps = _objectWithoutPropertiesLoose(springsProps, _excluded$3);\n\n  const intersectionArguments = propsFn ? args : props;\n  const [springs, api] = useSpring(() => _extends({\n    from\n  }, restSpringProps), []);\n  useIsomorphicLayoutEffect(() => {\n    const element = ref.current;\n\n    const _ref = intersectionArguments != null ? intersectionArguments : {},\n          {\n      root,\n      once,\n      amount = 'any'\n    } = _ref,\n          restArgs = _objectWithoutPropertiesLoose(_ref, _excluded2);\n\n    if (!element || once && isInView || typeof IntersectionObserver === 'undefined') return;\n    const activeIntersections = new WeakMap();\n\n    const onEnter = () => {\n      if (to) {\n        api.start(to);\n      }\n\n      setIsInView(true);\n\n      const cleanup = () => {\n        if (from) {\n          api.start(from);\n        }\n\n        setIsInView(false);\n      };\n\n      return once ? undefined : cleanup;\n    };\n\n    const handleIntersection = entries => {\n      entries.forEach(entry => {\n        const onLeave = activeIntersections.get(entry.target);\n\n        if (entry.isIntersecting === Boolean(onLeave)) {\n          return;\n        }\n\n        if (entry.isIntersecting) {\n          const newOnLeave = onEnter();\n\n          if (is.fun(newOnLeave)) {\n            activeIntersections.set(entry.target, newOnLeave);\n          } else {\n            observer.unobserve(entry.target);\n          }\n        } else if (onLeave) {\n          onLeave();\n          activeIntersections.delete(entry.target);\n        }\n      });\n    };\n\n    const observer = new IntersectionObserver(handleIntersection, _extends({\n      root: root && root.current || undefined,\n      threshold: typeof amount === 'number' || Array.isArray(amount) ? amount : defaultThresholdOptions[amount]\n    }, restArgs));\n    observer.observe(element);\n    return () => observer.unobserve(element);\n  }, [intersectionArguments]);\n\n  if (propsFn) {\n    return [ref, springs];\n  }\n\n  return [ref, isInView];\n}\n\nconst _excluded$2 = [\"children\"];\n\nfunction Spring(_ref) {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$2);\n\n  return children(useSpring(props));\n}\n\nconst _excluded$1 = [\"items\", \"children\"];\n\nfunction Trail(_ref) {\n  let {\n    items,\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n\n  const trails = useTrail(items.length, props);\n  return items.map((item, index) => {\n    const result = children(item, index);\n    return is.fun(result) ? result(trails[index]) : result;\n  });\n}\n\nconst _excluded = [\"items\", \"children\"];\n\nfunction Transition(_ref) {\n  let {\n    items,\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return useTransition(items, props)(children);\n}\n\nclass Interpolation extends FrameValue {\n  constructor(source, args) {\n    super();\n    this.key = void 0;\n    this.idle = true;\n    this.calc = void 0;\n    this._active = new Set();\n    this.source = source;\n    this.calc = createInterpolator(...args);\n\n    const value = this._get();\n\n    const nodeType = getAnimatedType(value);\n    setAnimated(this, nodeType.create(value));\n  }\n\n  advance(_dt) {\n    const value = this._get();\n\n    const oldValue = this.get();\n\n    if (!isEqual(value, oldValue)) {\n      getAnimated(this).setValue(value);\n\n      this._onChange(value, this.idle);\n    }\n\n    if (!this.idle && checkIdle(this._active)) {\n      becomeIdle(this);\n    }\n  }\n\n  _get() {\n    const inputs = is.arr(this.source) ? this.source.map(getFluidValue) : toArray(getFluidValue(this.source));\n    return this.calc(...inputs);\n  }\n\n  _start() {\n    if (this.idle && !checkIdle(this._active)) {\n      this.idle = false;\n      each(getPayload(this), node => {\n        node.done = false;\n      });\n\n      if (Globals.skipAnimation) {\n        raf.batchedUpdates(() => this.advance());\n        becomeIdle(this);\n      } else {\n        frameLoop.start(this);\n      }\n    }\n  }\n\n  _attach() {\n    let priority = 1;\n    each(toArray(this.source), source => {\n      if (hasFluidValue(source)) {\n        addFluidObserver(source, this);\n      }\n\n      if (isFrameValue(source)) {\n        if (!source.idle) {\n          this._active.add(source);\n        }\n\n        priority = Math.max(priority, source.priority + 1);\n      }\n    });\n    this.priority = priority;\n\n    this._start();\n  }\n\n  _detach() {\n    each(toArray(this.source), source => {\n      if (hasFluidValue(source)) {\n        removeFluidObserver(source, this);\n      }\n    });\n\n    this._active.clear();\n\n    becomeIdle(this);\n  }\n\n  eventObserved(event) {\n    if (event.type == 'change') {\n      if (event.idle) {\n        this.advance();\n      } else {\n        this._active.add(event.parent);\n\n        this._start();\n      }\n    } else if (event.type == 'idle') {\n      this._active.delete(event.parent);\n    } else if (event.type == 'priority') {\n      this.priority = toArray(this.source).reduce((highest, parent) => Math.max(highest, (isFrameValue(parent) ? parent.priority : 0) + 1), 0);\n    }\n  }\n\n}\n\nfunction isIdle(source) {\n  return source.idle !== false;\n}\n\nfunction checkIdle(active) {\n  return !active.size || Array.from(active).every(isIdle);\n}\n\nfunction becomeIdle(self) {\n  if (!self.idle) {\n    self.idle = true;\n    each(getPayload(self), node => {\n      node.done = true;\n    });\n    callFluidObservers(self, {\n      type: 'idle',\n      parent: self\n    });\n  }\n}\n\nconst to = function (source) {\n  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    args[_key5 - 1] = arguments[_key5];\n  }\n\n  return new Interpolation(source, args);\n};\n\nconst interpolate = function (source) {\n  for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n    args[_key6 - 1] = arguments[_key6];\n  }\n\n  return deprecateInterpolate(), new Interpolation(source, args);\n};\n\nGlobals.assign({\n  createStringInterpolator,\n  to: (source, args) => new Interpolation(source, args)\n});\nconst update = frameLoop.advance;\nexport { BailSignal, Controller, FrameValue, Interpolation, Spring, SpringContext, SpringRef, SpringValue, Trail, Transition, config, inferTo, interpolate, to, update, useChain, useInView, useResize, useScroll, useSpring, useSpringRef, useSpringValue, useSprings, useTrail, useTransition };","map":{"version":3,"names":["eachProp","is","toArray","getFluidValue","isAnimatedString","Globals","useIsomorphicLayoutEffect","each","easings","raf","flush","FluidValue","deprecateInterpolate","callFluidObservers","frameLoop","hasFluidValue","flushCalls","isEqual","getFluidObservers","addFluidObserver","removeFluidObserver","noop","useMemoOne","deprecateDirectCall","useForceUpdate","usePrev","useOnce","useConstant","onScroll","onResize","createInterpolator","createStringInterpolator","useReducedMotion","React","useContext","useMemo","useRef","useState","getAnimated","AnimatedValue","getPayload","AnimatedString","getAnimatedType","setAnimated","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","callProp","value","args","fun","matchProp","includes","resolveProp","prop","obj","getDefaultProp","props","default","undefined","noopTransform","getDefaultProps","transform","keys","DEFAULT_PROPS","defaults","und","RESERVED_PROPS","config","from","to","ref","loop","reset","pause","cancel","reverse","immediate","delay","onProps","onStart","onChange","onPause","onResume","onRest","onResolve","items","trail","sort","expires","initial","enter","update","leave","children","onDestroyed","callId","parentId","getForwardProps","forward","count","inferTo","out","val","computeGoal","arr","map","range","output","hasProps","_","isAsyncTo","detachRefs","ctrl","_ctrl$ref","delete","replaceRef","_ctrl$ref2","add","useChain","refs","timeSteps","timeFrame","prevDelay","controllers","current","isNaN","queue","memoizedDelayProp","start","p","Promise","resolve","queues","q","then","push","all","tension","friction","gentle","wobbly","stiff","slow","molasses","mass","damping","easing","linear","clamp","AnimationConfig","constructor","frequency","velocity","restVelocity","precision","progress","duration","bounce","decay","round","mergeConfig","newConfig","defaultConfig","sanitizeConfig","Math","pow","PI","isTensionConfig","emptyArray","Animation","changed","values","toValues","fromValues","scheduleProps","defaultProps","state","actions","reject","_props$cancel","timeout","paused","resumeQueue","resume","timeouts","time","now","skipAnimation","delayed","setTimeout","pauseQueue","cancelId","err","getCombinedResult","results","some","result","cancelled","getCancelledResult","get","every","getNoopResult","getFinishedResult","finished","runAsync","asyncTo","prevTo","promise","prevPromise","asyncId","preventBail","bail","bailPromise","bailIfEnded","bailSignal","bailResult","animate","arg1","arg2","BailSignal","skipAnimationSignal","SkipAnimationSignal","stopAsync","animating","stop","batchedUpdates","item","t","clear","Error","isFrameValue","FrameValue","nextId$1","id","_priority","priority","_onPriorityChange","node","getValue","interpolate","toJSON","observerAdded","_attach","observerRemoved","_detach","_onChange","idle","type","parent","$P","Symbol","for","HAS_ANIMATED","IS_ANIMATING","IS_PAUSED","hasAnimated","isAnimating","isPaused","setActiveBit","active","setPausedBit","SpringValue","animation","_state","Set","_pendingCalls","_lastCallId","_lastToId","_memoizedDuration","goal","lastVelocity","isDelayed","advance","dt","anim","payload","forEach","done","lastPosition","position","elapsed","elapsedTime","v0","min","abs","durationProgress","e","exp","bounceFactor","canBounce","isGrowing","isMoving","isBouncing","step","numSteps","ceil","n","springForce","dampingForce","acceleration","Number","console","warn","setValue","currVal","finalVal","_stop","set","_focus","_set","_update","finish","_onStart","up","eventObserved","event","_start","_prepareNode","_ref","isLoop","test","mergeActiveFn","sendEvent","isFrozen","checkFinished","_resume","_merge","nextProps","createLoopUpdate","hasToProp","hasFromProp","prevFrom","hasFromChanged","hasToChanged","hasAsyncTo","isAnimatable","num","nodeType","name","goalType","started","hasValueChanged","ACTIVE_EVENTS","arg","oldNode","create","loopRet","overrides","createUpdate","findDefined","size","Array","declareUpdate","_target$animation$typ","_target$animation","_target$defaultProps$","_target$defaultProps","BATCHED_EVENTS","nextId","Controller","springs","_flush","_initialProps","_lastAsyncId","_active","_changed","_started","_item","_events","Map","_onFrame","spring","prepareKeys","flushUpdateQueue","iterator","onFrame","flushUpdate","handler","promises","getSprings","prepareSprings","createSpring","setSprings","observer","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","_excluded$6","SpringContext","inherited","ctx","Provider","createElement","makeContext","Consumer","init","createContext","_context","SpringRef","_getProps","splice","index","useSprings","deps","propsFn","layoutId","forceUpdate","ctrls","updates","canFlushSync","prevLength","slice","declareUpdates","startIndex","endIndex","context","prevContext","hasContext","cb","x","useSpring","isFn","initSpringRef","useSpringRef","useSpringValue","springValue","useTrail","propsArg","passedRef","_passedRef","TransitionPhase","useTransition","data","exitBeforeEnter","propsRef","propsConfig","transitions","usedTransitions","prevTransitions","expired","clearTimeout","expirationId","getKeys","reused","phase","MOUNT","keyIndex","prevIndex","a","b","changes","exitingTransitions","forceChange","prevPhase","propsDelay","ENTER","isLeave","LEAVE","UPDATE","_p","find","expiry","expiryMs","ind","findIndex","renderTransitions","render","Fragment","elem","str","nextKey","has","_excluded$5","useScroll","container","springOptions","scrollValues","api","scrollX","scrollY","scrollXProgress","scrollYProgress","cleanupScroll","y","_excluded$4","useResize","sizeValues","width","height","_excluded$3","_excluded2","defaultThresholdOptions","any","useInView","isInView","setIsInView","springsProps","restSpringProps","intersectionArguments","element","root","once","amount","restArgs","IntersectionObserver","activeIntersections","WeakMap","onEnter","cleanup","handleIntersection","entries","entry","onLeave","isIntersecting","Boolean","newOnLeave","unobserve","threshold","isArray","observe","_excluded$2","Spring","_excluded$1","Trail","trails","_excluded","Transition","Interpolation","calc","_get","_dt","oldValue","checkIdle","becomeIdle","inputs","max","reduce","highest","isIdle","self"],"sources":["D:/Code/Html/client/node_modules/@react-spring/core/dist/react-spring-core.esm.js"],"sourcesContent":["import { eachProp, is, toArray, getFluidValue, isAnimatedString, Globals, useIsomorphicLayoutEffect, each, easings, raf, flush, FluidValue, deprecateInterpolate, callFluidObservers, frameLoop, hasFluidValue, flushCalls, isEqual, getFluidObservers, addFluidObserver, removeFluidObserver, noop, useMemoOne, deprecateDirectCall, useForceUpdate, usePrev, useOnce, useConstant, onScroll, onResize, createInterpolator, createStringInterpolator } from '@react-spring/shared';\nexport { Globals, createInterpolator, easings, useIsomorphicLayoutEffect, useReducedMotion } from '@react-spring/shared';\nimport * as React from 'react';\nimport { useContext, useMemo, useRef, useState } from 'react';\nimport { getAnimated, AnimatedValue, getPayload, AnimatedString, getAnimatedType, setAnimated } from '@react-spring/animated';\nexport * from '@react-spring/types/animated';\nexport * from '@react-spring/types/interpolation';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction callProp(value, ...args) {\n  return is.fun(value) ? value(...args) : value;\n}\nconst matchProp = (value, key) => value === true || !!(key && value && (is.fun(value) ? value(key) : toArray(value).includes(key)));\nconst resolveProp = (prop, key) => is.obj(prop) ? key && prop[key] : prop;\nconst getDefaultProp = (props, key) => props.default === true ? props[key] : props.default ? props.default[key] : undefined;\n\nconst noopTransform = value => value;\n\nconst getDefaultProps = (props, transform = noopTransform) => {\n  let keys = DEFAULT_PROPS;\n\n  if (props.default && props.default !== true) {\n    props = props.default;\n    keys = Object.keys(props);\n  }\n\n  const defaults = {};\n\n  for (const key of keys) {\n    const value = transform(props[key], key);\n\n    if (!is.und(value)) {\n      defaults[key] = value;\n    }\n  }\n\n  return defaults;\n};\nconst DEFAULT_PROPS = ['config', 'onProps', 'onStart', 'onChange', 'onPause', 'onResume', 'onRest'];\nconst RESERVED_PROPS = {\n  config: 1,\n  from: 1,\n  to: 1,\n  ref: 1,\n  loop: 1,\n  reset: 1,\n  pause: 1,\n  cancel: 1,\n  reverse: 1,\n  immediate: 1,\n  default: 1,\n  delay: 1,\n  onProps: 1,\n  onStart: 1,\n  onChange: 1,\n  onPause: 1,\n  onResume: 1,\n  onRest: 1,\n  onResolve: 1,\n  items: 1,\n  trail: 1,\n  sort: 1,\n  expires: 1,\n  initial: 1,\n  enter: 1,\n  update: 1,\n  leave: 1,\n  children: 1,\n  onDestroyed: 1,\n  keys: 1,\n  callId: 1,\n  parentId: 1\n};\n\nfunction getForwardProps(props) {\n  const forward = {};\n  let count = 0;\n  eachProp(props, (value, prop) => {\n    if (!RESERVED_PROPS[prop]) {\n      forward[prop] = value;\n      count++;\n    }\n  });\n\n  if (count) {\n    return forward;\n  }\n}\n\nfunction inferTo(props) {\n  const to = getForwardProps(props);\n\n  if (to) {\n    const out = {\n      to\n    };\n    eachProp(props, (val, key) => key in to || (out[key] = val));\n    return out;\n  }\n\n  return _extends({}, props);\n}\nfunction computeGoal(value) {\n  value = getFluidValue(value);\n  return is.arr(value) ? value.map(computeGoal) : isAnimatedString(value) ? Globals.createStringInterpolator({\n    range: [0, 1],\n    output: [value, value]\n  })(1) : value;\n}\nfunction hasProps(props) {\n  for (const _ in props) return true;\n\n  return false;\n}\nfunction isAsyncTo(to) {\n  return is.fun(to) || is.arr(to) && is.obj(to[0]);\n}\nfunction detachRefs(ctrl, ref) {\n  var _ctrl$ref;\n\n  (_ctrl$ref = ctrl.ref) == null ? void 0 : _ctrl$ref.delete(ctrl);\n  ref == null ? void 0 : ref.delete(ctrl);\n}\nfunction replaceRef(ctrl, ref) {\n  if (ref && ctrl.ref !== ref) {\n    var _ctrl$ref2;\n\n    (_ctrl$ref2 = ctrl.ref) == null ? void 0 : _ctrl$ref2.delete(ctrl);\n    ref.add(ctrl);\n    ctrl.ref = ref;\n  }\n}\n\nfunction useChain(refs, timeSteps, timeFrame = 1000) {\n  useIsomorphicLayoutEffect(() => {\n    if (timeSteps) {\n      let prevDelay = 0;\n      each(refs, (ref, i) => {\n        const controllers = ref.current;\n\n        if (controllers.length) {\n          let delay = timeFrame * timeSteps[i];\n          if (isNaN(delay)) delay = prevDelay;else prevDelay = delay;\n          each(controllers, ctrl => {\n            each(ctrl.queue, props => {\n              const memoizedDelayProp = props.delay;\n\n              props.delay = key => delay + callProp(memoizedDelayProp || 0, key);\n            });\n          });\n          ref.start();\n        }\n      });\n    } else {\n      let p = Promise.resolve();\n      each(refs, ref => {\n        const controllers = ref.current;\n\n        if (controllers.length) {\n          const queues = controllers.map(ctrl => {\n            const q = ctrl.queue;\n            ctrl.queue = [];\n            return q;\n          });\n          p = p.then(() => {\n            each(controllers, (ctrl, i) => each(queues[i] || [], update => ctrl.queue.push(update)));\n            return Promise.all(ref.start());\n          });\n        }\n      });\n    }\n  });\n}\n\nconst config = {\n  default: {\n    tension: 170,\n    friction: 26\n  },\n  gentle: {\n    tension: 120,\n    friction: 14\n  },\n  wobbly: {\n    tension: 180,\n    friction: 12\n  },\n  stiff: {\n    tension: 210,\n    friction: 20\n  },\n  slow: {\n    tension: 280,\n    friction: 60\n  },\n  molasses: {\n    tension: 280,\n    friction: 120\n  }\n};\n\nconst defaults = _extends({}, config.default, {\n  mass: 1,\n  damping: 1,\n  easing: easings.linear,\n  clamp: false\n});\n\nclass AnimationConfig {\n  constructor() {\n    this.tension = void 0;\n    this.friction = void 0;\n    this.frequency = void 0;\n    this.damping = void 0;\n    this.mass = void 0;\n    this.velocity = 0;\n    this.restVelocity = void 0;\n    this.precision = void 0;\n    this.progress = void 0;\n    this.duration = void 0;\n    this.easing = void 0;\n    this.clamp = void 0;\n    this.bounce = void 0;\n    this.decay = void 0;\n    this.round = void 0;\n    Object.assign(this, defaults);\n  }\n\n}\nfunction mergeConfig(config, newConfig, defaultConfig) {\n  if (defaultConfig) {\n    defaultConfig = _extends({}, defaultConfig);\n    sanitizeConfig(defaultConfig, newConfig);\n    newConfig = _extends({}, defaultConfig, newConfig);\n  }\n\n  sanitizeConfig(config, newConfig);\n  Object.assign(config, newConfig);\n\n  for (const key in defaults) {\n    if (config[key] == null) {\n      config[key] = defaults[key];\n    }\n  }\n\n  let {\n    mass,\n    frequency,\n    damping\n  } = config;\n\n  if (!is.und(frequency)) {\n    if (frequency < 0.01) frequency = 0.01;\n    if (damping < 0) damping = 0;\n    config.tension = Math.pow(2 * Math.PI / frequency, 2) * mass;\n    config.friction = 4 * Math.PI * damping * mass / frequency;\n  }\n\n  return config;\n}\n\nfunction sanitizeConfig(config, props) {\n  if (!is.und(props.decay)) {\n    config.duration = undefined;\n  } else {\n    const isTensionConfig = !is.und(props.tension) || !is.und(props.friction);\n\n    if (isTensionConfig || !is.und(props.frequency) || !is.und(props.damping) || !is.und(props.mass)) {\n      config.duration = undefined;\n      config.decay = undefined;\n    }\n\n    if (isTensionConfig) {\n      config.frequency = undefined;\n    }\n  }\n}\n\nconst emptyArray = [];\nclass Animation {\n  constructor() {\n    this.changed = false;\n    this.values = emptyArray;\n    this.toValues = null;\n    this.fromValues = emptyArray;\n    this.to = void 0;\n    this.from = void 0;\n    this.config = new AnimationConfig();\n    this.immediate = false;\n  }\n\n}\n\nfunction scheduleProps(callId, {\n  key,\n  props,\n  defaultProps,\n  state,\n  actions\n}) {\n  return new Promise((resolve, reject) => {\n    var _props$cancel;\n\n    let delay;\n    let timeout;\n    let cancel = matchProp((_props$cancel = props.cancel) != null ? _props$cancel : defaultProps == null ? void 0 : defaultProps.cancel, key);\n\n    if (cancel) {\n      onStart();\n    } else {\n      if (!is.und(props.pause)) {\n        state.paused = matchProp(props.pause, key);\n      }\n\n      let pause = defaultProps == null ? void 0 : defaultProps.pause;\n\n      if (pause !== true) {\n        pause = state.paused || matchProp(pause, key);\n      }\n\n      delay = callProp(props.delay || 0, key);\n\n      if (pause) {\n        state.resumeQueue.add(onResume);\n        actions.pause();\n      } else {\n        actions.resume();\n        onResume();\n      }\n    }\n\n    function onPause() {\n      state.resumeQueue.add(onResume);\n      state.timeouts.delete(timeout);\n      timeout.cancel();\n      delay = timeout.time - raf.now();\n    }\n\n    function onResume() {\n      if (delay > 0 && !Globals.skipAnimation) {\n        state.delayed = true;\n        timeout = raf.setTimeout(onStart, delay);\n        state.pauseQueue.add(onPause);\n        state.timeouts.add(timeout);\n      } else {\n        onStart();\n      }\n    }\n\n    function onStart() {\n      if (state.delayed) {\n        state.delayed = false;\n      }\n\n      state.pauseQueue.delete(onPause);\n      state.timeouts.delete(timeout);\n\n      if (callId <= (state.cancelId || 0)) {\n        cancel = true;\n      }\n\n      try {\n        actions.start(_extends({}, props, {\n          callId,\n          cancel\n        }), resolve);\n      } catch (err) {\n        reject(err);\n      }\n    }\n  });\n}\n\nconst getCombinedResult = (target, results) => results.length == 1 ? results[0] : results.some(result => result.cancelled) ? getCancelledResult(target.get()) : results.every(result => result.noop) ? getNoopResult(target.get()) : getFinishedResult(target.get(), results.every(result => result.finished));\nconst getNoopResult = value => ({\n  value,\n  noop: true,\n  finished: true,\n  cancelled: false\n});\nconst getFinishedResult = (value, finished, cancelled = false) => ({\n  value,\n  finished,\n  cancelled\n});\nconst getCancelledResult = value => ({\n  value,\n  cancelled: true,\n  finished: false\n});\n\nfunction runAsync(to, props, state, target) {\n  const {\n    callId,\n    parentId,\n    onRest\n  } = props;\n  const {\n    asyncTo: prevTo,\n    promise: prevPromise\n  } = state;\n\n  if (!parentId && to === prevTo && !props.reset) {\n    return prevPromise;\n  }\n\n  return state.promise = (async () => {\n    state.asyncId = callId;\n    state.asyncTo = to;\n    const defaultProps = getDefaultProps(props, (value, key) => key === 'onRest' ? undefined : value);\n    let preventBail;\n    let bail;\n    const bailPromise = new Promise((resolve, reject) => (preventBail = resolve, bail = reject));\n\n    const bailIfEnded = bailSignal => {\n      const bailResult = callId <= (state.cancelId || 0) && getCancelledResult(target) || callId !== state.asyncId && getFinishedResult(target, false);\n\n      if (bailResult) {\n        bailSignal.result = bailResult;\n        bail(bailSignal);\n        throw bailSignal;\n      }\n    };\n\n    const animate = (arg1, arg2) => {\n      const bailSignal = new BailSignal();\n      const skipAnimationSignal = new SkipAnimationSignal();\n      return (async () => {\n        if (Globals.skipAnimation) {\n          stopAsync(state);\n          skipAnimationSignal.result = getFinishedResult(target, false);\n          bail(skipAnimationSignal);\n          throw skipAnimationSignal;\n        }\n\n        bailIfEnded(bailSignal);\n        const props = is.obj(arg1) ? _extends({}, arg1) : _extends({}, arg2, {\n          to: arg1\n        });\n        props.parentId = callId;\n        eachProp(defaultProps, (value, key) => {\n          if (is.und(props[key])) {\n            props[key] = value;\n          }\n        });\n        const result = await target.start(props);\n        bailIfEnded(bailSignal);\n\n        if (state.paused) {\n          await new Promise(resume => {\n            state.resumeQueue.add(resume);\n          });\n        }\n\n        return result;\n      })();\n    };\n\n    let result;\n\n    if (Globals.skipAnimation) {\n      stopAsync(state);\n      return getFinishedResult(target, false);\n    }\n\n    try {\n      let animating;\n\n      if (is.arr(to)) {\n        animating = (async queue => {\n          for (const props of queue) {\n            await animate(props);\n          }\n        })(to);\n      } else {\n        animating = Promise.resolve(to(animate, target.stop.bind(target)));\n      }\n\n      await Promise.all([animating.then(preventBail), bailPromise]);\n      result = getFinishedResult(target.get(), true, false);\n    } catch (err) {\n      if (err instanceof BailSignal) {\n        result = err.result;\n      } else if (err instanceof SkipAnimationSignal) {\n        result = err.result;\n      } else {\n        throw err;\n      }\n    } finally {\n      if (callId == state.asyncId) {\n        state.asyncId = parentId;\n        state.asyncTo = parentId ? prevTo : undefined;\n        state.promise = parentId ? prevPromise : undefined;\n      }\n    }\n\n    if (is.fun(onRest)) {\n      raf.batchedUpdates(() => {\n        onRest(result, target, target.item);\n      });\n    }\n\n    return result;\n  })();\n}\nfunction stopAsync(state, cancelId) {\n  flush(state.timeouts, t => t.cancel());\n  state.pauseQueue.clear();\n  state.resumeQueue.clear();\n  state.asyncId = state.asyncTo = state.promise = undefined;\n  if (cancelId) state.cancelId = cancelId;\n}\nclass BailSignal extends Error {\n  constructor() {\n    super('An async animation has been interrupted. You see this error because you ' + 'forgot to use `await` or `.catch(...)` on its returned promise.');\n    this.result = void 0;\n  }\n\n}\nclass SkipAnimationSignal extends Error {\n  constructor() {\n    super('SkipAnimationSignal');\n    this.result = void 0;\n  }\n\n}\n\nconst isFrameValue = value => value instanceof FrameValue;\nlet nextId$1 = 1;\nclass FrameValue extends FluidValue {\n  constructor(...args) {\n    super(...args);\n    this.id = nextId$1++;\n    this.key = void 0;\n    this._priority = 0;\n  }\n\n  get priority() {\n    return this._priority;\n  }\n\n  set priority(priority) {\n    if (this._priority != priority) {\n      this._priority = priority;\n\n      this._onPriorityChange(priority);\n    }\n  }\n\n  get() {\n    const node = getAnimated(this);\n    return node && node.getValue();\n  }\n\n  to(...args) {\n    return Globals.to(this, args);\n  }\n\n  interpolate(...args) {\n    deprecateInterpolate();\n    return Globals.to(this, args);\n  }\n\n  toJSON() {\n    return this.get();\n  }\n\n  observerAdded(count) {\n    if (count == 1) this._attach();\n  }\n\n  observerRemoved(count) {\n    if (count == 0) this._detach();\n  }\n\n  _attach() {}\n\n  _detach() {}\n\n  _onChange(value, idle = false) {\n    callFluidObservers(this, {\n      type: 'change',\n      parent: this,\n      value,\n      idle\n    });\n  }\n\n  _onPriorityChange(priority) {\n    if (!this.idle) {\n      frameLoop.sort(this);\n    }\n\n    callFluidObservers(this, {\n      type: 'priority',\n      parent: this,\n      priority\n    });\n  }\n\n}\n\nconst $P = Symbol.for('SpringPhase');\nconst HAS_ANIMATED = 1;\nconst IS_ANIMATING = 2;\nconst IS_PAUSED = 4;\nconst hasAnimated = target => (target[$P] & HAS_ANIMATED) > 0;\nconst isAnimating = target => (target[$P] & IS_ANIMATING) > 0;\nconst isPaused = target => (target[$P] & IS_PAUSED) > 0;\nconst setActiveBit = (target, active) => active ? target[$P] |= IS_ANIMATING | HAS_ANIMATED : target[$P] &= ~IS_ANIMATING;\nconst setPausedBit = (target, paused) => paused ? target[$P] |= IS_PAUSED : target[$P] &= ~IS_PAUSED;\n\nclass SpringValue extends FrameValue {\n  constructor(arg1, arg2) {\n    super();\n    this.key = void 0;\n    this.animation = new Animation();\n    this.queue = void 0;\n    this.defaultProps = {};\n    this._state = {\n      paused: false,\n      delayed: false,\n      pauseQueue: new Set(),\n      resumeQueue: new Set(),\n      timeouts: new Set()\n    };\n    this._pendingCalls = new Set();\n    this._lastCallId = 0;\n    this._lastToId = 0;\n    this._memoizedDuration = 0;\n\n    if (!is.und(arg1) || !is.und(arg2)) {\n      const props = is.obj(arg1) ? _extends({}, arg1) : _extends({}, arg2, {\n        from: arg1\n      });\n\n      if (is.und(props.default)) {\n        props.default = true;\n      }\n\n      this.start(props);\n    }\n  }\n\n  get idle() {\n    return !(isAnimating(this) || this._state.asyncTo) || isPaused(this);\n  }\n\n  get goal() {\n    return getFluidValue(this.animation.to);\n  }\n\n  get velocity() {\n    const node = getAnimated(this);\n    return node instanceof AnimatedValue ? node.lastVelocity || 0 : node.getPayload().map(node => node.lastVelocity || 0);\n  }\n\n  get hasAnimated() {\n    return hasAnimated(this);\n  }\n\n  get isAnimating() {\n    return isAnimating(this);\n  }\n\n  get isPaused() {\n    return isPaused(this);\n  }\n\n  get isDelayed() {\n    return this._state.delayed;\n  }\n\n  advance(dt) {\n    let idle = true;\n    let changed = false;\n    const anim = this.animation;\n    let {\n      config,\n      toValues\n    } = anim;\n    const payload = getPayload(anim.to);\n\n    if (!payload && hasFluidValue(anim.to)) {\n      toValues = toArray(getFluidValue(anim.to));\n    }\n\n    anim.values.forEach((node, i) => {\n      if (node.done) return;\n      const to = node.constructor == AnimatedString ? 1 : payload ? payload[i].lastPosition : toValues[i];\n      let finished = anim.immediate;\n      let position = to;\n\n      if (!finished) {\n        position = node.lastPosition;\n\n        if (config.tension <= 0) {\n          node.done = true;\n          return;\n        }\n\n        let elapsed = node.elapsedTime += dt;\n        const from = anim.fromValues[i];\n        const v0 = node.v0 != null ? node.v0 : node.v0 = is.arr(config.velocity) ? config.velocity[i] : config.velocity;\n        let velocity;\n        const precision = config.precision || (from == to ? 0.005 : Math.min(1, Math.abs(to - from) * 0.001));\n\n        if (!is.und(config.duration)) {\n          let p = 1;\n\n          if (config.duration > 0) {\n            if (this._memoizedDuration !== config.duration) {\n              this._memoizedDuration = config.duration;\n\n              if (node.durationProgress > 0) {\n                node.elapsedTime = config.duration * node.durationProgress;\n                elapsed = node.elapsedTime += dt;\n              }\n            }\n\n            p = (config.progress || 0) + elapsed / this._memoizedDuration;\n            p = p > 1 ? 1 : p < 0 ? 0 : p;\n            node.durationProgress = p;\n          }\n\n          position = from + config.easing(p) * (to - from);\n          velocity = (position - node.lastPosition) / dt;\n          finished = p == 1;\n        } else if (config.decay) {\n          const decay = config.decay === true ? 0.998 : config.decay;\n          const e = Math.exp(-(1 - decay) * elapsed);\n          position = from + v0 / (1 - decay) * (1 - e);\n          finished = Math.abs(node.lastPosition - position) <= precision;\n          velocity = v0 * e;\n        } else {\n          velocity = node.lastVelocity == null ? v0 : node.lastVelocity;\n          const restVelocity = config.restVelocity || precision / 10;\n          const bounceFactor = config.clamp ? 0 : config.bounce;\n          const canBounce = !is.und(bounceFactor);\n          const isGrowing = from == to ? node.v0 > 0 : from < to;\n          let isMoving;\n          let isBouncing = false;\n          const step = 1;\n          const numSteps = Math.ceil(dt / step);\n\n          for (let n = 0; n < numSteps; ++n) {\n            isMoving = Math.abs(velocity) > restVelocity;\n\n            if (!isMoving) {\n              finished = Math.abs(to - position) <= precision;\n\n              if (finished) {\n                break;\n              }\n            }\n\n            if (canBounce) {\n              isBouncing = position == to || position > to == isGrowing;\n\n              if (isBouncing) {\n                velocity = -velocity * bounceFactor;\n                position = to;\n              }\n            }\n\n            const springForce = -config.tension * 0.000001 * (position - to);\n            const dampingForce = -config.friction * 0.001 * velocity;\n            const acceleration = (springForce + dampingForce) / config.mass;\n            velocity = velocity + acceleration * step;\n            position = position + velocity * step;\n          }\n        }\n\n        node.lastVelocity = velocity;\n\n        if (Number.isNaN(position)) {\n          console.warn(`Got NaN while animating:`, this);\n          finished = true;\n        }\n      }\n\n      if (payload && !payload[i].done) {\n        finished = false;\n      }\n\n      if (finished) {\n        node.done = true;\n      } else {\n        idle = false;\n      }\n\n      if (node.setValue(position, config.round)) {\n        changed = true;\n      }\n    });\n    const node = getAnimated(this);\n    const currVal = node.getValue();\n\n    if (idle) {\n      const finalVal = getFluidValue(anim.to);\n\n      if ((currVal !== finalVal || changed) && !config.decay) {\n        node.setValue(finalVal);\n\n        this._onChange(finalVal);\n      } else if (changed && config.decay) {\n        this._onChange(currVal);\n      }\n\n      this._stop();\n    } else if (changed) {\n      this._onChange(currVal);\n    }\n  }\n\n  set(value) {\n    raf.batchedUpdates(() => {\n      this._stop();\n\n      this._focus(value);\n\n      this._set(value);\n    });\n    return this;\n  }\n\n  pause() {\n    this._update({\n      pause: true\n    });\n  }\n\n  resume() {\n    this._update({\n      pause: false\n    });\n  }\n\n  finish() {\n    if (isAnimating(this)) {\n      const {\n        to,\n        config\n      } = this.animation;\n      raf.batchedUpdates(() => {\n        this._onStart();\n\n        if (!config.decay) {\n          this._set(to, false);\n        }\n\n        this._stop();\n      });\n    }\n\n    return this;\n  }\n\n  update(props) {\n    const queue = this.queue || (this.queue = []);\n    queue.push(props);\n    return this;\n  }\n\n  start(to, arg2) {\n    let queue;\n\n    if (!is.und(to)) {\n      queue = [is.obj(to) ? to : _extends({}, arg2, {\n        to\n      })];\n    } else {\n      queue = this.queue || [];\n      this.queue = [];\n    }\n\n    return Promise.all(queue.map(props => {\n      const up = this._update(props);\n\n      return up;\n    })).then(results => getCombinedResult(this, results));\n  }\n\n  stop(cancel) {\n    const {\n      to\n    } = this.animation;\n\n    this._focus(this.get());\n\n    stopAsync(this._state, cancel && this._lastCallId);\n    raf.batchedUpdates(() => this._stop(to, cancel));\n    return this;\n  }\n\n  reset() {\n    this._update({\n      reset: true\n    });\n  }\n\n  eventObserved(event) {\n    if (event.type == 'change') {\n      this._start();\n    } else if (event.type == 'priority') {\n      this.priority = event.priority + 1;\n    }\n  }\n\n  _prepareNode(props) {\n    const key = this.key || '';\n    let {\n      to,\n      from\n    } = props;\n    to = is.obj(to) ? to[key] : to;\n\n    if (to == null || isAsyncTo(to)) {\n      to = undefined;\n    }\n\n    from = is.obj(from) ? from[key] : from;\n\n    if (from == null) {\n      from = undefined;\n    }\n\n    const range = {\n      to,\n      from\n    };\n\n    if (!hasAnimated(this)) {\n      if (props.reverse) [to, from] = [from, to];\n      from = getFluidValue(from);\n\n      if (!is.und(from)) {\n        this._set(from);\n      } else if (!getAnimated(this)) {\n        this._set(to);\n      }\n    }\n\n    return range;\n  }\n\n  _update(_ref, isLoop) {\n    let props = _extends({}, _ref);\n\n    const {\n      key,\n      defaultProps\n    } = this;\n    if (props.default) Object.assign(defaultProps, getDefaultProps(props, (value, prop) => /^on/.test(prop) ? resolveProp(value, key) : value));\n    mergeActiveFn(this, props, 'onProps');\n    sendEvent(this, 'onProps', props, this);\n\n    const range = this._prepareNode(props);\n\n    if (Object.isFrozen(this)) {\n      throw Error('Cannot animate a `SpringValue` object that is frozen. ' + 'Did you forget to pass your component to `animated(...)` before animating its props?');\n    }\n\n    const state = this._state;\n    return scheduleProps(++this._lastCallId, {\n      key,\n      props,\n      defaultProps,\n      state,\n      actions: {\n        pause: () => {\n          if (!isPaused(this)) {\n            setPausedBit(this, true);\n            flushCalls(state.pauseQueue);\n            sendEvent(this, 'onPause', getFinishedResult(this, checkFinished(this, this.animation.to)), this);\n          }\n        },\n        resume: () => {\n          if (isPaused(this)) {\n            setPausedBit(this, false);\n\n            if (isAnimating(this)) {\n              this._resume();\n            }\n\n            flushCalls(state.resumeQueue);\n            sendEvent(this, 'onResume', getFinishedResult(this, checkFinished(this, this.animation.to)), this);\n          }\n        },\n        start: this._merge.bind(this, range)\n      }\n    }).then(result => {\n      if (props.loop && result.finished && !(isLoop && result.noop)) {\n        const nextProps = createLoopUpdate(props);\n\n        if (nextProps) {\n          return this._update(nextProps, true);\n        }\n      }\n\n      return result;\n    });\n  }\n\n  _merge(range, props, resolve) {\n    if (props.cancel) {\n      this.stop(true);\n      return resolve(getCancelledResult(this));\n    }\n\n    const hasToProp = !is.und(range.to);\n    const hasFromProp = !is.und(range.from);\n\n    if (hasToProp || hasFromProp) {\n      if (props.callId > this._lastToId) {\n        this._lastToId = props.callId;\n      } else {\n        return resolve(getCancelledResult(this));\n      }\n    }\n\n    const {\n      key,\n      defaultProps,\n      animation: anim\n    } = this;\n    const {\n      to: prevTo,\n      from: prevFrom\n    } = anim;\n    let {\n      to = prevTo,\n      from = prevFrom\n    } = range;\n\n    if (hasFromProp && !hasToProp && (!props.default || is.und(to))) {\n      to = from;\n    }\n\n    if (props.reverse) [to, from] = [from, to];\n    const hasFromChanged = !isEqual(from, prevFrom);\n\n    if (hasFromChanged) {\n      anim.from = from;\n    }\n\n    from = getFluidValue(from);\n    const hasToChanged = !isEqual(to, prevTo);\n\n    if (hasToChanged) {\n      this._focus(to);\n    }\n\n    const hasAsyncTo = isAsyncTo(props.to);\n    const {\n      config\n    } = anim;\n    const {\n      decay,\n      velocity\n    } = config;\n\n    if (hasToProp || hasFromProp) {\n      config.velocity = 0;\n    }\n\n    if (props.config && !hasAsyncTo) {\n      mergeConfig(config, callProp(props.config, key), props.config !== defaultProps.config ? callProp(defaultProps.config, key) : void 0);\n    }\n\n    let node = getAnimated(this);\n\n    if (!node || is.und(to)) {\n      return resolve(getFinishedResult(this, true));\n    }\n\n    const reset = is.und(props.reset) ? hasFromProp && !props.default : !is.und(from) && matchProp(props.reset, key);\n    const value = reset ? from : this.get();\n    const goal = computeGoal(to);\n    const isAnimatable = is.num(goal) || is.arr(goal) || isAnimatedString(goal);\n    const immediate = !hasAsyncTo && (!isAnimatable || matchProp(defaultProps.immediate || props.immediate, key));\n\n    if (hasToChanged) {\n      const nodeType = getAnimatedType(to);\n\n      if (nodeType !== node.constructor) {\n        if (immediate) {\n          node = this._set(goal);\n        } else throw Error(`Cannot animate between ${node.constructor.name} and ${nodeType.name}, as the \"to\" prop suggests`);\n      }\n    }\n\n    const goalType = node.constructor;\n    let started = hasFluidValue(to);\n    let finished = false;\n\n    if (!started) {\n      const hasValueChanged = reset || !hasAnimated(this) && hasFromChanged;\n\n      if (hasToChanged || hasValueChanged) {\n        finished = isEqual(computeGoal(value), goal);\n        started = !finished;\n      }\n\n      if (!isEqual(anim.immediate, immediate) && !immediate || !isEqual(config.decay, decay) || !isEqual(config.velocity, velocity)) {\n        started = true;\n      }\n    }\n\n    if (finished && isAnimating(this)) {\n      if (anim.changed && !reset) {\n        started = true;\n      } else if (!started) {\n        this._stop(prevTo);\n      }\n    }\n\n    if (!hasAsyncTo) {\n      if (started || hasFluidValue(prevTo)) {\n        anim.values = node.getPayload();\n        anim.toValues = hasFluidValue(to) ? null : goalType == AnimatedString ? [1] : toArray(goal);\n      }\n\n      if (anim.immediate != immediate) {\n        anim.immediate = immediate;\n\n        if (!immediate && !reset) {\n          this._set(prevTo);\n        }\n      }\n\n      if (started) {\n        const {\n          onRest\n        } = anim;\n        each(ACTIVE_EVENTS, type => mergeActiveFn(this, props, type));\n        const result = getFinishedResult(this, checkFinished(this, prevTo));\n        flushCalls(this._pendingCalls, result);\n\n        this._pendingCalls.add(resolve);\n\n        if (anim.changed) raf.batchedUpdates(() => {\n          anim.changed = !reset;\n          onRest == null ? void 0 : onRest(result, this);\n\n          if (reset) {\n            callProp(defaultProps.onRest, result);\n          } else {\n            anim.onStart == null ? void 0 : anim.onStart(result, this);\n          }\n        });\n      }\n    }\n\n    if (reset) {\n      this._set(value);\n    }\n\n    if (hasAsyncTo) {\n      resolve(runAsync(props.to, props, this._state, this));\n    } else if (started) {\n      this._start();\n    } else if (isAnimating(this) && !hasToChanged) {\n      this._pendingCalls.add(resolve);\n    } else {\n      resolve(getNoopResult(value));\n    }\n  }\n\n  _focus(value) {\n    const anim = this.animation;\n\n    if (value !== anim.to) {\n      if (getFluidObservers(this)) {\n        this._detach();\n      }\n\n      anim.to = value;\n\n      if (getFluidObservers(this)) {\n        this._attach();\n      }\n    }\n  }\n\n  _attach() {\n    let priority = 0;\n    const {\n      to\n    } = this.animation;\n\n    if (hasFluidValue(to)) {\n      addFluidObserver(to, this);\n\n      if (isFrameValue(to)) {\n        priority = to.priority + 1;\n      }\n    }\n\n    this.priority = priority;\n  }\n\n  _detach() {\n    const {\n      to\n    } = this.animation;\n\n    if (hasFluidValue(to)) {\n      removeFluidObserver(to, this);\n    }\n  }\n\n  _set(arg, idle = true) {\n    const value = getFluidValue(arg);\n\n    if (!is.und(value)) {\n      const oldNode = getAnimated(this);\n\n      if (!oldNode || !isEqual(value, oldNode.getValue())) {\n        const nodeType = getAnimatedType(value);\n\n        if (!oldNode || oldNode.constructor != nodeType) {\n          setAnimated(this, nodeType.create(value));\n        } else {\n          oldNode.setValue(value);\n        }\n\n        if (oldNode) {\n          raf.batchedUpdates(() => {\n            this._onChange(value, idle);\n          });\n        }\n      }\n    }\n\n    return getAnimated(this);\n  }\n\n  _onStart() {\n    const anim = this.animation;\n\n    if (!anim.changed) {\n      anim.changed = true;\n      sendEvent(this, 'onStart', getFinishedResult(this, checkFinished(this, anim.to)), this);\n    }\n  }\n\n  _onChange(value, idle) {\n    if (!idle) {\n      this._onStart();\n\n      callProp(this.animation.onChange, value, this);\n    }\n\n    callProp(this.defaultProps.onChange, value, this);\n\n    super._onChange(value, idle);\n  }\n\n  _start() {\n    const anim = this.animation;\n    getAnimated(this).reset(getFluidValue(anim.to));\n\n    if (!anim.immediate) {\n      anim.fromValues = anim.values.map(node => node.lastPosition);\n    }\n\n    if (!isAnimating(this)) {\n      setActiveBit(this, true);\n\n      if (!isPaused(this)) {\n        this._resume();\n      }\n    }\n  }\n\n  _resume() {\n    if (Globals.skipAnimation) {\n      this.finish();\n    } else {\n      frameLoop.start(this);\n    }\n  }\n\n  _stop(goal, cancel) {\n    if (isAnimating(this)) {\n      setActiveBit(this, false);\n      const anim = this.animation;\n      each(anim.values, node => {\n        node.done = true;\n      });\n\n      if (anim.toValues) {\n        anim.onChange = anim.onPause = anim.onResume = undefined;\n      }\n\n      callFluidObservers(this, {\n        type: 'idle',\n        parent: this\n      });\n      const result = cancel ? getCancelledResult(this.get()) : getFinishedResult(this.get(), checkFinished(this, goal != null ? goal : anim.to));\n      flushCalls(this._pendingCalls, result);\n\n      if (anim.changed) {\n        anim.changed = false;\n        sendEvent(this, 'onRest', result, this);\n      }\n    }\n  }\n\n}\n\nfunction checkFinished(target, to) {\n  const goal = computeGoal(to);\n  const value = computeGoal(target.get());\n  return isEqual(value, goal);\n}\n\nfunction createLoopUpdate(props, loop = props.loop, to = props.to) {\n  let loopRet = callProp(loop);\n\n  if (loopRet) {\n    const overrides = loopRet !== true && inferTo(loopRet);\n    const reverse = (overrides || props).reverse;\n    const reset = !overrides || overrides.reset;\n    return createUpdate(_extends({}, props, {\n      loop,\n      default: false,\n      pause: undefined,\n      to: !reverse || isAsyncTo(to) ? to : undefined,\n      from: reset ? props.from : undefined,\n      reset\n    }, overrides));\n  }\n}\nfunction createUpdate(props) {\n  const {\n    to,\n    from\n  } = props = inferTo(props);\n  const keys = new Set();\n  if (is.obj(to)) findDefined(to, keys);\n  if (is.obj(from)) findDefined(from, keys);\n  props.keys = keys.size ? Array.from(keys) : null;\n  return props;\n}\nfunction declareUpdate(props) {\n  const update = createUpdate(props);\n\n  if (is.und(update.default)) {\n    update.default = getDefaultProps(update);\n  }\n\n  return update;\n}\n\nfunction findDefined(values, keys) {\n  eachProp(values, (value, key) => value != null && keys.add(key));\n}\n\nconst ACTIVE_EVENTS = ['onStart', 'onRest', 'onChange', 'onPause', 'onResume'];\n\nfunction mergeActiveFn(target, props, type) {\n  target.animation[type] = props[type] !== getDefaultProp(props, type) ? resolveProp(props[type], target.key) : undefined;\n}\n\nfunction sendEvent(target, type, ...args) {\n  var _target$animation$typ, _target$animation, _target$defaultProps$, _target$defaultProps;\n\n  (_target$animation$typ = (_target$animation = target.animation)[type]) == null ? void 0 : _target$animation$typ.call(_target$animation, ...args);\n  (_target$defaultProps$ = (_target$defaultProps = target.defaultProps)[type]) == null ? void 0 : _target$defaultProps$.call(_target$defaultProps, ...args);\n}\n\nconst BATCHED_EVENTS = ['onStart', 'onChange', 'onRest'];\nlet nextId = 1;\nclass Controller {\n  constructor(props, flush) {\n    this.id = nextId++;\n    this.springs = {};\n    this.queue = [];\n    this.ref = void 0;\n    this._flush = void 0;\n    this._initialProps = void 0;\n    this._lastAsyncId = 0;\n    this._active = new Set();\n    this._changed = new Set();\n    this._started = false;\n    this._item = void 0;\n    this._state = {\n      paused: false,\n      pauseQueue: new Set(),\n      resumeQueue: new Set(),\n      timeouts: new Set()\n    };\n    this._events = {\n      onStart: new Map(),\n      onChange: new Map(),\n      onRest: new Map()\n    };\n    this._onFrame = this._onFrame.bind(this);\n\n    if (flush) {\n      this._flush = flush;\n    }\n\n    if (props) {\n      this.start(_extends({\n        default: true\n      }, props));\n    }\n  }\n\n  get idle() {\n    return !this._state.asyncTo && Object.values(this.springs).every(spring => {\n      return spring.idle && !spring.isDelayed && !spring.isPaused;\n    });\n  }\n\n  get item() {\n    return this._item;\n  }\n\n  set item(item) {\n    this._item = item;\n  }\n\n  get() {\n    const values = {};\n    this.each((spring, key) => values[key] = spring.get());\n    return values;\n  }\n\n  set(values) {\n    for (const key in values) {\n      const value = values[key];\n\n      if (!is.und(value)) {\n        this.springs[key].set(value);\n      }\n    }\n  }\n\n  update(props) {\n    if (props) {\n      this.queue.push(createUpdate(props));\n    }\n\n    return this;\n  }\n\n  start(props) {\n    let {\n      queue\n    } = this;\n\n    if (props) {\n      queue = toArray(props).map(createUpdate);\n    } else {\n      this.queue = [];\n    }\n\n    if (this._flush) {\n      return this._flush(this, queue);\n    }\n\n    prepareKeys(this, queue);\n    return flushUpdateQueue(this, queue);\n  }\n\n  stop(arg, keys) {\n    if (arg !== !!arg) {\n      keys = arg;\n    }\n\n    if (keys) {\n      const springs = this.springs;\n      each(toArray(keys), key => springs[key].stop(!!arg));\n    } else {\n      stopAsync(this._state, this._lastAsyncId);\n      this.each(spring => spring.stop(!!arg));\n    }\n\n    return this;\n  }\n\n  pause(keys) {\n    if (is.und(keys)) {\n      this.start({\n        pause: true\n      });\n    } else {\n      const springs = this.springs;\n      each(toArray(keys), key => springs[key].pause());\n    }\n\n    return this;\n  }\n\n  resume(keys) {\n    if (is.und(keys)) {\n      this.start({\n        pause: false\n      });\n    } else {\n      const springs = this.springs;\n      each(toArray(keys), key => springs[key].resume());\n    }\n\n    return this;\n  }\n\n  each(iterator) {\n    eachProp(this.springs, iterator);\n  }\n\n  _onFrame() {\n    const {\n      onStart,\n      onChange,\n      onRest\n    } = this._events;\n    const active = this._active.size > 0;\n    const changed = this._changed.size > 0;\n\n    if (active && !this._started || changed && !this._started) {\n      this._started = true;\n      flush(onStart, ([onStart, result]) => {\n        result.value = this.get();\n        onStart(result, this, this._item);\n      });\n    }\n\n    const idle = !active && this._started;\n    const values = changed || idle && onRest.size ? this.get() : null;\n\n    if (changed && onChange.size) {\n      flush(onChange, ([onChange, result]) => {\n        result.value = values;\n        onChange(result, this, this._item);\n      });\n    }\n\n    if (idle) {\n      this._started = false;\n      flush(onRest, ([onRest, result]) => {\n        result.value = values;\n        onRest(result, this, this._item);\n      });\n    }\n  }\n\n  eventObserved(event) {\n    if (event.type == 'change') {\n      this._changed.add(event.parent);\n\n      if (!event.idle) {\n        this._active.add(event.parent);\n      }\n    } else if (event.type == 'idle') {\n      this._active.delete(event.parent);\n    } else return;\n\n    raf.onFrame(this._onFrame);\n  }\n\n}\nfunction flushUpdateQueue(ctrl, queue) {\n  return Promise.all(queue.map(props => flushUpdate(ctrl, props))).then(results => getCombinedResult(ctrl, results));\n}\nasync function flushUpdate(ctrl, props, isLoop) {\n  const {\n    keys,\n    to,\n    from,\n    loop,\n    onRest,\n    onResolve\n  } = props;\n  const defaults = is.obj(props.default) && props.default;\n\n  if (loop) {\n    props.loop = false;\n  }\n\n  if (to === false) props.to = null;\n  if (from === false) props.from = null;\n  const asyncTo = is.arr(to) || is.fun(to) ? to : undefined;\n\n  if (asyncTo) {\n    props.to = undefined;\n    props.onRest = undefined;\n\n    if (defaults) {\n      defaults.onRest = undefined;\n    }\n  } else {\n    each(BATCHED_EVENTS, key => {\n      const handler = props[key];\n\n      if (is.fun(handler)) {\n        const queue = ctrl['_events'][key];\n\n        props[key] = ({\n          finished,\n          cancelled\n        }) => {\n          const result = queue.get(handler);\n\n          if (result) {\n            if (!finished) result.finished = false;\n            if (cancelled) result.cancelled = true;\n          } else {\n            queue.set(handler, {\n              value: null,\n              finished: finished || false,\n              cancelled: cancelled || false\n            });\n          }\n        };\n\n        if (defaults) {\n          defaults[key] = props[key];\n        }\n      }\n    });\n  }\n\n  const state = ctrl['_state'];\n\n  if (props.pause === !state.paused) {\n    state.paused = props.pause;\n    flushCalls(props.pause ? state.pauseQueue : state.resumeQueue);\n  } else if (state.paused) {\n    props.pause = true;\n  }\n\n  const promises = (keys || Object.keys(ctrl.springs)).map(key => ctrl.springs[key].start(props));\n  const cancel = props.cancel === true || getDefaultProp(props, 'cancel') === true;\n\n  if (asyncTo || cancel && state.asyncId) {\n    promises.push(scheduleProps(++ctrl['_lastAsyncId'], {\n      props,\n      state,\n      actions: {\n        pause: noop,\n        resume: noop,\n\n        start(props, resolve) {\n          if (cancel) {\n            stopAsync(state, ctrl['_lastAsyncId']);\n            resolve(getCancelledResult(ctrl));\n          } else {\n            props.onRest = onRest;\n            resolve(runAsync(asyncTo, props, state, ctrl));\n          }\n        }\n\n      }\n    }));\n  }\n\n  if (state.paused) {\n    await new Promise(resume => {\n      state.resumeQueue.add(resume);\n    });\n  }\n\n  const result = getCombinedResult(ctrl, await Promise.all(promises));\n\n  if (loop && result.finished && !(isLoop && result.noop)) {\n    const nextProps = createLoopUpdate(props, loop, to);\n\n    if (nextProps) {\n      prepareKeys(ctrl, [nextProps]);\n      return flushUpdate(ctrl, nextProps, true);\n    }\n  }\n\n  if (onResolve) {\n    raf.batchedUpdates(() => onResolve(result, ctrl, ctrl.item));\n  }\n\n  return result;\n}\nfunction getSprings(ctrl, props) {\n  const springs = _extends({}, ctrl.springs);\n\n  if (props) {\n    each(toArray(props), props => {\n      if (is.und(props.keys)) {\n        props = createUpdate(props);\n      }\n\n      if (!is.obj(props.to)) {\n        props = _extends({}, props, {\n          to: undefined\n        });\n      }\n\n      prepareSprings(springs, props, key => {\n        return createSpring(key);\n      });\n    });\n  }\n\n  setSprings(ctrl, springs);\n  return springs;\n}\nfunction setSprings(ctrl, springs) {\n  eachProp(springs, (spring, key) => {\n    if (!ctrl.springs[key]) {\n      ctrl.springs[key] = spring;\n      addFluidObserver(spring, ctrl);\n    }\n  });\n}\n\nfunction createSpring(key, observer) {\n  const spring = new SpringValue();\n  spring.key = key;\n\n  if (observer) {\n    addFluidObserver(spring, observer);\n  }\n\n  return spring;\n}\n\nfunction prepareSprings(springs, props, create) {\n  if (props.keys) {\n    each(props.keys, key => {\n      const spring = springs[key] || (springs[key] = create(key));\n      spring['_prepareNode'](props);\n    });\n  }\n}\n\nfunction prepareKeys(ctrl, queue) {\n  each(queue, props => {\n    prepareSprings(ctrl.springs, props, key => {\n      return createSpring(key, ctrl);\n    });\n  });\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst _excluded$6 = [\"children\"];\nconst SpringContext = _ref => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$6);\n\n  const inherited = useContext(ctx);\n  const pause = props.pause || !!inherited.pause,\n        immediate = props.immediate || !!inherited.immediate;\n  props = useMemoOne(() => ({\n    pause,\n    immediate\n  }), [pause, immediate]);\n  const {\n    Provider\n  } = ctx;\n  return React.createElement(Provider, {\n    value: props\n  }, children);\n};\nconst ctx = makeContext(SpringContext, {});\nSpringContext.Provider = ctx.Provider;\nSpringContext.Consumer = ctx.Consumer;\n\nfunction makeContext(target, init) {\n  Object.assign(target, React.createContext(init));\n  target.Provider._context = target;\n  target.Consumer._context = target;\n  return target;\n}\n\nconst SpringRef = () => {\n  const current = [];\n\n  const SpringRef = function SpringRef(props) {\n    deprecateDirectCall();\n    const results = [];\n    each(current, (ctrl, i) => {\n      if (is.und(props)) {\n        results.push(ctrl.start());\n      } else {\n        const update = _getProps(props, ctrl, i);\n\n        if (update) {\n          results.push(ctrl.start(update));\n        }\n      }\n    });\n    return results;\n  };\n\n  SpringRef.current = current;\n\n  SpringRef.add = function (ctrl) {\n    if (!current.includes(ctrl)) {\n      current.push(ctrl);\n    }\n  };\n\n  SpringRef.delete = function (ctrl) {\n    const i = current.indexOf(ctrl);\n    if (~i) current.splice(i, 1);\n  };\n\n  SpringRef.pause = function () {\n    each(current, ctrl => ctrl.pause(...arguments));\n    return this;\n  };\n\n  SpringRef.resume = function () {\n    each(current, ctrl => ctrl.resume(...arguments));\n    return this;\n  };\n\n  SpringRef.set = function (values) {\n    each(current, ctrl => ctrl.set(values));\n  };\n\n  SpringRef.start = function (props) {\n    const results = [];\n    each(current, (ctrl, i) => {\n      if (is.und(props)) {\n        results.push(ctrl.start());\n      } else {\n        const update = this._getProps(props, ctrl, i);\n\n        if (update) {\n          results.push(ctrl.start(update));\n        }\n      }\n    });\n    return results;\n  };\n\n  SpringRef.stop = function () {\n    each(current, ctrl => ctrl.stop(...arguments));\n    return this;\n  };\n\n  SpringRef.update = function (props) {\n    each(current, (ctrl, i) => ctrl.update(this._getProps(props, ctrl, i)));\n    return this;\n  };\n\n  const _getProps = function _getProps(arg, ctrl, index) {\n    return is.fun(arg) ? arg(index, ctrl) : arg;\n  };\n\n  SpringRef._getProps = _getProps;\n  return SpringRef;\n};\n\nfunction useSprings(length, props, deps) {\n  const propsFn = is.fun(props) && props;\n  if (propsFn && !deps) deps = [];\n  const ref = useMemo(() => propsFn || arguments.length == 3 ? SpringRef() : void 0, []);\n  const layoutId = useRef(0);\n  const forceUpdate = useForceUpdate();\n  const state = useMemo(() => ({\n    ctrls: [],\n    queue: [],\n\n    flush(ctrl, updates) {\n      const springs = getSprings(ctrl, updates);\n      const canFlushSync = layoutId.current > 0 && !state.queue.length && !Object.keys(springs).some(key => !ctrl.springs[key]);\n      return canFlushSync ? flushUpdateQueue(ctrl, updates) : new Promise(resolve => {\n        setSprings(ctrl, springs);\n        state.queue.push(() => {\n          resolve(flushUpdateQueue(ctrl, updates));\n        });\n        forceUpdate();\n      });\n    }\n\n  }), []);\n  const ctrls = useRef([...state.ctrls]);\n  const updates = [];\n  const prevLength = usePrev(length) || 0;\n  useMemo(() => {\n    each(ctrls.current.slice(length, prevLength), ctrl => {\n      detachRefs(ctrl, ref);\n      ctrl.stop(true);\n    });\n    ctrls.current.length = length;\n    declareUpdates(prevLength, length);\n  }, [length]);\n  useMemo(() => {\n    declareUpdates(0, Math.min(prevLength, length));\n  }, deps);\n\n  function declareUpdates(startIndex, endIndex) {\n    for (let i = startIndex; i < endIndex; i++) {\n      const ctrl = ctrls.current[i] || (ctrls.current[i] = new Controller(null, state.flush));\n      const update = propsFn ? propsFn(i, ctrl) : props[i];\n\n      if (update) {\n        updates[i] = declareUpdate(update);\n      }\n    }\n  }\n\n  const springs = ctrls.current.map((ctrl, i) => getSprings(ctrl, updates[i]));\n  const context = useContext(SpringContext);\n  const prevContext = usePrev(context);\n  const hasContext = context !== prevContext && hasProps(context);\n  useIsomorphicLayoutEffect(() => {\n    layoutId.current++;\n    state.ctrls = ctrls.current;\n    const {\n      queue\n    } = state;\n\n    if (queue.length) {\n      state.queue = [];\n      each(queue, cb => cb());\n    }\n\n    each(ctrls.current, (ctrl, i) => {\n      ref == null ? void 0 : ref.add(ctrl);\n\n      if (hasContext) {\n        ctrl.start({\n          default: context\n        });\n      }\n\n      const update = updates[i];\n\n      if (update) {\n        replaceRef(ctrl, update.ref);\n\n        if (ctrl.ref) {\n          ctrl.queue.push(update);\n        } else {\n          ctrl.start(update);\n        }\n      }\n    });\n  });\n  useOnce(() => () => {\n    each(state.ctrls, ctrl => ctrl.stop(true));\n  });\n  const values = springs.map(x => _extends({}, x));\n  return ref ? [values, ref] : values;\n}\n\nfunction useSpring(props, deps) {\n  const isFn = is.fun(props);\n  const [[values], ref] = useSprings(1, isFn ? props : [props], isFn ? deps || [] : deps);\n  return isFn || arguments.length == 2 ? [values, ref] : values;\n}\n\nconst initSpringRef = () => SpringRef();\n\nconst useSpringRef = () => useState(initSpringRef)[0];\n\nconst useSpringValue = (initial, props) => {\n  const springValue = useConstant(() => new SpringValue(initial, props));\n  useOnce(() => () => {\n    springValue.stop();\n  });\n  return springValue;\n};\n\nfunction useTrail(length, propsArg, deps) {\n  const propsFn = is.fun(propsArg) && propsArg;\n  if (propsFn && !deps) deps = [];\n  let reverse = true;\n  let passedRef = undefined;\n  const result = useSprings(length, (i, ctrl) => {\n    const props = propsFn ? propsFn(i, ctrl) : propsArg;\n    passedRef = props.ref;\n    reverse = reverse && props.reverse;\n    return props;\n  }, deps || [{}]);\n  useIsomorphicLayoutEffect(() => {\n    each(result[1].current, (ctrl, i) => {\n      const parent = result[1].current[i + (reverse ? 1 : -1)];\n      replaceRef(ctrl, passedRef);\n\n      if (ctrl.ref) {\n        if (parent) {\n          ctrl.update({\n            to: parent.springs\n          });\n        }\n\n        return;\n      }\n\n      if (parent) {\n        ctrl.start({\n          to: parent.springs\n        });\n      } else {\n        ctrl.start();\n      }\n    });\n  }, deps);\n\n  if (propsFn || arguments.length == 3) {\n    var _passedRef;\n\n    const ref = (_passedRef = passedRef) != null ? _passedRef : result[1];\n\n    ref['_getProps'] = (propsArg, ctrl, i) => {\n      const props = is.fun(propsArg) ? propsArg(i, ctrl) : propsArg;\n\n      if (props) {\n        const parent = ref.current[i + (props.reverse ? 1 : -1)];\n        if (parent) props.to = parent.springs;\n        return props;\n      }\n    };\n\n    return result;\n  }\n\n  return result[0];\n}\n\nlet TransitionPhase;\n\n(function (TransitionPhase) {\n  TransitionPhase[\"MOUNT\"] = \"mount\";\n  TransitionPhase[\"ENTER\"] = \"enter\";\n  TransitionPhase[\"UPDATE\"] = \"update\";\n  TransitionPhase[\"LEAVE\"] = \"leave\";\n})(TransitionPhase || (TransitionPhase = {}));\n\nfunction useTransition(data, props, deps) {\n  const propsFn = is.fun(props) && props;\n  const {\n    reset,\n    sort,\n    trail = 0,\n    expires = true,\n    exitBeforeEnter = false,\n    onDestroyed,\n    ref: propsRef,\n    config: propsConfig\n  } = propsFn ? propsFn() : props;\n  const ref = useMemo(() => propsFn || arguments.length == 3 ? SpringRef() : void 0, []);\n  const items = toArray(data);\n  const transitions = [];\n  const usedTransitions = useRef(null);\n  const prevTransitions = reset ? null : usedTransitions.current;\n  useIsomorphicLayoutEffect(() => {\n    usedTransitions.current = transitions;\n  });\n  useOnce(() => {\n    each(transitions, t => {\n      ref == null ? void 0 : ref.add(t.ctrl);\n      t.ctrl.ref = ref;\n    });\n    return () => {\n      each(usedTransitions.current, t => {\n        if (t.expired) {\n          clearTimeout(t.expirationId);\n        }\n\n        detachRefs(t.ctrl, ref);\n        t.ctrl.stop(true);\n      });\n    };\n  });\n  const keys = getKeys(items, propsFn ? propsFn() : props, prevTransitions);\n  const expired = reset && usedTransitions.current || [];\n  useIsomorphicLayoutEffect(() => each(expired, ({\n    ctrl,\n    item,\n    key\n  }) => {\n    detachRefs(ctrl, ref);\n    callProp(onDestroyed, item, key);\n  }));\n  const reused = [];\n  if (prevTransitions) each(prevTransitions, (t, i) => {\n    if (t.expired) {\n      clearTimeout(t.expirationId);\n      expired.push(t);\n    } else {\n      i = reused[i] = keys.indexOf(t.key);\n      if (~i) transitions[i] = t;\n    }\n  });\n  each(items, (item, i) => {\n    if (!transitions[i]) {\n      transitions[i] = {\n        key: keys[i],\n        item,\n        phase: TransitionPhase.MOUNT,\n        ctrl: new Controller()\n      };\n      transitions[i].ctrl.item = item;\n    }\n  });\n\n  if (reused.length) {\n    let i = -1;\n    const {\n      leave\n    } = propsFn ? propsFn() : props;\n    each(reused, (keyIndex, prevIndex) => {\n      const t = prevTransitions[prevIndex];\n\n      if (~keyIndex) {\n        i = transitions.indexOf(t);\n        transitions[i] = _extends({}, t, {\n          item: items[keyIndex]\n        });\n      } else if (leave) {\n        transitions.splice(++i, 0, t);\n      }\n    });\n  }\n\n  if (is.fun(sort)) {\n    transitions.sort((a, b) => sort(a.item, b.item));\n  }\n\n  let delay = -trail;\n  const forceUpdate = useForceUpdate();\n  const defaultProps = getDefaultProps(props);\n  const changes = new Map();\n  const exitingTransitions = useRef(new Map());\n  const forceChange = useRef(false);\n  each(transitions, (t, i) => {\n    const key = t.key;\n    const prevPhase = t.phase;\n    const p = propsFn ? propsFn() : props;\n    let to;\n    let phase;\n    let propsDelay = callProp(p.delay || 0, key);\n\n    if (prevPhase == TransitionPhase.MOUNT) {\n      to = p.enter;\n      phase = TransitionPhase.ENTER;\n    } else {\n      const isLeave = keys.indexOf(key) < 0;\n\n      if (prevPhase != TransitionPhase.LEAVE) {\n        if (isLeave) {\n          to = p.leave;\n          phase = TransitionPhase.LEAVE;\n        } else if (to = p.update) {\n          phase = TransitionPhase.UPDATE;\n        } else return;\n      } else if (!isLeave) {\n        to = p.enter;\n        phase = TransitionPhase.ENTER;\n      } else return;\n    }\n\n    to = callProp(to, t.item, i);\n    to = is.obj(to) ? inferTo(to) : {\n      to\n    };\n\n    if (!to.config) {\n      const config = propsConfig || defaultProps.config;\n      to.config = callProp(config, t.item, i, phase);\n    }\n\n    delay += trail;\n\n    const payload = _extends({}, defaultProps, {\n      delay: propsDelay + delay,\n      ref: propsRef,\n      immediate: p.immediate,\n      reset: false\n    }, to);\n\n    if (phase == TransitionPhase.ENTER && is.und(payload.from)) {\n      const _p = propsFn ? propsFn() : props;\n\n      const from = is.und(_p.initial) || prevTransitions ? _p.from : _p.initial;\n      payload.from = callProp(from, t.item, i);\n    }\n\n    const {\n      onResolve\n    } = payload;\n\n    payload.onResolve = result => {\n      callProp(onResolve, result);\n      const transitions = usedTransitions.current;\n      const t = transitions.find(t => t.key === key);\n      if (!t) return;\n\n      if (result.cancelled && t.phase != TransitionPhase.UPDATE) {\n        return;\n      }\n\n      if (t.ctrl.idle) {\n        const idle = transitions.every(t => t.ctrl.idle);\n\n        if (t.phase == TransitionPhase.LEAVE) {\n          const expiry = callProp(expires, t.item);\n\n          if (expiry !== false) {\n            const expiryMs = expiry === true ? 0 : expiry;\n            t.expired = true;\n\n            if (!idle && expiryMs > 0) {\n              if (expiryMs <= 0x7fffffff) t.expirationId = setTimeout(forceUpdate, expiryMs);\n              return;\n            }\n          }\n        }\n\n        if (idle && transitions.some(t => t.expired)) {\n          exitingTransitions.current.delete(t);\n\n          if (exitBeforeEnter) {\n            forceChange.current = true;\n          }\n\n          forceUpdate();\n        }\n      }\n    };\n\n    const springs = getSprings(t.ctrl, payload);\n\n    if (phase === TransitionPhase.LEAVE && exitBeforeEnter) {\n      exitingTransitions.current.set(t, {\n        phase,\n        springs,\n        payload\n      });\n    } else {\n      changes.set(t, {\n        phase,\n        springs,\n        payload\n      });\n    }\n  });\n  const context = useContext(SpringContext);\n  const prevContext = usePrev(context);\n  const hasContext = context !== prevContext && hasProps(context);\n  useIsomorphicLayoutEffect(() => {\n    if (hasContext) {\n      each(transitions, t => {\n        t.ctrl.start({\n          default: context\n        });\n      });\n    }\n  }, [context]);\n  each(changes, (_, t) => {\n    if (exitingTransitions.current.size) {\n      const ind = transitions.findIndex(state => state.key === t.key);\n      transitions.splice(ind, 1);\n    }\n  });\n  useIsomorphicLayoutEffect(() => {\n    each(exitingTransitions.current.size ? exitingTransitions.current : changes, ({\n      phase,\n      payload\n    }, t) => {\n      const {\n        ctrl\n      } = t;\n      t.phase = phase;\n      ref == null ? void 0 : ref.add(ctrl);\n\n      if (hasContext && phase == TransitionPhase.ENTER) {\n        ctrl.start({\n          default: context\n        });\n      }\n\n      if (payload) {\n        replaceRef(ctrl, payload.ref);\n\n        if ((ctrl.ref || ref) && !forceChange.current) {\n          ctrl.update(payload);\n        } else {\n          ctrl.start(payload);\n\n          if (forceChange.current) {\n            forceChange.current = false;\n          }\n        }\n      }\n    });\n  }, reset ? void 0 : deps);\n\n  const renderTransitions = render => React.createElement(React.Fragment, null, transitions.map((t, i) => {\n    const {\n      springs\n    } = changes.get(t) || t.ctrl;\n    const elem = render(_extends({}, springs), t.item, t, i);\n    return elem && elem.type ? React.createElement(elem.type, _extends({}, elem.props, {\n      key: is.str(t.key) || is.num(t.key) ? t.key : t.ctrl.id,\n      ref: elem.ref\n    })) : elem;\n  }));\n\n  return ref ? [renderTransitions, ref] : renderTransitions;\n}\nlet nextKey = 1;\n\nfunction getKeys(items, {\n  key,\n  keys = key\n}, prevTransitions) {\n  if (keys === null) {\n    const reused = new Set();\n    return items.map(item => {\n      const t = prevTransitions && prevTransitions.find(t => t.item === item && t.phase !== TransitionPhase.LEAVE && !reused.has(t));\n\n      if (t) {\n        reused.add(t);\n        return t.key;\n      }\n\n      return nextKey++;\n    });\n  }\n\n  return is.und(keys) ? items : is.fun(keys) ? items.map(keys) : toArray(keys);\n}\n\nconst _excluded$5 = [\"container\"];\nconst useScroll = (_ref = {}) => {\n  let {\n    container\n  } = _ref,\n      springOptions = _objectWithoutPropertiesLoose(_ref, _excluded$5);\n\n  const [scrollValues, api] = useSpring(() => _extends({\n    scrollX: 0,\n    scrollY: 0,\n    scrollXProgress: 0,\n    scrollYProgress: 0\n  }, springOptions), []);\n  useIsomorphicLayoutEffect(() => {\n    const cleanupScroll = onScroll(({\n      x,\n      y\n    }) => {\n      api.start({\n        scrollX: x.current,\n        scrollXProgress: x.progress,\n        scrollY: y.current,\n        scrollYProgress: y.progress\n      });\n    }, {\n      container: (container == null ? void 0 : container.current) || undefined\n    });\n    return () => {\n      each(Object.values(scrollValues), value => value.stop());\n      cleanupScroll();\n    };\n  }, []);\n  return scrollValues;\n};\n\nconst _excluded$4 = [\"container\"];\nconst useResize = _ref => {\n  let {\n    container\n  } = _ref,\n      springOptions = _objectWithoutPropertiesLoose(_ref, _excluded$4);\n\n  const [sizeValues, api] = useSpring(() => _extends({\n    width: 0,\n    height: 0\n  }, springOptions), []);\n  useIsomorphicLayoutEffect(() => {\n    const cleanupScroll = onResize(({\n      width,\n      height\n    }) => {\n      api.start({\n        width,\n        height,\n        immediate: sizeValues.width.get() === 0 || sizeValues.height.get() === 0\n      });\n    }, {\n      container: (container == null ? void 0 : container.current) || undefined\n    });\n    return () => {\n      each(Object.values(sizeValues), value => value.stop());\n      cleanupScroll();\n    };\n  }, []);\n  return sizeValues;\n};\n\nconst _excluded$3 = [\"to\", \"from\"],\n      _excluded2 = [\"root\", \"once\", \"amount\"];\nconst defaultThresholdOptions = {\n  any: 0,\n  all: 1\n};\nfunction useInView(props, args) {\n  const [isInView, setIsInView] = useState(false);\n  const ref = useRef();\n  const propsFn = is.fun(props) && props;\n  const springsProps = propsFn ? propsFn() : {};\n\n  const {\n    to = {},\n    from = {}\n  } = springsProps,\n        restSpringProps = _objectWithoutPropertiesLoose(springsProps, _excluded$3);\n\n  const intersectionArguments = propsFn ? args : props;\n  const [springs, api] = useSpring(() => _extends({\n    from\n  }, restSpringProps), []);\n  useIsomorphicLayoutEffect(() => {\n    const element = ref.current;\n\n    const _ref = intersectionArguments != null ? intersectionArguments : {},\n          {\n      root,\n      once,\n      amount = 'any'\n    } = _ref,\n          restArgs = _objectWithoutPropertiesLoose(_ref, _excluded2);\n\n    if (!element || once && isInView || typeof IntersectionObserver === 'undefined') return;\n    const activeIntersections = new WeakMap();\n\n    const onEnter = () => {\n      if (to) {\n        api.start(to);\n      }\n\n      setIsInView(true);\n\n      const cleanup = () => {\n        if (from) {\n          api.start(from);\n        }\n\n        setIsInView(false);\n      };\n\n      return once ? undefined : cleanup;\n    };\n\n    const handleIntersection = entries => {\n      entries.forEach(entry => {\n        const onLeave = activeIntersections.get(entry.target);\n\n        if (entry.isIntersecting === Boolean(onLeave)) {\n          return;\n        }\n\n        if (entry.isIntersecting) {\n          const newOnLeave = onEnter();\n\n          if (is.fun(newOnLeave)) {\n            activeIntersections.set(entry.target, newOnLeave);\n          } else {\n            observer.unobserve(entry.target);\n          }\n        } else if (onLeave) {\n          onLeave();\n          activeIntersections.delete(entry.target);\n        }\n      });\n    };\n\n    const observer = new IntersectionObserver(handleIntersection, _extends({\n      root: root && root.current || undefined,\n      threshold: typeof amount === 'number' || Array.isArray(amount) ? amount : defaultThresholdOptions[amount]\n    }, restArgs));\n    observer.observe(element);\n    return () => observer.unobserve(element);\n  }, [intersectionArguments]);\n\n  if (propsFn) {\n    return [ref, springs];\n  }\n\n  return [ref, isInView];\n}\n\nconst _excluded$2 = [\"children\"];\nfunction Spring(_ref) {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$2);\n\n  return children(useSpring(props));\n}\n\nconst _excluded$1 = [\"items\", \"children\"];\nfunction Trail(_ref) {\n  let {\n    items,\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n\n  const trails = useTrail(items.length, props);\n  return items.map((item, index) => {\n    const result = children(item, index);\n    return is.fun(result) ? result(trails[index]) : result;\n  });\n}\n\nconst _excluded = [\"items\", \"children\"];\nfunction Transition(_ref) {\n  let {\n    items,\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return useTransition(items, props)(children);\n}\n\nclass Interpolation extends FrameValue {\n  constructor(source, args) {\n    super();\n    this.key = void 0;\n    this.idle = true;\n    this.calc = void 0;\n    this._active = new Set();\n    this.source = source;\n    this.calc = createInterpolator(...args);\n\n    const value = this._get();\n\n    const nodeType = getAnimatedType(value);\n    setAnimated(this, nodeType.create(value));\n  }\n\n  advance(_dt) {\n    const value = this._get();\n\n    const oldValue = this.get();\n\n    if (!isEqual(value, oldValue)) {\n      getAnimated(this).setValue(value);\n\n      this._onChange(value, this.idle);\n    }\n\n    if (!this.idle && checkIdle(this._active)) {\n      becomeIdle(this);\n    }\n  }\n\n  _get() {\n    const inputs = is.arr(this.source) ? this.source.map(getFluidValue) : toArray(getFluidValue(this.source));\n    return this.calc(...inputs);\n  }\n\n  _start() {\n    if (this.idle && !checkIdle(this._active)) {\n      this.idle = false;\n      each(getPayload(this), node => {\n        node.done = false;\n      });\n\n      if (Globals.skipAnimation) {\n        raf.batchedUpdates(() => this.advance());\n        becomeIdle(this);\n      } else {\n        frameLoop.start(this);\n      }\n    }\n  }\n\n  _attach() {\n    let priority = 1;\n    each(toArray(this.source), source => {\n      if (hasFluidValue(source)) {\n        addFluidObserver(source, this);\n      }\n\n      if (isFrameValue(source)) {\n        if (!source.idle) {\n          this._active.add(source);\n        }\n\n        priority = Math.max(priority, source.priority + 1);\n      }\n    });\n    this.priority = priority;\n\n    this._start();\n  }\n\n  _detach() {\n    each(toArray(this.source), source => {\n      if (hasFluidValue(source)) {\n        removeFluidObserver(source, this);\n      }\n    });\n\n    this._active.clear();\n\n    becomeIdle(this);\n  }\n\n  eventObserved(event) {\n    if (event.type == 'change') {\n      if (event.idle) {\n        this.advance();\n      } else {\n        this._active.add(event.parent);\n\n        this._start();\n      }\n    } else if (event.type == 'idle') {\n      this._active.delete(event.parent);\n    } else if (event.type == 'priority') {\n      this.priority = toArray(this.source).reduce((highest, parent) => Math.max(highest, (isFrameValue(parent) ? parent.priority : 0) + 1), 0);\n    }\n  }\n\n}\n\nfunction isIdle(source) {\n  return source.idle !== false;\n}\n\nfunction checkIdle(active) {\n  return !active.size || Array.from(active).every(isIdle);\n}\n\nfunction becomeIdle(self) {\n  if (!self.idle) {\n    self.idle = true;\n    each(getPayload(self), node => {\n      node.done = true;\n    });\n    callFluidObservers(self, {\n      type: 'idle',\n      parent: self\n    });\n  }\n}\n\nconst to = (source, ...args) => new Interpolation(source, args);\nconst interpolate = (source, ...args) => (deprecateInterpolate(), new Interpolation(source, args));\n\nGlobals.assign({\n  createStringInterpolator,\n  to: (source, args) => new Interpolation(source, args)\n});\nconst update = frameLoop.advance;\n\nexport { BailSignal, Controller, FrameValue, Interpolation, Spring, SpringContext, SpringRef, SpringValue, Trail, Transition, config, inferTo, interpolate, to, update, useChain, useInView, useResize, useScroll, useSpring, useSpringRef, useSpringValue, useSprings, useTrail, useTransition };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}