{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\HTML\\\\blog\\\\BlogProject\\\\client\\\\src\\\\pages\\\\Blog.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getBlogBySlugAsync } from '../features/post/blogSlice';\nimport Helmet from '../components/Helmet';\nimport Banner from '../components/Banner';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PageNotFound from './PageNotFound';\nimport Comment from '../components/Comment';\nimport alt from '../assets/image/blog/alt.jpg';\nimport { getAllCommentsByBlogAsync } from '../features/comment/commentSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Blog() {\n  _s();\n\n  const params = useParams();\n  const slug = params.slug;\n  const dispatch = useDispatch(); // const user = useSelector((state) => state.user);\n\n  const blogger = useSelector(state => state.blogger);\n  const blogs = useSelector(state => state.blog);\n  const comments = useSelector(state => state.comment);\n  const blog = Array.isArray(blogs) ? blogs === null || blogs === void 0 ? void 0 : blogs.find(blog => blog.slug === slug) : blogs;\n  useEffect(() => {\n    async () => {};\n\n    dispatch(getBlogBySlugAsync(slug));\n    dispatch(getAllCommentsByBlogAsync(blog === null || blog === void 0 ? void 0 : blog._id));\n  }, [dispatch, slug]);\n  console.log(comments);\n  if (typeof blog === 'object') // if (blog)\n    return /*#__PURE__*/_jsxDEV(Helmet, {\n      title: \"Blog\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog\",\n        children: [blog.coverImg !== undefined ? /*#__PURE__*/_jsxDEV(Banner, {\n          img: 'data:image/jpg;base64,' + blog.coverImg.toString('base64'),\n          alt: alt,\n          quote: blog.quote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Banner, {\n          img: alt,\n          alt: alt,\n          quote: blog.quote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blog__timestamp\",\n          children: `${blog.location === undefined ? blog.location + ' - ' : ''}${blog.date === undefined ? '' : blog.date.slice(0, 10)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blog__content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"blog__content__title\",\n            children: blog.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"blog__content__body\",\n            children: blog.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"blog__content__signature\",\n            children: blog.signature\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-section\",\n        children: comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n          comment: comment\n        }, comment._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n}\n\n_s(Blog, \"2Fzqn+zk39wI9rY4HKFwSg6qGmo=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Blog;\nexport default Blog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"names":["React","useEffect","useParams","getBlogBySlugAsync","Helmet","Banner","useDispatch","useSelector","PageNotFound","Comment","alt","getAllCommentsByBlogAsync","Blog","params","slug","dispatch","blogger","state","blogs","blog","comments","comment","Array","isArray","find","_id","console","log","coverImg","undefined","toString","quote","location","date","slice","title","content","signature","map"],"sources":["D:/Code/HTML/blog/BlogProject/client/src/pages/Blog.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getBlogBySlugAsync } from '../features/post/blogSlice';\r\nimport Helmet from '../components/Helmet';\r\nimport Banner from '../components/Banner';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PageNotFound from './PageNotFound';\r\nimport Comment from '../components/Comment';\r\nimport alt from '../assets/image/blog/alt.jpg';\r\nimport { getAllCommentsByBlogAsync } from '../features/comment/commentSlice';\r\n\r\nfunction Blog() {\r\n    const params = useParams();\r\n    const slug = params.slug;\r\n    const dispatch = useDispatch();\r\n    // const user = useSelector((state) => state.user);\r\n    const blogger = useSelector((state) => state.blogger);\r\n    const blogs = useSelector((state) => state.blog);\r\n    const comments = useSelector((state) => state.comment);\r\n    const blog = Array.isArray(blogs)\r\n        ? blogs?.find((blog) => blog.slug === slug)\r\n        : blogs;\r\n\r\n    useEffect(() => {\r\n\t\tasync()=>{\r\n\t\t\t\r\n\t\t}\r\n        dispatch(getBlogBySlugAsync(slug));\r\n        dispatch(getAllCommentsByBlogAsync(blog?._id));\r\n    }, [dispatch, slug]);\r\n\r\n\tconsole.log(comments)\r\n\r\n    if (typeof blog === 'object')\r\n        // if (blog)\r\n        return (\r\n            <Helmet title=\"Blog\">\r\n                <div className=\"blog\">\r\n                    {blog.coverImg !== undefined ? (\r\n                        <Banner\r\n                            img={\r\n                                'data:image/jpg;base64,' +\r\n                                blog.coverImg.toString('base64')\r\n                            }\r\n                            alt={alt}\r\n                            quote={blog.quote}\r\n                        />\r\n                    ) : (\r\n                        <Banner img={alt} alt={alt} quote={blog.quote} />\r\n                    )}\r\n                    <div className=\"blog__timestamp\">{`${\r\n                        blog.location === undefined ? blog.location + ' - ' : ''\r\n                    }${\r\n                        blog.date === undefined ? '' : blog.date.slice(0, 10)\r\n                    }`}</div>\r\n                    <div className=\"blog__content\">\r\n                        <div className=\"blog__content__title\">{blog.title}</div>\r\n                        <div className=\"blog__content__body\">\r\n                            {blog.content}\r\n                        </div>\r\n                        <div className=\"blog__content__signature\">\r\n                            {blog.signature}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"comment-section\">\r\n                    {comments.map((comment) => (\r\n                        <Comment comment={comment} key={comment._id} />\r\n                    ))}\r\n                </div>\r\n            </Helmet>\r\n        );\r\n}\r\n\r\nexport default Blog;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}