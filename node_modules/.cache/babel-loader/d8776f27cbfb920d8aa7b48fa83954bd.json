{"ast":null,"code":"import _objectDestructuringEmpty from\"D:/Code/HTML/blog/BlogProject/client/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js\";import _defineProperty from\"D:/Code/HTML/blog/BlogProject/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _regeneratorRuntime from\"D:/Code/HTML/blog/BlogProject/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/Code/HTML/blog/BlogProject/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var _extraReducers;import{createSlice,createAsyncThunk}from'@reduxjs/toolkit';import Axios from'axios';import authHeader from'../common/authHeader';import serverUrl from'../common/common';var commentUrl='api/comment';export var getAllCommentsByBlogAsync=createAsyncThunk('comment/getAllCommentsByBlogAsync',/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(blogID){var response,tasks;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Axios.get(\"\".concat(serverUrl).concat(commentUrl,\"/get-blog-comments?blogID=\").concat(blogID),{headers:authHeader()});case 2:response=_context.sent;tasks=response.data;return _context.abrupt(\"return\",{tasks:tasks});case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());// export const getAllcommentBySlugAsync = createAsyncThunk(\n//     'comment/getAllcommentBySlugAsync',\n//     async (slug) => {\n//         const response = await Axios.get(\n//             `${serverUrl}${commentUrl}/get-comment-by-slug?slug=${slug}`,\n//             { headers: authHeader() }\n//         );\n//         const tasks = response.data;\n//         return { tasks };\n//     }\n// );\nexport var createNewComment=createAsyncThunk('comment/createNewComment',/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(comment){var response,tasks;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return Axios.post(serverUrl+commentUrl+'/add-new-comment',comment,{headers:authHeader()});case 2:response=_context2.sent;tasks=response.data;return _context2.abrupt(\"return\",{tasks:tasks});case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}());var commentSlice=createSlice({name:'comment',initialState:[],reducers:{},extraReducers:(_extraReducers={},_defineProperty(_extraReducers,getAllCommentsByBlogAsync.fulfilled,function(state,action){console.log('fetching comments successfully');return action.payload.tasks.result;}),_defineProperty(_extraReducers,createNewComment.fulfilled,function(state,action){console.log('add new comment successfully');// return action.payload.tasks.result;\n}),_extraReducers)});_objectDestructuringEmpty(commentSlice.actions);export{};export default commentSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","Axios","authHeader","serverUrl","commentUrl","getAllCommentsByBlogAsync","blogID","get","headers","response","tasks","data","createNewComment","comment","post","commentSlice","name","initialState","reducers","extraReducers","fulfilled","state","action","console","log","payload","result","actions","reducer"],"sources":["D:/Code/HTML/blog/BlogProject/client/src/features/comment/commentSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport Axios from 'axios';\r\nimport authHeader from '../common/authHeader';\r\nimport serverUrl from '../common/common';\r\n\r\nconst commentUrl = 'api/comment';\r\n\r\nexport const getAllCommentsByBlogAsync = createAsyncThunk(\r\n    'comment/getAllCommentsByBlogAsync',\r\n    async (blogID) => {\r\n        const response = await Axios.get(\r\n            `${serverUrl}${commentUrl}/get-blog-comments?blogID=${blogID}`,\r\n            { headers: authHeader() }\r\n        );\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\n// export const getAllcommentBySlugAsync = createAsyncThunk(\r\n//     'comment/getAllcommentBySlugAsync',\r\n//     async (slug) => {\r\n//         const response = await Axios.get(\r\n//             `${serverUrl}${commentUrl}/get-comment-by-slug?slug=${slug}`,\r\n//             { headers: authHeader() }\r\n//         );\r\n//         const tasks = response.data;\r\n//         return { tasks };\r\n//     }\r\n// );\r\n\r\nexport const createNewComment = createAsyncThunk(\r\n    'comment/createNewComment',\r\n    async (comment) => {\r\n        // console.log(comment)\r\n        const response = await Axios.post(serverUrl + commentUrl + '/add-new-comment', comment, {\r\n            headers: authHeader(),\r\n        });\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nconst commentSlice = createSlice({\r\n    name: 'comment',\r\n    initialState: [],\r\n    reducers: {},\r\n    extraReducers: {\r\n        [getAllCommentsByBlogAsync.fulfilled]: (state, action) => {\r\n            console.log('fetching comments successfully');\r\n            return action.payload.tasks.result;\r\n        },\r\n        [createNewComment.fulfilled]: (state, action) => {\r\n            console.log('add new comment successfully');\r\n            // return action.payload.tasks.result;\r\n        },\r\n    },\r\n});\r\nexport const {} = commentSlice.actions;\r\nexport default commentSlice.reducer;\r\n"],"mappings":"miBAAA,OAASA,WAAT,CAAsBC,gBAAtB,KAA8C,kBAA9C,CACA,MAAOC,MAAP,KAAkB,OAAlB,CACA,MAAOC,WAAP,KAAuB,sBAAvB,CACA,MAAOC,UAAP,KAAsB,kBAAtB,CAEA,GAAMC,WAAU,CAAG,aAAnB,CAEA,MAAO,IAAMC,0BAAyB,CAAGL,gBAAgB,CACrD,mCADqD,4FAErD,iBAAOM,MAAP,6JAC2BL,MAAK,CAACM,GAAN,WAChBJ,SADgB,SACJC,UADI,sCACmCE,MADnC,EAEnB,CAAEE,OAAO,CAAEN,UAAU,EAArB,CAFmB,CAD3B,QACUO,QADV,eAKUC,KALV,CAKkBD,QAAQ,CAACE,IAL3B,iCAMW,CAAED,KAAK,CAALA,KAAF,CANX,wDAFqD,+DAAlD,CAYP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAO,IAAME,iBAAgB,CAAGZ,gBAAgB,CAC5C,0BAD4C,6FAE5C,kBAAOa,OAAP,kKAE2BZ,MAAK,CAACa,IAAN,CAAWX,SAAS,CAAGC,UAAZ,CAAyB,kBAApC,CAAwDS,OAAxD,CAAiE,CACpFL,OAAO,CAAEN,UAAU,EADiE,CAAjE,CAF3B,QAEUO,QAFV,gBAKUC,KALV,CAKkBD,QAAQ,CAACE,IAL3B,kCAMW,CAAED,KAAK,CAALA,KAAF,CANX,0DAF4C,iEAAzC,CAYP,GAAMK,aAAY,CAAGhB,WAAW,CAAC,CAC7BiB,IAAI,CAAE,SADuB,CAE7BC,YAAY,CAAE,EAFe,CAG7BC,QAAQ,CAAE,EAHmB,CAI7BC,aAAa,mDACRd,yBAAyB,CAACe,SADlB,CAC8B,SAACC,KAAD,CAAQC,MAAR,CAAmB,CACtDC,OAAO,CAACC,GAAR,CAAY,gCAAZ,EACA,MAAOF,OAAM,CAACG,OAAP,CAAef,KAAf,CAAqBgB,MAA5B,CACH,CAJQ,iCAKRd,gBAAgB,CAACQ,SALT,CAKqB,SAACC,KAAD,CAAQC,MAAR,CAAmB,CAC7CC,OAAO,CAACC,GAAR,CAAY,8BAAZ,EACA;AACH,CARQ,iBAJgB,CAAD,CAAhC,CAeO,0BAAWT,YAAY,CAACY,OAAxB,E,SACP,cAAeZ,aAAY,CAACa,OAA5B"},"metadata":{},"sourceType":"module"}