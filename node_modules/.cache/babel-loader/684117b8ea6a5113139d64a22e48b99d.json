{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\HTML\\\\blog\\\\BlogProject\\\\client\\\\src\\\\pages\\\\Blog.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getBlogBySlugAsync } from '../features/post/blogSlice';\nimport Helmet from '../components/Helmet';\nimport Banner from '../components/Banner';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PageNotFound from './PageNotFound';\nimport Comment from '../components/Comment';\nimport alt from '../assets/image/blog/alt.jpg';\nimport { createNewComment, getAllCommentsByBlogAsync } from '../features/comment/commentSlice';\nimport { useState } from 'react';\nimport Reply from '../components/Reply';\nimport { getBloggerByUserID } from '../features/user/bloggerSlice';\nimport axios, { Axios } from 'axios';\nimport serverUrl from '../features/common/common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Blog() {\n  _s();\n\n  const params = useParams();\n  const slug = params.slug;\n  const dispatch = useDispatch(); // const user = useSelector((state) => state.user);\n\n  const blogger = useSelector(state => state.blogger);\n  const user = useSelector(state => state.user);\n  const blogs = useSelector(state => state.blog);\n  const comments = useSelector(state => state.comment);\n  const blog = Array.isArray(blogs) ? blogs === null || blogs === void 0 ? void 0 : blogs.find(blog => blog.slug === slug) : blogs;\n  const commentUser = [];\n\n  async function getBlog() {\n    await dispatch(getBlogBySlugAsync(slug));\n    await dispatch(getAllCommentsByBlogAsync(blog === null || blog === void 0 ? void 0 : blog._id));\n  }\n\n  useEffect(() => {\n    getBlog();\n  }, [dispatch, slug, blog === null || blog === void 0 ? void 0 : blog._id]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const commentUserID = [...new Set(comments.map(comment => comment.userID))];\n      console.log(commentUserID);\n      await Promise.all(commentUserID.map(async userID => {\n        const result = (await axios(`${serverUrl}api/user/get-user-by-id?userID=${userID}`)).data.result;\n        commentUser.push(result);\n      }));\n      console.log(commentUser);\n    };\n\n    fetchData();\n  }, [comments]); // console.log(comments);\n\n  if (typeof blog === 'object') // if (blog)\n    return /*#__PURE__*/_jsxDEV(Helmet, {\n      title: \"Blog\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog\",\n        children: [blog.coverImg !== undefined ? /*#__PURE__*/_jsxDEV(Banner, {\n          img: 'data:image/jpg;base64,' + blog.coverImg.toString('base64'),\n          alt: alt,\n          quote: blog.quote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Banner, {\n          img: alt,\n          alt: alt,\n          quote: blog.quote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blog__timestamp\",\n          children: `${blog.location === undefined ? blog.location + ' - ' : ''}${blog.date === undefined ? '' : blog.date.slice(0, 10)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blog__content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"blog__content__title\",\n            children: blog.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"blog__content__body\",\n            children: blog.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"blog__content__signature\",\n            children: blog.signature\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-section\",\n        children: [/*#__PURE__*/_jsxDEV(Reply, {\n          blogID: blog._id,\n          userID: user._id,\n          isHeadComment: true,\n          parentID: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), comments.map(comment => {\n          return /*#__PURE__*/_jsxDEV(Comment, {\n            comment: comment,\n            blogID: blog._id,\n            userID: user._id,\n            commentUser: commentUser,\n            alias: blogger.alias,\n            head: true,\n            lastchild: false\n          }, comment._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n}\n\n_s(Blog, \"9YQN4jH//e4GLjAGNNUwLWCvqDo=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Blog;\nexport default Blog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"names":["React","useEffect","useParams","getBlogBySlugAsync","Helmet","Banner","useDispatch","useSelector","PageNotFound","Comment","alt","createNewComment","getAllCommentsByBlogAsync","useState","Reply","getBloggerByUserID","axios","Axios","serverUrl","Blog","params","slug","dispatch","blogger","state","user","blogs","blog","comments","comment","Array","isArray","find","commentUser","getBlog","_id","fetchData","commentUserID","Set","map","userID","console","log","Promise","all","result","data","push","coverImg","undefined","toString","quote","location","date","slice","title","content","signature","alias"],"sources":["D:/Code/HTML/blog/BlogProject/client/src/pages/Blog.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getBlogBySlugAsync } from '../features/post/blogSlice';\r\nimport Helmet from '../components/Helmet';\r\nimport Banner from '../components/Banner';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PageNotFound from './PageNotFound';\r\nimport Comment from '../components/Comment';\r\nimport alt from '../assets/image/blog/alt.jpg';\r\nimport {\r\n    createNewComment,\r\n    getAllCommentsByBlogAsync,\r\n} from '../features/comment/commentSlice';\r\nimport { useState } from 'react';\r\nimport Reply from '../components/Reply';\r\nimport { getBloggerByUserID } from '../features/user/bloggerSlice';\r\nimport axios, { Axios } from 'axios';\r\nimport serverUrl from '../features/common/common';\r\n\r\nfunction Blog() {\r\n    const params = useParams();\r\n    const slug = params.slug;\r\n    const dispatch = useDispatch();\r\n    // const user = useSelector((state) => state.user);\r\n    const blogger = useSelector((state) => state.blogger);\r\n    const user = useSelector((state) => state.user);\r\n    const blogs = useSelector((state) => state.blog);\r\n    const comments = useSelector((state) => state.comment);\r\n    const blog = Array.isArray(blogs)\r\n        ? blogs?.find((blog) => blog.slug === slug)\r\n        : blogs;\r\n\r\n    const commentUser = [];\r\n    async function getBlog() {\r\n        await dispatch(getBlogBySlugAsync(slug));\r\n        await dispatch(getAllCommentsByBlogAsync(blog?._id));\r\n    }\r\n\r\n    useEffect(() => {\r\n        getBlog();\r\n    }, [dispatch, slug, blog?._id]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const commentUserID = [\r\n                ...new Set(comments.map((comment) => comment.userID)),\r\n            ];\r\n            console.log(commentUserID);\r\n\r\n            await Promise.all(\r\n                commentUserID.map(async (userID) => {\r\n                    const result = (\r\n                        await axios(\r\n                            `${serverUrl}api/user/get-user-by-id?userID=${userID}`\r\n                        )\r\n                    ).data.result;\r\n                    commentUser.push(result);\r\n                })\r\n            );\r\n            console.log(commentUser)\r\n        };\r\n        fetchData();\r\n    }, [comments]);\r\n\r\n    // console.log(comments);\r\n\r\n    if (typeof blog === 'object')\r\n        // if (blog)\r\n        return (\r\n            <Helmet title=\"Blog\">\r\n                <div className=\"blog\">\r\n                    {blog.coverImg !== undefined ? (\r\n                        <Banner\r\n                            img={\r\n                                'data:image/jpg;base64,' +\r\n                                blog.coverImg.toString('base64')\r\n                            }\r\n                            alt={alt}\r\n                            quote={blog.quote}\r\n                        />\r\n                    ) : (\r\n                        <Banner img={alt} alt={alt} quote={blog.quote} />\r\n                    )}\r\n                    <div className=\"blog__timestamp\">{`${\r\n                        blog.location === undefined ? blog.location + ' - ' : ''\r\n                    }${\r\n                        blog.date === undefined ? '' : blog.date.slice(0, 10)\r\n                    }`}</div>\r\n                    <div className=\"blog__content\">\r\n                        <div className=\"blog__content__title\">{blog.title}</div>\r\n                        <div className=\"blog__content__body\">\r\n                            {blog.content}\r\n                        </div>\r\n                        <div className=\"blog__content__signature\">\r\n                            {blog.signature}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"comment-section\">\r\n                    <Reply\r\n                        blogID={blog._id}\r\n                        userID={user._id}\r\n                        isHeadComment={true}\r\n                        parentID=\"\"\r\n                    />\r\n                    {comments.map((comment) => {\r\n                        return (\r\n                            <Comment\r\n                                comment={comment}\r\n                                key={comment._id}\r\n                                blogID={blog._id}\r\n                                userID={user._id}\r\n                                commentUser={commentUser}\r\n                                alias={blogger.alias}\r\n                                head={true}\r\n                                lastchild={false}\r\n                            />\r\n                        );\r\n                    })}\r\n                </div>\r\n            </Helmet>\r\n        );\r\n}\r\n\r\nexport default Blog;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}