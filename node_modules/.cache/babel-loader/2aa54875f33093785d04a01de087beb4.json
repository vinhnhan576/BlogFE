{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport Axios from \"axios\";\nexport const authenticateAccountAsync = createAsyncThunk(\"accounts/authenticateAccountAsync\", async (username, password) => {\n  const res = await Axios.get(`http://localhost:5000/auth}`);\n  const tasks = res.data;\n  return {\n    tasks\n  };\n});\nconst accountSlice = createSlice({\n  name: \"account\",\n  initialState: [],\n  reducers: {\n    login: async (state, action) => {\n      const res = await Axios.get('http://localhost:5000/auth}', {\n        params: {\n          username: action.payload.username,\n          password: action.payload.password\n        }\n      });\n      if (res) state.account = action.payload;else state.account = null;\n    },\n    logout: state => {\n      state.account = null;\n    }\n  },\n  extraReducers: {\n    [authenticateAccountAsync.fulfilled]: (state, action) => {\n      console.log(\"account authentication successfully\");\n      return action.payload.tasks;\n    }\n  }\n});\nexport const {\n  login,\n  logout\n} = accountSlice.actions;\nexport default accountSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","Axios","authenticateAccountAsync","username","password","res","get","tasks","data","accountSlice","name","initialState","reducers","login","state","action","params","payload","account","logout","extraReducers","fulfilled","console","log","actions","reducer"],"sources":["D:/Code/HTML/BlogProject/client/src/features/account/accountSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport Axios from \"axios\";\r\n\r\nexport const authenticateAccountAsync = createAsyncThunk(\r\n\t\"accounts/authenticateAccountAsync\",\r\n\tasync (username, password) => {\r\n\t\tconst res = await Axios.get(`http://localhost:5000/auth}`);\r\n\t\tconst tasks = res.data;\r\n\t\treturn { tasks };\r\n\t}\r\n);\r\n\r\nconst accountSlice = createSlice({\r\n\tname: \"account\",\r\n\tinitialState: [],\r\n\treducers: {\r\n\t\tlogin: async (state, action) => {\r\n\t\t\tconst res = await Axios.get('http://localhost:5000/auth}', {\r\n\t\t\t\tparams: {\r\n\t\t\t\t\tusername: action.payload.username,\r\n\t\t\t\t\tpassword: action.payload.password,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tif (res) state.account = action.payload;\r\n\t\t\telse state.account = null;\r\n\t\t},\r\n\t\tlogout: (state) => {\r\n\t\t\tstate.account = null;\r\n\t\t},\r\n\t},\r\n\textraReducers: {\r\n\t\t[authenticateAccountAsync.fulfilled]: (state, action) => {\r\n\t\t\tconsole.log(\"account authentication successfully\");\r\n\t\t\treturn action.payload.tasks;\r\n\t\t},\r\n\t},\r\n});\r\nexport const { login, logout } = accountSlice.actions;\r\nexport default accountSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,wBAAwB,GAAGF,gBAAgB,CACvD,mCADuD,EAEvD,OAAOG,QAAP,EAAiBC,QAAjB,KAA8B;EAC7B,MAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,6BAAX,CAAlB;EACA,MAAMC,KAAK,GAAGF,GAAG,CAACG,IAAlB;EACA,OAAO;IAAED;EAAF,CAAP;AACA,CANsD,CAAjD;AASP,MAAME,YAAY,GAAGV,WAAW,CAAC;EAChCW,IAAI,EAAE,SAD0B;EAEhCC,YAAY,EAAE,EAFkB;EAGhCC,QAAQ,EAAE;IACTC,KAAK,EAAE,OAAOC,KAAP,EAAcC,MAAd,KAAyB;MAC/B,MAAMV,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,6BAAV,EAAyC;QAC1DU,MAAM,EAAE;UACPb,QAAQ,EAAEY,MAAM,CAACE,OAAP,CAAed,QADlB;UAEPC,QAAQ,EAAEW,MAAM,CAACE,OAAP,CAAeb;QAFlB;MADkD,CAAzC,CAAlB;MAMA,IAAIC,GAAJ,EAASS,KAAK,CAACI,OAAN,GAAgBH,MAAM,CAACE,OAAvB,CAAT,KACKH,KAAK,CAACI,OAAN,GAAgB,IAAhB;IACL,CAVQ;IAWTC,MAAM,EAAGL,KAAD,IAAW;MAClBA,KAAK,CAACI,OAAN,GAAgB,IAAhB;IACA;EAbQ,CAHsB;EAkBhCE,aAAa,EAAE;IACd,CAAClB,wBAAwB,CAACmB,SAA1B,GAAsC,CAACP,KAAD,EAAQC,MAAR,KAAmB;MACxDO,OAAO,CAACC,GAAR,CAAY,qCAAZ;MACA,OAAOR,MAAM,CAACE,OAAP,CAAeV,KAAtB;IACA;EAJa;AAlBiB,CAAD,CAAhC;AAyBA,OAAO,MAAM;EAAEM,KAAF;EAASM;AAAT,IAAoBV,YAAY,CAACe,OAAvC;AACP,eAAef,YAAY,CAACgB,OAA5B"},"metadata":{},"sourceType":"module"}